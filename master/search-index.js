var searchIndex = JSON.parse('{\
"adler":{"doc":"Adler-32 checksum implementation.","t":[3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Adler32","adler32_slice","borrow","borrow_mut","checksum","clone","default","finish","fmt","from","from_checksum","into","new","try_from","try_into","type_id","write","write_slice"],"q":["adler","","","","","","","","","","","","","","","","",""],"d":["Adler-32 checksum calculator.","Calculates the Adler-32 checksum of a byte slice.","","","Returns the calculated checksum at this point in time.","","","","","Returns the argument unchanged.","Creates an <code>Adler32</code> instance from a precomputed Adler-32 …","Calls <code>U::from(self)</code>.","Creates a new Adler-32 instance with default state.","","","","","Adds <code>bytes</code> to the checksum calculation."],"i":[0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[[],1],[[]],[[]],[2,1],[2,2],[[],2],[2,3],[[2,4],5],[[]],[1,2],[[]],[[],2],[[],6],[[],6],[[],7],[2],[2]],"p":[[15,"u32"],[3,"Adler32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"adler32":{"doc":"A minimal implementation of Adler32 for Rust.","t":[3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RollingAdler32","adler32","borrow","borrow_mut","clone","clone_into","default","from","from_buffer","from_value","hash","into","new","remove","to_owned","try_from","try_into","type_id","update","update_buffer"],"q":["adler32","","","","","","","","","","","","","","","","","","",""],"d":["A rolling version of the Adler32 hash, which can ‘forget…","Consume a Read object and returns the Adler32 hash.","","","","","","Returns the argument unchanged.","Convenience function initializing a context from the hash …","Creates an Adler32 context with the given initial value.","Returns the current hash.","Calls <code>U::from(self)</code>.","Creates an empty Adler32 context (with hash 1).","Removes the given <code>byte</code> that was fed to the algorithm <code>size</code> …","","","","","Feeds a new <code>byte</code> to the algorithm to update the hash.","Feeds a vector of bytes to the algorithm to update the …"],"i":[0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[0,[1,[[3,[2]]]],[[]],[[]],[4,4],[[]],[[],4],[[]],[[],4],[2,4],[4,2],[[]],[[],4],[[4,5,6]],[[]],[[],7],[[],7],[[],8],[[4,6]],[4]],"p":[[8,"Read"],[15,"u32"],[6,"Result"],[3,"RollingAdler32"],[15,"usize"],[15,"u8"],[4,"Result"],[3,"TypeId"]]},\
"aliasable":{"doc":"Basic aliasable (non <code>core::ptr::Unique</code>) types.","tn":["AliasableMut","boxed","prelude","string","vec","AliasableBox","UniqueBox","allocator","as_mut","as_mut","as_ref","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call_mut","call_once","cause","clone","clone","clone","clone","clone_from","clone_from","clone_into","cmp","default","default","default","default","deref","deref","deref_mut","deref_mut","description","downcast","downcast","downcast","downcast_unchecked","downcast_unchecked","downcast_unchecked","drop","drop","eq","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw","from_raw_in","from_unique","from_unique_pin","ge","gt","hash","into","into","into_boxed_slice","into_future","into_inner","into_iter","into_pin","into_raw","into_raw_with_allocator","into_searcher","into_unique","into_unique_pin","is_contained_in","is_empty","is_prefix_of","is_suffix_of","last","le","leak","len","lt","ne","new","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next_back","nth","nth_back","partial_cmp","pin","pin_in","poll","poll_next","provide","resume","size_hint","size_hint","source","strip_prefix_of","strip_suffix_of","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_uninit_slice","try_new_zeroed","try_new_zeroed_in","try_new_zeroed_slice","type_id","type_id","write","write","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_length_prefix","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","AliasableMut","as_mut","as_ref","borrow","borrow_mut","deref","deref_mut","fmt","from","from","from_unique","from_unique_pin","into","into_unique","into_unique_pin","try_from","try_into","type_id","AliasableString","UniqueString","add","add_assign","as_bytes","as_mut","as_mut","as_mut_str","as_mut_vec","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_from","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","drain","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend_from_within","extend_one","extend_one","extend_one","extend_one","extend_one","extend_reserve","extend_reserve","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_raw_parts","from_str","from_unique","from_unique_pin","from_utf16","from_utf16_lossy","from_utf8","from_utf8_lossy","from_utf8_unchecked","hash","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert_str","into","into","into_boxed_str","into_bytes","into_bytes","into_raw_parts","into_searcher","into_unique","into_unique_pin","is_contained_in","is_empty","is_prefix_of","is_suffix_of","leak","len","ne","ne","ne","ne","new","partial_cmp","pop","push","push_str","remove","remove_matches","replace_range","reserve","reserve_exact","retain","shrink_to","shrink_to_fit","split_off","strip_prefix_of","strip_suffix_of","to_owned","to_string","to_string","truncate","try_from","try_from","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","with_capacity","write_char","write_str","AliasableVec","UniqueVec","allocator","append","as_mut","as_mut","as_mut","as_mut_ptr","as_mut_slice","as_ptr","as_ref","as_ref","as_ref","as_slice","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_from","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref","deref_mut","deref_mut","drain","drain_filter","drop","drop","eq","eq","eq","eq","eq","eq","extend","extend","extend_from_slice","extend_from_within","extend_one","extend_one","extend_reserve","extend_reserve","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_raw_parts","from_raw_parts_in","from_unique","from_unique_pin","hash","index","index_mut","insert","into","into","into_boxed_slice","into_flattened","into_iter","into_iter","into_iter","into_raw_parts","into_raw_parts_with_alloc","into_unique","into_unique_pin","is_empty","leak","len","ne","ne","ne","ne","ne","ne","new","new_in","partial_cmp","pop","push","push_within_capacity","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to","shrink_to_fit","spare_capacity_mut","splice","split_at_spare_mut","split_off","swap_remove","to_owned","truncate","try_from","try_from","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","with_capacity","with_capacity_in"],"q":["aliasable","","","","","aliasable::boxed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aliasable::prelude","","","","","","","","","","","","","","","","","","aliasable::string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aliasable::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Basic aliasable alternative to <code>&amp;mut</code>.","Aliasable <code>Box</code>.","Export of all types enabled.","Aliasable <code>String</code>.","Aliasable <code>Vec</code>.","Basic aliasable (non <code>core::ptr::Unique</code>) alternative to …","A pointer type that uniquely owns a heap allocation of …","Returns a reference to the underlying allocator.","","","","","Converts to <code>Box&lt;T, A&gt;</code>.","Converts to <code>Box&lt;[T], A&gt;</code>.","","","","","","","","","","","","Returns a new box with a <code>clone()</code> of this box’s contents.","","","","Copies <code>source</code>’s contents into <code>self</code> without creating a …","","","","","Creates a <code>Box&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","","","","","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Attempt to downcast the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","Downcasts the box to a concrete type.","","","","","","","","","Returns the argument unchanged.","","Converts a <code>Cow</code> into a box of dyn <code>Error</code>.","Converts a <code>&amp;str</code> into a <code>Box&lt;str&gt;</code>","Returns the argument unchanged.","","Converts a <code>&amp;[T]</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>CString</code> into a Box&lt;CStr&gt; without copying or …","Converts a <code>&amp;CStr</code> into a <code>Box&lt;CStr&gt;</code>, by copying the contents …","Converts a <code>Box&lt;str&gt;</code> into a <code>Box&lt;[u8]&gt;</code>","Converts a <code>String</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a <code>Cow</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …","Converts a <code>[T; N]</code> into a <code>Box&lt;[T]&gt;</code>","Convert a vector into a boxed slice.","Converts a <code>Cow&lt;&#39;_, [T]&gt;</code> into a <code>Box&lt;[T]&gt;</code>","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>Box&lt;CStr&gt;</code>, by copying the …","Converts a <code>T</code> into a <code>Box&lt;T&gt;</code>","Converts a type of <code>Error</code> + <code>Send</code> + <code>Sync</code> into a box of dyn …","Converts a <code>str</code> into a box of dyn <code>Error</code>.","Converts a <code>String</code> into a box of dyn <code>Error</code>.","Converts a <code>Cow&lt;&#39;_, str&gt;</code> into a <code>Box&lt;str&gt;</code>","Converts a <code>str</code> into a box of dyn <code>Error</code> + <code>Send</code> + <code>Sync</code>.","Converts a type of <code>Error</code> into a box of dyn <code>Error</code>.","","Constructs a box from a raw pointer.","Constructs a box from a raw pointer in the given allocator.","Construct an <code>AliasableBox</code> from a <code>UniqueBox</code>.","Convert a pinned <code>core::ptr::Unique</code> backed <code>UniqueBox</code> to a …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>Box&lt;T&gt;</code> into a <code>Box&lt;[T]&gt;</code>","","Consumes the <code>Box</code>, returning the wrapped value.","","Converts a <code>Box&lt;T&gt;</code> into a <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not …","Consumes the <code>Box</code>, returning a wrapped raw pointer.","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …","","Consumes <code>self</code> and converts it into a non-aliasable …","Convert a pinned <code>AliasableBox</code> to a <code>core::ptr::Unique</code> …","","","","","","","Consumes and leaks the <code>Box</code>, returning a mutable reference, …","","","","Allocates memory on the heap and then places <code>x</code> into it.","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new box with uninitialized contents.","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents.","Constructs a new boxed slice with uninitialized contents …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","Constructs a new boxed slice with uninitialized contents …","","","","","","Constructs a new <code>Pin&lt;Box&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Constructs a new <code>Pin&lt;Box&lt;T, A&gt;&gt;</code>. If <code>T</code> does not implement …","","","","","","","","","","","","","Attempts to convert a <code>Box&lt;[T]&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","Attempts to convert a <code>Vec&lt;T&gt;</code> into a <code>Box&lt;[T; N]&gt;</code>.","","","","Allocates memory on the heap then places <code>x</code> into it, …","Allocates memory in the given allocator then places <code>x</code> into …","Constructs a new box with uninitialized contents on the …","Constructs a new box with uninitialized contents in the …","Constructs a new boxed slice with uninitialized contents. …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new <code>Box</code> with uninitialized contents, with the …","Constructs a new boxed slice with uninitialized contents, …","","","Writes the value and converts to <code>Box&lt;T, A&gt;</code>.","","","","","","","","","","","","","","","","Basic aliasable alternative to <code>&amp;mut</code>.","","","","","","","","","Returns the argument unchanged.","Construct an <code>AliasableMut</code> from an <code>&amp;mut</code>.","Convert a pinned <code>&amp;mut</code> to a pinned <code>AliasableMut</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code> and converts it into a non-aliasable <code>&amp;mut</code>.","Convert a pinned <code>AliasableMut</code> to a pinned <code>&amp;mut</code>.","","","","Basic aliasable (non <code>core::ptr::Unique</code>) alternative to …","A UTF-8–encoded, growable string.","","","Returns a byte slice of this <code>String</code>’s contents.","","","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","","","","Extracts a string slice containing the entire <code>String</code>.","","","","","","","Returns this <code>String</code>’s capacity, in bytes.","Truncates this <code>String</code>, removing all contents.","","","","","Creates an empty <code>String</code>.","","","","","Removes the specified range from the string in bulk, …","","","","","","","","","","","Copies elements from <code>src</code> range to the end of the string.","","","","","","","","","","","","Returns the argument unchanged.","","Allocates an owned <code>String</code> from a single character.","Returns the argument unchanged.","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …","Converts a <code>&amp;String</code> into a <code>String</code>.","Converts a <code>&amp;mut str</code> into a <code>String</code>.","Converts a <code>&amp;str</code> into a <code>String</code>.","Converts a clone-on-write string to an owned instance of …","","","","","","","Creates a new <code>String</code> from a length, capacity, and pointer.","","Construct an <code>AliasableString</code> from a <code>UniqueString</code>.","Convert a pinned <code>core::ptr::Unique</code> backed <code>UniqueString</code> to a","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing …","Converts a vector of bytes to a <code>String</code>.","Converts a slice of bytes to a string, including invalid …","Converts a vector of bytes to a <code>String</code> without checking …","","","","","","","","","","","","","","Inserts a character into this <code>String</code> at a byte position.","Inserts a string slice into this <code>String</code> at a byte position.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>String</code> into a Box&lt;str&gt;.","Consumes <code>self</code> into an <code>AliasableVec</code> of UTF-8 bytes.","Converts a <code>String</code> into a byte vector.","Decomposes a <code>String</code> into its raw components.","","Consumes <code>self</code> and converts it into a non-aliasable …","Convert a pinned <code>AliasableString</code> to a <code>core::ptr::Unique</code> …","","Returns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…","","","Consumes and leaks the <code>String</code>, returning a mutable …","Returns the length of this <code>String</code>, in bytes, not <code>char</code>s or …","","","","","Creates a new empty <code>String</code>.","","Removes the last character from the string buffer and …","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends a given string slice onto the end of this <code>String</code>.","Removes a <code>char</code> from this <code>String</code> at a byte position and …","Remove all matches of pattern <code>pat</code> in the <code>String</code>.","Removes the specified range in the string, and replaces it …","Reserves capacity for at least <code>additional</code> bytes more than …","Reserves the minimum capacity for at least <code>additional</code> …","Retains only the characters specified by the predicate.","Shrinks the capacity of this <code>String</code> with a lower bound.","Shrinks the capacity of this <code>String</code> to match its length.","Splits the string into two at the given byte index.","","","","","","Shortens this <code>String</code> to the specified length.","","","","","Tries to reserve capacity for at least <code>additional</code> bytes …","Tries to reserve the minimum capacity for at least …","","","Creates a new empty <code>String</code> with at least the specified …","","","Basic aliasable (non <code>core::ptr::Unique</code>) alternative to …","A contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …","Returns a reference to the underlying allocator.","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","","","Returns an unsafe mutable pointer to the vector’s …","Extracts a mutable slice of the entire vector.","Returns a raw pointer to the vector’s buffer, or a …","","","","Extracts a slice containing the entire vector.","","","","","","","Returns the total number of elements the vector can hold …","Clears the vector, removing all values.","","","","","Removes consecutive repeated elements in the vector …","Removes all but the first of consecutive elements in the …","Removes all but the first of consecutive elements in the …","Creates an empty <code>Vec&lt;T&gt;</code>.","","","","","Removes the specified range from the vector in bulk, …","Creates an iterator which uses a closure to determine if …","","","","","","","","","","","Clones and appends all elements in a slice to the <code>Vec</code>.","Copies elements from <code>src</code> range to the end of the vector.","","","","","","","","Returns the argument unchanged.","Converts a <code>CString</code> into a Vec&lt;u8&gt;.","Allocate a <code>Vec&lt;u8&gt;</code> and fill it with a UTF-8 string.","Convert a clone-on-write slice into a vector.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Allocate a <code>Vec&lt;T&gt;</code> and fill it by cloning <code>s</code>’s items.","Convert a boxed slice into a vector by transferring …","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …","Returns the argument unchanged.","Allocate a <code>Vec&lt;T&gt;</code> and move <code>s</code>’s items into it.","Converts a <code>BinaryHeap&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","","Turn a <code>VecDeque&lt;T&gt;</code> into a <code>Vec&lt;T&gt;</code>.","","Creates a <code>Vec&lt;T&gt;</code> directly from a pointer, a capacity, and …","Creates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a capacity, a …","Construct an <code>AliasableVec</code> from a <code>UniqueVec</code>.","Convert a pinned <code>core::ptr::Unique</code> backed <code>UniqueVec</code> to a …","","","","Inserts an element at position <code>index</code> within the vector, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the vector into <code>Box&lt;[T]&gt;</code>.","Takes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.","","Creates a consuming iterator, that is, one that moves each …","","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Decomposes a <code>Vec&lt;T&gt;</code> into its raw components.","Consumes the <code>AliasableVec</code> and converts it back into a …","Convert a pinned <code>AliasableVec</code> to a <code>core::ptr::Unique</code> …","Returns <code>true</code> if the vector contains no elements.","Consumes and leaks the <code>Vec</code>, returning a mutable reference …","Returns the number of elements in the vector, also …","","","","","","","Constructs a new, empty <code>Vec&lt;T&gt;</code>.","Constructs a new, empty <code>Vec&lt;T, A&gt;</code>.","","Removes the last element from a vector and returns it, or …","Appends an element to the back of a collection.","Appends an element if there is sufficient spare capacity, …","Removes and returns the element at position <code>index</code> within …","Reserves capacity for at least <code>additional</code> more elements to …","Reserves the minimum capacity for at least <code>additional</code> more …","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","Shrinks the capacity of the vector with a lower bound.","Shrinks the capacity of the vector as much as possible.","Returns the remaining spare capacity of the vector as a …","Creates a splicing iterator that replaces the specified …","Returns vector content as a slice of <code>T</code>, along with the …","Splits the collection into two at the given index.","Removes an element from the vector and returns it.","","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","Tries to reserve capacity for at least <code>additional</code> more …","Tries to reserve the minimum capacity for at least …","","","Constructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …","Constructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …"],"i":[0,0,0,0,0,0,0,1,3,1,3,1,1,1,3,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1,1,1,3,1,1,1,3,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,3,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,3,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,21,21,21,43,21,21,21,43,21,21,21,43,21,21,43,21,21,21,21,21,21,21,21,21,43,21,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,43,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,21,21,43,21,21,21,21,0,0,22,22,54,22,22,22,22,22,54,22,22,22,54,22,22,54,22,22,22,22,22,22,22,22,22,22,22,22,54,22,54,22,22,22,54,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,54,22,54,54,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,54,54,22,22,22,22,54,22,22,22,22,22,22,22,22,54,54,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,54,22,54,22,22,22,54,22,22,22],"f":[0,0,0,0,0,0,0,[1],[[[3,[2]]]],[1],[[[3,[2]]]],[1],[[[1,[4]]],1],[1,1],[[]],[[]],[1],[[]],[[]],[1],[1],[1],[1],[[[1,[5]]],[[7,[6]]]],[[[1,[8,5]]],[[1,[8,5]]]],[1,1],[1,1],[[[1,[9,5]]],[[1,[9,5]]]],[[1,1]],[[1,1]],[[]],[[1,1],10],[[],[[1,[5]]]],[[],[[1,[9,5]]]],[[],[[1,[5]]]],[[],[[1,[8,5]]]],[[[3,[2]]]],[1],[[[3,[2]]]],[1],[[[1,[5]]],8],[[[1,[11]]],[[12,[1,[1,[11]]]]]],[[[1,[11]]],[[12,[1,[1,[11]]]]]],[[[1,[11]]],[[12,[1,[1,[11]]]]]],[[[1,[11]]],1],[[[1,[11]]],1],[[[1,[11]]],1],[[[3,[2]]]],[1],[[1,1],13],[1,14],[[3,15],16],[[1,15],[[12,[17]]]],[[1,15],[[12,[17]]]],[[1,15],[[12,[17]]]],[[]],[[[1,[2]]],[[3,[2]]]],[[[18,[8]]],[[1,[6,5]]]],[8,[[1,[8,5]]]],[[]],[19],[[],[[1,[5]]]],[20,[[1,[9,5]]]],[9,[[1,[9,5]]]],[[[1,[8]]],1],[21,[[1,[6,5]]]],[[[18,[8]]],[[1,[6,5]]]],[21,[[1,[8,5]]]],[[],[[1,[5]]]],[22,1],[18,[[1,[5]]]],[[[18,[9]]],[[1,[9,5]]]],[[],[[1,[5]]]],[[],[[1,[6,5]]]],[8,[[1,[6,5]]]],[21,[[1,[6,5]]]],[[[18,[8]]],[[1,[8,5]]]],[8,[[1,[6,5]]]],[[],[[1,[6,5]]]],[[],[[1,[5]]]],[[],[[1,[5]]]],[[],1],[[[1,[2]]],[[3,[2]]]],[[[23,[[1,[2]]]]],[[23,[[3,[2]]]]]],[[1,1],13],[[1,1],13],[1],[[]],[[]],[1,1],[[]],[1],[[]],[1,[[23,[1]]]],[1],[1],[8,24],[[[3,[2]]],[[1,[2]]]],[[[23,[[3,[2]]]]],[[23,[[1,[2]]]]]],[8,13],[1,13],[8,13],[8,13],[1,7],[[1,1],13],[1],[1,25],[[1,1],13],[[1,1],13],[[],[[1,[5]]]],[[],1],[[],[[1,[4,5]]]],[[],[[1,[4]]]],[25,[[1,[5]]]],[25,1],[[],[[1,[4,5]]]],[[],[[1,[4]]]],[25,[[1,[5]]]],[25,1],[1,7],[1,7],[[1,25],7],[[1,25],7],[[1,1],[[7,[10]]]],[[],[[23,[[1,[5]]]]]],[[],[[23,[1]]]],[[[23,[1]],26],27],[[[23,[1]],26],[[27,[7]]]],[28],[[[23,[1]]],29],[1],[[[1,[5]]]],[[[1,[5]]],[[7,[6]]]],[8,[[7,[8]]]],[8,[[7,[8]]]],[[]],[[],21],[[],12],[[[1,[5]]],[[12,[[1,[5]]]]]],[[[22,[5]]],[[12,[[1,[5]]]]]],[[],12],[[],12],[[],12],[[],[[12,[[1,[5]],30]]]],[[],[[12,[1,30]]]],[[],[[12,[[1,[4,5]],30]]]],[[],[[12,[[1,[4]],30]]]],[25,[[12,[[1,[5]],30]]]],[[],[[12,[[1,[4,5]],30]]]],[[],[[12,[[1,[4]],30]]]],[25,[[12,[[1,[5]],30]]]],[[],31],[[],31],[[[1,[4]]],1],[1],[[1,32]],[[1,33]],[[1,34]],[[1,35]],[[1,36]],[[1,37]],[[1,25]],[[1,8]],[[1,38]],[[1,39]],[[1,40]],[[1,14]],[[1,41]],[[1,25]],0,[[[42,[2]]]],[[[42,[2]]]],[[]],[[]],[[[42,[2]]]],[[[42,[2]]]],[[42,15],16],[[],[[42,[2]]]],[[]],[[],[[42,[2]]]],[23,[[23,[[42,[2]]]]]],[[]],[[[42,[2]]]],[[[23,[[42,[2]]]]],23],[[],12],[[],12],[[],31],0,0,[[21,8],21],[[21,8]],[21],[43,8],[21,8],[21,8],[21,22],[43,8],[21,8],[21],[21,8],[[]],[21,8],[[]],[[]],[21,8],[[]],[21,25],[21],[21,21],[[21,21]],[[]],[[21,21],10],[[],21],[43,8],[21,8],[43,8],[21,8],[21,44],[[21,8],13],[[21,21],13],[[21,8],13],[[21,18],13],[21],[21],[21],[21],[21],[21],[21],[[21,45]],[[21,45]],[[21,21]],[[21,8]],[[21,[18,[8]]]],[[21,25]],[[21,25]],[[43,15],16],[[21,15],[[12,[17]]]],[[21,15],[[12,[17]]]],[21,43],[[]],[43,21],[45,21],[[]],[[[1,[8,5]]],21],[21,21],[8,21],[8,21],[[[18,[8]]],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[41,25,25],21],[8,[[12,[21]]]],[21,43],[[[23,[21]]],[[23,[43]]]],[[],[[12,[21,46]]]],[[],21],[[[22,[41,5]]],[[12,[21,47]]]],[[],[[18,[8]]]],[[[22,[41,5]]],21],[21],[[21,[48,[25]]],8],[[21,[49,[25]]],8],[[21,50],8],[[21,[51,[25]]],8],[[21,[52,[25]]],8],[[21,[53,[25]]],8],[[21,[51,[25]]],8],[[21,[48,[25]]],8],[[21,[52,[25]]],8],[[21,50],8],[[21,[53,[25]]],8],[[21,[49,[25]]],8],[[21,25,45]],[[21,25,8]],[[]],[[]],[21,[[1,[8,5]]]],[43,[[54,[41]]]],[21,[[22,[41,5]]]],[21],[[21,8]],[43,21],[[[23,[43]]],[[23,[21]]]],[[21,8],13],[21,13],[[21,8],13],[[21,8],13],[21,8],[21,25],[[21,8],13],[[21,21],13],[[21,8],13],[[21,18],13],[[],21],[[21,21],[[7,[10]]]],[21,[[7,[45]]]],[[21,45]],[[21,8]],[[21,25],45],[21],[[21,8]],[[21,25]],[[21,25]],[21],[[21,25]],[21],[[21,25],21],[[21,8],[[7,[8]]]],[[21,8],[[7,[8]]]],[[]],[[],21],[21,21],[[21,25]],[[],12],[[],12],[[],12],[[],12],[[21,25],[[12,[55]]]],[[21,25],[[12,[55]]]],[[],31],[[],31],[25,21],[[21,45],[[12,[17]]]],[[21,8],[[12,[17]]]],0,0,[22],[[22,22]],[54],[22],[22,22],[22],[22],[22],[54],[22,22],[22],[22],[[]],[22],[[]],[[]],[[]],[22],[22,25],[22],[22,22],[[22,22]],[[]],[[22,22],10],[22],[22],[22],[[],[[22,[5]]]],[54],[22],[54],[22],[22,56],[22,57],[54],[22],[22,13],[[22,22],13],[22,13],[22,13],[22,13],[22,13],[22],[22],[22],[22],[22],[22],[[22,25]],[[22,25]],[[54,15],16],[[22,15],[[12,[17]]]],[22,54],[[]],[20,[[22,[41,5]]]],[8,[[22,[41,5]]]],[18,[[22,[5]]]],[[],[[22,[5]]]],[[],[[22,[5]]]],[1,22],[21,[[22,[41,5]]]],[[]],[[],[[22,[5]]]],[58,[[22,[5]]]],[54,22],[59,22],[[],[[22,[5]]]],[[25,25],[[22,[5]]]],[[25,25],22],[22,54],[[[23,[22]]],[[23,[54]]]],[22],[22],[22],[[22,25]],[[]],[[]],[22,1],[22,22],[22],[22],[22],[22],[22],[54,22],[[[23,[54]]],[[23,[22]]]],[22,13],[22],[22,25],[22,13],[22,13],[22,13],[22,13],[22,13],[[22,22],13],[[],[[22,[5]]]],[[],22],[[22,22],[[7,[10]]]],[22,7],[22],[22,12],[[22,25]],[[22,25]],[[22,25]],[[22,25]],[[22,25]],[22],[22],[[22,25]],[[22,25]],[22],[22],[22,60],[22],[[22,25],22],[[22,25]],[[]],[[22,25]],[[],12],[[],12],[[],12],[[],12],[[22,25],[[12,[55]]]],[[22,25],[[12,[55]]]],[[],31],[[],31],[25,[[22,[5]]]],[25,22]],"p":[[3,"UniqueBox"],[8,"Sized"],[3,"AliasableBox"],[19,"MaybeUninit"],[3,"Global"],[8,"Error"],[4,"Option"],[15,"str"],[3,"CStr"],[4,"Ordering"],[8,"Any"],[4,"Result"],[15,"bool"],[15,"u64"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Cow"],[15,"never"],[3,"CString"],[3,"UniqueString"],[3,"UniqueVec"],[3,"Pin"],[3,"CharPredicateSearcher"],[15,"usize"],[3,"Context"],[4,"Poll"],[3,"Demand"],[4,"GeneratorState"],[3,"AllocError"],[3,"TypeId"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u8"],[3,"AliasableMut"],[3,"AliasableString"],[3,"Drain"],[15,"char"],[3,"FromUtf16Error"],[3,"FromUtf8Error"],[3,"RangeTo"],[3,"RangeToInclusive"],[3,"RangeFull"],[3,"RangeFrom"],[3,"RangeInclusive"],[3,"Range"],[3,"AliasableVec"],[3,"TryReserveError"],[3,"Drain"],[3,"DrainFilter"],[3,"BinaryHeap"],[3,"VecDeque"],[3,"Splice"]]},\
"az":{"doc":"Numeric casts","t":[8,8,8,8,8,8,8,8,8,3,8,8,8,8,8,8,8,8,8,10,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11],"n":["Az","Cast","CastFrom","CheckedAs","CheckedCast","CheckedCastFrom","OverflowingAs","OverflowingCast","OverflowingCastFrom","Round","SaturatingAs","SaturatingCast","SaturatingCastFrom","UnwrappedAs","UnwrappedCast","UnwrappedCastFrom","WrappingAs","WrappingCast","WrappingCastFrom","az","az","borrow","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_from","cast_from","checked_as","checked_as","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast_from","checked_cast_from","clone","cmp","default","eq","fmt","fmt","fmt","fmt","from","into","overflowing_as","overflowing_as","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast_from","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_as","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast_from","wrapping_cast_from"],"q":["azd":["Used to cast values.","Used to cast values.","Used to cast values.","Used for checked casts.","Used for checked casts.","Used for checked casts.","Used for overflowing casts.","Used for overflowing casts.","Used for overflowing casts.","Used to convert floating-point numbers to integers with …","Used to cast into the destination type, saturating if the …","Used to cast into the destination type, saturating if the …","Used to cast, saturating if the value does not fit.","Used to cast values, panicking if the value does not fit.","Used to cast values, panicking if the value does not fit.","Used to cast values, panicking if the value does not fit.","Wrapping cast.","Wrapping cast.","Wrapping cast.","Casts the value.","","","","Casts the value.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.","","Casts the value.","","Casts the value, returning <code>None</code> if the value does not fit.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Casts the value.","","Overflowing cast.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.","","","Casts the value.","","Casts the value, saturating if the value does not fit.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.","","","","","Casts the value.","","Casts the value, panicking if the value does not fit.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.","","Casts the value.","","Casts the value, wrapping on overflow.","Casts the value.","","","","","","","","","","","","","","","","","","","","","","","","","Casts the value.",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,3,3,3,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,40,3,41,3,0,19,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,42,3,3,3,3,3,3,3,3,3,3,3,43,3,0,32,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,44,3,3,45,3,0,34,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,46,3,3,3,3,47,3,0,37,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,48,3,49,3,0,38,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,50,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[[]],[[[3,[2]]],4],[[[3,[5]]],6],[[[3,[5]]],7],[[[3,[5]]],[[9,[8]]]],[[[3,[2]]],[[9,[10]]]],[[[3,[2]]],11],[[[3,[5]]],8],[[[3,[2]]],[[9,[12]]]],[[[3,[2]]],[[9,[11]]]],[[[3,[5]]],[[9,[7]]]],[[[3,[2]]],[[9,[13]]]],[[[3,[5]]],13],[[[3,[5]]],[[9,[14]]]],[[[3,[5]]],[[9,[12]]]],[[[3,[2]]],12],[[[3,[5]]],12],[[[3,[5]]],[[9,[10]]]],[[[3,[5]]],14],[[[3,[2]]],13],[[[3,[2]]],[[9,[4]]]],[[[3,[5]]],11],[[[3,[2]]],15],[[[3,[5]]],10],[[[3,[2]]],[[9,[7]]]],[[[3,[5]]],[[9,[6]]]],[[[3,[5]]],[[9,[13]]]],[[[3,[2]]],[[9,[15]]]],[[[3,[5]]],[[9,[11]]]],[[[3,[2]]],[[9,[14]]]],[[[3,[2]]],16],[[[3,[2]]],7],[[[3,[5]]],[[9,[17]]]],[[[3,[2]]],17],[[[3,[2]]],[[9,[16]]]],[[[3,[2]]],14],[[[3,[2]]],[[9,[8]]]],[[[3,[5]]],17],[[[3,[2]]],[[9,[17]]]],[[[3,[5]]],[[9,[15]]]],[[[3,[2]]],6],[[[3,[5]]],15],[[[3,[5]]],16],[[[3,[5]]],[[9,[4]]]],[[[3,[2]]],[[9,[6]]]],[[[3,[2]]],10],[[[3,[5]]],4],[[[3,[2]]],8],[[[3,[5]]],[[9,[16]]]],[[]],[[]],[[],18],[[],18],[19,18],[[],18],[[[3,[5]]],[[18,[11]]]],[[[3,[5]]],[[18,[[9,[6]]]]]],[[[3,[5]]],[[18,[14]]]],[[[3,[2]]],[[18,[14]]]],[[[3,[2]]],[[18,[[9,[16]]]]]],[[[3,[2]]],[[18,[12]]]],[[[3,[5]]],[[18,[[9,[14]]]]]],[[[3,[2]]],[[18,[16]]]],[[[3,[2]]],[[18,[[9,[10]]]]]],[[[3,[5]]],[[18,[[9,[13]]]]]],[[[3,[5]]],[[18,[13]]]],[[[3,[5]]],[[18,[[9,[7]]]]]],[[[3,[5]]],[[18,[[9,[11]]]]]],[[[3,[2]]],[[18,[10]]]],[[[3,[5]]],[[18,[[9,[16]]]]]],[[[3,[5]]],[[18,[4]]]],[[[3,[5]]],[[18,[7]]]],[[[3,[2]]],[[18,[[9,[6]]]]]],[[[3,[2]]],[[18,[[9,[14]]]]]],[[[3,[2]]],[[18,[8]]]],[[[3,[5]]],[[18,[[9,[8]]]]]],[[[3,[5]]],[[18,[[9,[4]]]]]],[[[3,[2]]],[[18,[[9,[13]]]]]],[[[3,[5]]],[[18,[16]]]],[[[3,[5]]],[[18,[15]]]],[[[3,[2]]],[[18,[6]]]],[[[3,[2]]],[[18,[11]]]],[[[3,[5]]],[[18,[8]]]],[[[3,[2]]],[[18,[[9,[17]]]]]],[[[3,[5]]],[[18,[[9,[12]]]]]],[[[3,[5]]],[[18,[[9,[15]]]]]],[[[3,[2]]],[[18,[[9,[11]]]]]],[[[3,[2]]],[[18,[4]]]],[[[3,[5]]],[[18,[17]]]],[[[3,[5]]],[[18,[12]]]],[[[3,[2]]],[[18,[17]]]],[[[3,[2]]],[[18,[13]]]],[[[3,[5]]],[[18,[[9,[10]]]]]],[[[3,[2]]],[[18,[[9,[8]]]]]],[[[3,[5]]],[[18,[[9,[17]]]]]],[[[3,[2]]],[[18,[[9,[15]]]]]],[[[3,[2]]],[[18,[[9,[7]]]]]],[[[3,[5]]],[[18,[6]]]],[[[3,[2]]],[[18,[[9,[4]]]]]],[[[3,[5]]],[[18,[10]]]],[[[3,[2]]],[[18,[15]]]],[[[3,[2]]],[[18,[7]]]],[[[3,[2]]],[[18,[[9,[12]]]]]],[[],18],[[],18],[[[3,[20]]],[[3,[20]]]],[[[3,[21]],3],22],[[],[[3,[23]]]],[[[3,[24]],3],25],[[[3,[26]],27],28],[[[3,[29]],27],28],[[[3,[30]],27],28],[[[3,[31]],27],28],[[]],[[]],[[]],[[]],[32],[[]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[5]]]],[[[3,[5]]]],[[[3,[2]]]],[[[3,[2]]]],[[[3,[2]]]],[[]],[[]],[[[3,[33]],3],[[18,[22]]]],[[]],[[]],[34],[[]],[[[3,[2]]],15],[[[3,[2]]],10],[[[3,[2]]],16],[[[3,[2]]],7],[[[3,[5]]],16],[[[3,[2]]],8],[[[3,[5]]],14],[[[3,[2]]],12],[[[3,[5]]],11],[[[3,[5]]],4],[[[3,[5]]],15],[[[3,[2]]],14],[[[3,[2]]],6],[[[3,[5]]],13],[[[3,[5]]],17],[[[3,[2]]],17],[[[3,[5]]],7],[[[3,[5]]],6],[[[3,[2]]],13],[[[3,[5]]],10],[[[3,[2]]],11],[[[3,[5]]],12],[[[3,[2]]],4],[[[3,[5]]],8],[[]],[[]],[[],35],[[],35],[[],36],[[]],[[]],[37],[[]],[[[3,[5]]],15],[[[3,[5]]],[[9,[4]]]],[[[3,[2]]],[[9,[11]]]],[[[3,[5]]],10],[[[3,[2]]],[[9,[4]]]],[[[3,[2]]],13],[[[3,[5]]],8],[[[3,[5]]],[[9,[6]]]],[[[3,[5]]],6],[[[3,[2]]],15],[[[3,[5]]],[[9,[8]]]],[[[3,[2]]],[[9,[14]]]],[[[3,[2]]],[[9,[15]]]],[[[3,[5]]],[[9,[17]]]],[[[3,[5]]],17],[[[3,[5]]],[[9,[10]]]],[[[3,[5]]],12],[[[3,[2]]],17],[[[3,[2]]],14],[[[3,[5]]],[[9,[15]]]],[[[3,[2]]],[[9,[17]]]],[[[3,[2]]],11],[[[3,[2]]],[[9,[7]]]],[[[3,[2]]],[[9,[13]]]],[[[3,[5]]],[[9,[12]]]],[[[3,[5]]],[[9,[13]]]],[[[3,[2]]],6],[[[3,[2]]],4],[[[3,[5]]],4],[[[3,[2]]],[[9,[6]]]],[[[3,[5]]],7],[[[3,[2]]],7],[[[3,[5]]],[[9,[11]]]],[[[3,[2]]],10],[[[3,[5]]],11],[[[3,[2]]],[[9,[10]]]],[[[3,[2]]],[[9,[16]]]],[[[3,[5]]],[[9,[14]]]],[[[3,[2]]],[[9,[8]]]],[[[3,[5]]],14],[[[3,[2]]],12],[[[3,[5]]],13],[[[3,[2]]],[[9,[12]]]],[[[3,[5]]],[[9,[16]]]],[[[3,[5]]],16],[[[3,[2]]],16],[[[3,[2]]],8],[[[3,[5]]],[[9,[7]]]],[[]],[[]],[[]],[[]],[38],[[]],[[[3,[5]]],12],[[[3,[5]]],17],[[[3,[5]]],11],[[[3,[5]]],14],[[[3,[2]]],8],[[[3,[5]]],16],[[[3,[2]]],7],[[[3,[2]]],10],[[[3,[2]]],12],[[[3,[2]]],16],[[[3,[5]]],7],[[[3,[2]]],6],[[[3,[5]]],15],[[[3,[5]]],4],[[[3,[2]]],17],[[[3,[2]]],13],[[[3,[5]]],6],[[[3,[2]]],15],[[[3,[5]]],10],[[[3,[2]]],4],[[[3,[5]]],13],[[[3,[5]]],8],[[[3,[2]]],11],[[[3,[2]]],14],[[]],[[]]],"p":[[8,"Cast"],[15,"f64"],[3,"Round"],[15,"i64"],[15,"f32"],[15,"u8"],[15,"u128"],[15,"u64"],[3,"Wrapping"],[15,"u16"],[15,"i32"],[15,"u32"],[15,"usize"],[15,"i16"],[15,"i128"],[15,"i8"],[15,"isize"],[4,"Option"],[8,"CheckedCast"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"UpperExp"],[8,"Display"],[8,"LowerExp"],[8,"OverflowingCast"],[8,"PartialOrd"],[8,"SaturatingCast"],[4,"Result"],[3,"TypeId"],[8,"UnwrappedCast"],[8,"WrappingCast"],[8,"Az"],[8,"CastFrom"],[8,"CheckedAs"],[8,"CheckedCastFrom"],[8,"OverflowingAs"],[8,"OverflowingCastFrom"],[8,"SaturatingAs"],[8,"SaturatingCastFrom"],[8,"UnwrappedAs"],[8,"UnwrappedCastFrom"],[8,"WrappingAs"],[8,"WrappingCastFrom"]]},\
"base64":{"doc":"Configs","t":[17,17,13,13,17,4,3,13,4,17,13,13,13,13,17,17,13,17,17,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,5,11,0,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BCRYPT","BINHEX","Bcrypt","BinHex","CRYPT","CharacterSet","Config","Crypt","DecodeError","IMAP_MUTF7","ImapMutf7","InvalidByte","InvalidLastSymbol","InvalidLength","STANDARD","STANDARD_NO_PAD","Standard","URL_SAFE","URL_SAFE_NO_PAD","UrlSafe","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode_allow_trailing_bits","decode_config","decode_config_buf","decode_config_slice","description","display","encode","encode_config","encode_config_buf","encode_config_slice","eq","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","pad","provide","read","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","Base64Display","borrow","borrow_mut","fmt","from","into","to_string","try_from","try_into","type_id","with_config","DecoderReader","borrow","borrow_mut","fmt","from","into","new","read","try_from","try_into","type_id","EncoderStringWriter","EncoderWriter","borrow","borrow","borrow_mut","borrow_mut","drop","finish","flush","flush","fmt","from","from","from","into","into","into_inner","new","new","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":["base64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base64::display","","","","","","","","","","","base64::read","","","","","","","","","","","base64::write","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Bcrypt character set","BinHex character set","The bcrypt character set (uses …","The character set used in BinHex 4.0 files.","As per <code>crypt(3)</code> requirements","Available encoding character sets","Contains configuration parameters for base64 encoding","The <code>crypt(3)</code> character set (uses …","Errors that can occur while decoding.","IMAP modified UTF-7 requirements","The character set used in IMAP-modified UTF-7 (uses <code>+</code> and <code>,</code>…","An invalid byte was found in the input. The offset and …","The last non-padding input symbol’s encoded 6 bits have …","The length of the input is invalid. A typical cause of …","Standard character set with padding.","Standard character set without padding.","The standard character set (uses <code>+</code> and <code>/</code>).","URL-safe character set with padding","URL-safe character set without padding","The URL safe character set (uses <code>-</code> and <code>_</code>).","","","","","","","","","","","","","","Decode from string reference as octets. Returns a Result …","Sets whether to emit errors for nonzero trailing bits.","Decode from string reference as octets. Returns a Result …","Decode from string reference as octets. Writes into the …","Decode the input into the provided output slice.","","Enables base64’d output anywhere you might use a <code>Display</code> …","Encode arbitrary octets as base64. Returns a String. …","Encode arbitrary octets as base64. Returns a String.","Encode arbitrary octets as base64. Writes into the …","Encode arbitrary octets as base64. Writes into the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Config</code>.","Sets whether to pad output with <code>=</code> characters.","","Implementations of <code>io::Read</code> to transparently decode base64.","","","","","","","","","","","","","","Implementations of <code>io::Write</code> to transparently handle …","A convenience wrapper for base64’ing bytes into a format …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Create a <code>Base64Display</code> with the provided config.","A <code>Read</code> implementation that decodes base64 data read from …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new decoder that will read from the provided …","Decode input from the wrapped reader.","","","","A <code>Write</code> implementation that base64-encodes data using the …","A <code>Write</code> implementation that base64 encodes data before …","","","","","","Encode all remaining buffered data and write it, including …","Because this is usually treated as OK to call multiple …","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a EncoderStringWriter that will append to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Encode all remaining buffered data, including any trailing …","Create a new encoder that will write to the provided …","Create a EncoderStringWriter that will encode into a new …","","","","","","","Encode input and then write to the delegate writer.",""],"i":[0,0,4,4,0,0,0,4,0,0,4,1,1,1,0,0,4,0,0,4,1,4,5,1,4,5,1,1,4,5,1,4,5,0,5,0,0,0,1,0,0,0,0,0,1,1,1,4,5,1,4,5,1,4,5,5,5,1,0,1,4,5,1,1,4,5,1,4,5,1,4,5,0,0,18,18,18,18,18,18,18,18,18,18,0,21,21,21,21,21,21,21,21,21,21,0,0,24,25,24,25,24,24,24,25,24,24,25,25,24,25,25,24,25,24,25,24,25,24,25,24,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[1,1],[4,4],[5,5],[[]],[[]],[[]],[6,[[9,[[8,[7]],1]]]],[[5,10],5],[[6,5],[[9,[[8,[7]],1]]]],[[6,5,8],[[9,[1]]]],[[6,5],[[9,[11,1]]]],[1,12],0,[6,13],[[6,5],13],[[6,5,13]],[[6,5],11],[[1,1],10],[[1,14],15],[[1,14],15],[[4,14],15],[[5,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[4,10],5],[[5,10],5],[16],0,[[]],[[]],[[]],[[],13],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[18,14],[[9,[19]]]],[[]],[[]],[[],13],[[],9],[[],9],[[],17],[5,18],0,[[]],[[]],[[[21,[20]],14],15],[[]],[[]],[5,[[21,[20]]]],[[[21,[20]]],[[22,[11]]]],[[],9],[[],9],[[],17],0,0,[[]],[[]],[[]],[[]],[[[24,[23]]]],[[[24,[23]]],[[22,[23]]]],[[[24,[23]]],22],[[[25,[0]]],22],[[[24,[23]],14],15],[[]],[[]],0,[[]],[[]],0,[[23,5],[[24,[23]]]],[5,[[25,[13]]]],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[[[24,[23]]],[[22,[11]]]],[[[25,[0]]],[[22,[11]]]]],"p":[[4,"DecodeError"],[8,"Error"],[4,"Option"],[4,"CharacterSet"],[3,"Config"],[8,"AsRef"],[15,"u8"],[3,"Vec"],[4,"Result"],[15,"bool"],[15,"usize"],[15,"str"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"TypeId"],[3,"Base64Display"],[3,"Error"],[8,"Read"],[3,"DecoderReader"],[6,"Result"],[8,"Write"],[3,"EncoderWriter"],[3,"EncoderStringWriter"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"p":[]},\
"bytemuck":{"doc":"This crate gives small utilities for casting between plain …","t":[13,8,2,8,16,18,18,8,13,8,4,8,13,13,8,8,8,11,11,5,5,5,5,5,5,5,0,11,11,11,11,11,5,5,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,4,13,13,11,11,5,5,5,5,5,11,11,11,11,11,11,5,5,11,11,10,5,5,5,5,5,5,11,5,5,11,5,11],"n":["AlignmentMismatch","AnyBitPattern","CheckedBitPattern","Contiguous","Int","MAX_VALUE","MIN_VALUE","NoUninit","OutputSliceWouldHaveSlop","Pod","PodCastError","PodInOption","SizeMismatch","TargetAlignmentGreaterAndInputNotAligned","TransparentWrapper","Zeroable","ZeroableInOption","borrow","borrow_mut","bytes_of","bytes_of_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","checked","clone","eq","fmt","fmt","from","from_bytes","from_bytes_mut","from_integer","from_integer","hash","into","into_integer","into_integer","offset_of","offset_of","peel","peel","peel_mut","peel_mut","peel_ref","peel_ref","peel_slice","peel_slice","peel_slice_mut","peel_slice_mut","pod_align_to","pod_align_to_mut","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id","wrap","wrap","wrap_mut","wrap_mut","wrap_ref","wrap_ref","wrap_slice","wrap_slice","wrap_slice_mut","wrap_slice_mut","zeroed","zeroed","Bits","CheckedBitPattern","CheckedCastError","InvalidBitPattern","PodCastError","borrow","borrow_mut","cast","cast_mut","cast_ref","cast_slice","cast_slice_mut","clone","eq","fmt","fmt","from","from","from_bytes","from_bytes_mut","hash","into","is_valid_bit_pattern","pod_read_unaligned","try_cast","try_cast_mut","try_cast_ref","try_cast_slice","try_cast_slice_mut","try_from","try_from_bytes","try_from_bytes_mut","try_into","try_pod_read_unaligned","type_id"],"q":["bytemuck","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bytemuck::checked","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["For this type of cast the alignments must be exactly the …","Marker trait for “plain old data” types that are valid …","","A trait indicating that:","The primitive integer type with an identical …","The upper <em>inclusive</em> bound for valid instances of this type.","The lower <em>inclusive</em> bound for valid instances of this type.","Marker trait for “plain old data” types with no uninit …","If the element size changes then the output slice changes …","Marker trait for “plain old data”.","The things that can go wrong when casting between <code>Pod</code> data …","Trait for types which are Pod when wrapped in Option.","When casting a slice you can’t convert between ZST …","You tried to cast a slice to an element type with a higher …","A trait which indicates that a type is a …","Trait for types that can be safely created with <code>zeroed</code>.","Trait for types which are Zeroable when wrapped in Option.","","","Re-interprets <code>&amp;T</code> as <code>&amp;[u8]</code>.","Re-interprets <code>&amp;mut T</code> as <code>&amp;mut [u8]</code>.","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","Checked versions of the casting functions exposed in crate …","","","","","Returns the argument unchanged.","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","If <code>value</code> is within the range for valid instances of this …","If <code>value</code> is within the range for valid instances of this …","","Calls <code>U::from(self)</code>.","Perform the conversion from <code>C</code> into the underlying integral …","Perform the conversion from <code>C</code> into the underlying integral …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Find the offset in bytes of the given <code>$field</code> of <code>$Type</code>. …","Convert the wrapper type into the inner type.","Convert the wrapper type into the inner type.","Convert a mutable reference to the wrapper type into a …","Convert a mutable reference to the wrapper type into a …","Convert a reference to the wrapper type into a reference …","Convert a reference to the wrapper type into a reference …","Convert a slice to the wrapped type into a slice to the …","Convert a slice to the wrapped type into a slice to the …","Convert a mutable slice to the wrapped type into a mutable …","Convert a mutable slice to the wrapped type into a mutable …","As <code>align_to</code>, but safe because of the <code>Pod</code> bound.","As <code>align_to_mut</code>, but safe because of the <code>Pod</code> bound.","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.","","Convert the inner type into the wrapper type.","Convert the inner type into the wrapper type.","Convert a mutable reference to the inner type into a …","Convert a mutable reference to the inner type into a …","Convert a reference to the inner type into a reference to …","Convert a reference to the inner type into a reference to …","Convert a slice to the inner type into a slice to the …","Convert a slice to the inner type into a slice to the …","Convert a mutable slice to the inner type into a mutable …","Convert a mutable slice to the inner type into a mutable …","Calls <code>zeroed</code>.","Calls <code>zeroed</code>.","<code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> …","A marker trait that allows types that have some invalid …","The things that can go wrong when casting between …","When casting to a <code>CheckedBitPattern</code> type, it is possible …","An error occurred during a true-<code>Pod</code> cast","","","Cast <code>T</code> into <code>U</code>","Cast <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Cast <code>&amp;T</code> into <code>&amp;U</code>.","Cast <code>&amp;[A]</code> into <code>&amp;[B]</code>.","Cast <code>&amp;mut [T]</code> into <code>&amp;mut [U]</code>.","","","","","Returns the argument unchanged.","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Calls <code>U::from(self)</code>.","If this function returns true, then it must be valid to …","Reads the slice into a <code>T</code> value.","Try to cast <code>T</code> into <code>U</code>.","Try to convert a <code>&amp;mut T</code> into <code>&amp;mut U</code>.","Try to convert a <code>&amp;T</code> into <code>&amp;U</code>.","Try to convert <code>&amp;[A]</code> into <code>&amp;[B]</code> (possibly with a change in …","Try to convert <code>&amp;mut [A]</code> into <code>&amp;mut [B]</code> (possibly with a …","","Re-interprets <code>&amp;[u8]</code> as <code>&amp;T</code>.","Re-interprets <code>&amp;mut [u8]</code> as <code>&amp;mut T</code>.","","Reads from the bytes as if they were a <code>T</code>.",""],"i":[3,0,0,0,12,12,12,0,3,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,12,12,3,3,12,12,0,0,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,3,0,0,3,0,3,13,13,13,13,13,13,13,13,13,13,14,14,10,0,0,11,11,11,11,0,0,0,0,0,11,11,11,11,11,11,0,0,11,11,10,0,0,0,0,0,0,11,0,0,11,0,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,2],[[]],[[]],[[]],[[]],0,[3,3],[[3,3],4],[[3,5],6],[[3,5],6],[[]],[[]],[[]],[[],7],[[],7],[3],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[1,[[8,[2,3]]]],[[],[[8,[3]]]],[[],[[8,[3]]]],[[],[[8,[3]]]],[[],[[8,[3]]]],[[],8],[[],[[8,[3]]]],[[],[[8,[3]]]],[[],8],[[],[[8,[2,3]]]],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[1,10],[[]],[[]],[[]],[[]],[11,11],[[11,11],4],[[11,5],6],[[11,5],6],[[]],[3,11],[[]],[[]],[11],[[]],[[],4],[[],10],[1,[[8,[10,11]]]],[[],[[8,[11]]]],[[],[[8,[11]]]],[[],[[8,[11]]]],[[],[[8,[11]]]],[[],8],[[],[[8,[11]]]],[[],[[8,[11]]]],[[],8],[[],[[8,[10,11]]]],[[],9]],"p":[[8,"NoUninit"],[8,"AnyBitPattern"],[4,"PodCastError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"CheckedBitPattern"],[4,"CheckedCastError"],[8,"Contiguous"],[8,"TransparentWrapper"],[8,"Zeroable"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[6,4,8,6,4,6,6,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11],"n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","ReadBytesExt","WriteBytesExt","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32","read_f32","read_f32_into","read_f32_into","read_f32_into","read_f32_into_unchecked","read_f32_into_unchecked","read_f32_into_unchecked","read_f64","read_f64","read_f64","read_f64_into","read_f64_into","read_f64_into","read_f64_into_unchecked","read_f64_into_unchecked","read_f64_into_unchecked","read_i128","read_i128","read_i128","read_i128_into","read_i128_into","read_i128_into","read_i16","read_i16","read_i16","read_i16_into","read_i16_into","read_i16_into","read_i24","read_i24","read_i24","read_i32","read_i32","read_i32","read_i32_into","read_i32_into","read_i32_into","read_i48","read_i48","read_i48","read_i64","read_i64","read_i64","read_i64_into","read_i64_into","read_i64_into","read_i8","read_i8","read_i8_into","read_i8_into","read_int","read_int","read_int","read_int128","read_int128","read_int128","read_u128","read_u128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u24","read_u24","read_u32","read_u32","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u48","read_u48","read_u64","read_u64","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u64_into","read_u8","read_u8","read_uint","read_uint","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","read_uint128","read_uint128","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32","write_f32","write_f32_into","write_f64","write_f64","write_f64","write_f64_into","write_i128","write_i128","write_i128","write_i128_into","write_i16","write_i16","write_i16","write_i16_into","write_i24","write_i24","write_i24","write_i32","write_i32","write_i32","write_i32_into","write_i48","write_i48","write_i48","write_i64","write_i64","write_i64","write_i64_into","write_i8","write_i8","write_i8_into","write_int","write_int","write_int","write_int128","write_int128","write_int128","write_u128","write_u128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u24","write_u24","write_u32","write_u32","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u48","write_u48","write_u64","write_u64","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_u8","write_u8","write_uint","write_uint","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","write_uint128","write_uint128"],"q":["byteorderd":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","Extends <code>Read</code> with methods for reading numbers. (For <code>std::io</code>…","Extends <code>Write</code> with methods for writing numbers. (For …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads a sequence of IEEE754 single-precision (4 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads a sequence of IEEE754 double-precision (8 bytes) …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from the underlying reader.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a sequence of signed 128 bit integers from the …","Reads a sequence of signed 128 bit integers from the …","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from the underlying reader.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a sequence of signed 16 bit integers from the …","Reads a sequence of signed 16 bit integers from the …","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from the underlying reader.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from the underlying reader.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a sequence of signed 32 bit integers from the …","Reads a sequence of signed 32 bit integers from the …","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from the underlying reader.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from the underlying reader.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a sequence of signed 64 bit integers from the …","Reads a sequence of signed 64 bit integers from the …","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads a sequence of signed 8 bit integers from the …","Reads a sequence of signed 8 bit integers from the …","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from the underlying reader.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from the underlying …","Reads an unsigned 128 bit integer from the underlying …","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 128 bit integers from the …","Reads a sequence of unsigned 128 bit integers from the …","","","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from the underlying …","Reads an unsigned 16 bit integer from the underlying …","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 16 bit integers from the …","Reads a sequence of unsigned 16 bit integers from the …","","","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from the underlying …","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from the underlying …","Reads an unsigned 32 bit integer from the underlying …","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 32 bit integers from the …","Reads a sequence of unsigned 32 bit integers from the …","","","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from the underlying …","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from the underlying …","Reads an unsigned 64 bit integer from the underlying …","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a sequence of unsigned 64 bit integers from the …","Reads a sequence of unsigned 64 bit integers from the …","","","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from the underlying …","Reads an unsigned n-bytes integer from the underlying …","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer to the underlying writer.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer to the underlying writer.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer to the underlying writer.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer to the underlying writer.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer to the underlying writer.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer to the underlying writer.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 8 bit integer to the underlying writer.","Writes a signed 8 bit integer to the underlying writer.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed n-bytes integer to the underlying writer.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer to the underlying …","Writes an unsigned 128 bit integer to the underlying …","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer to the underlying writer.","Writes an unsigned 16 bit integer to the underlying writer.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer to the underlying writer.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer to the underlying writer.","Writes an unsigned 32 bit integer to the underlying writer.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer to the underlying writer.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer to the underlying writer.","Writes an unsigned 64 bit integer to the underlying writer.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned 8 bit integer to the underlying writer.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned n-bytes integer to the underlying …","Writes an unsigned n-bytes integer to the underlying …","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,24,1,2,24,1,2,24,24,24,24,24,1,2,24,1,2,24,1,2,24,1,2,1,2,1,2,1,2,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,24,25,25,25,25,25,25,24,25,25,24,24,25,25,1,2,24,25,25,1,2,24,25,25,1,2,24,25,25,1,2,25,25,24,24,25,25,1,2,24,25,25,1,2,25,25,24,24,25,25,1,2,24,25,25,1,2,25,25,24,25,25,1,2,24,25,25,1,2,1,2,1,2,1,2,1,2,26,26,24,24,26,26,24,24,26,26,24,24,26,26,24,24,26,26,24,26,26,24,24,26,26,24,26,26,24,24,26,26,24,26,26,24,26,26,24,24,26,26,1,2,24,1,2,24,26,26,1,2,24,1,2,26,26,24,24,26,26,1,2,24,1,2,26,26,24,24,26,26,1,2,24,1,2,26,26,24,26,26,1,2,24,26,26,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[[]],[[]],[[1,1],[[7,[3]]]],[[2,2],[[7,[3]]]],[[],[[9,[8]]]],[[],[[9,[8]]]],[[],8],[[],9],[[],9],[[]],[[],9],[[],9],[[]],[[],[[9,[10]]]],[[],[[9,[10]]]],[[],10],[[],9],[[],9],[[]],[[],9],[[],9],[[]],[[],[[9,[11]]]],[[],[[9,[11]]]],[[],11],[[],9],[[],9],[[]],[[],[[9,[12]]]],[[],[[9,[12]]]],[[],12],[[],9],[[],9],[[]],[[],[[9,[13]]]],[[],[[9,[13]]]],[[],13],[[],[[9,[13]]]],[[],[[9,[13]]]],[[],13],[[],9],[[],9],[[]],[[],[[9,[14]]]],[[],[[9,[14]]]],[[],14],[[],[[9,[14]]]],[[],[[9,[14]]]],[[],14],[[],9],[[],9],[[]],[[],[[9,[15]]]],[[],[[9,[15]]]],[[],9],[[],9],[16,[[9,[14]]]],[16,[[9,[14]]]],[16,14],[16,[[9,[11]]]],[16,[[9,[11]]]],[16,11],[[],17],[[],[[9,[17]]]],[[],[[9,[17]]]],[[],17],[[],17],[[]],[[],9],[[],9],[[]],[[]],[[],18],[[],[[9,[18]]]],[[],[[9,[18]]]],[[],18],[[],18],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[19]]]],[[],[[9,[19]]]],[[],19],[[],19],[[],[[9,[19]]]],[[],[[9,[19]]]],[[],19],[[],19],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[20]]]],[[],[[9,[20]]]],[[],20],[[],20],[[],[[9,[20]]]],[[],[[9,[20]]]],[[],20],[[],20],[[]],[[],9],[[],9],[[]],[[]],[[],[[9,[21]]]],[[],[[9,[21]]]],[16,20],[16,[[9,[20]]]],[16,[[9,[20]]]],[16,20],[16,20],[16,17],[16,[[9,[17]]]],[16,[[9,[17]]]],[16,17],[16,17],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[8,9],[8,9],[8],[[]],[10,9],[10,9],[10],[[]],[11,9],[11,9],[11],[[]],[12,9],[12,9],[12],[[]],[13,9],[13,9],[13],[13,9],[13,9],[13],[[]],[14,9],[14,9],[14],[14,9],[14,9],[14],[[]],[15,9],[15,9],[[]],[[14,16],9],[[14,16],9],[[14,16]],[[11,16],9],[[11,16],9],[[11,16]],[17],[17,9],[17,9],[17],[17],[[]],[[]],[[]],[18],[18,9],[18,9],[18],[18],[[]],[[]],[[]],[19,9],[19,9],[19],[19],[19,9],[19,9],[19],[19],[[]],[[]],[[]],[20,9],[20,9],[20],[20],[20,9],[20,9],[20],[20],[[]],[[]],[[]],[21,9],[21,9],[[20,16]],[[20,16],9],[[20,16],9],[[20,16]],[[20,16]],[[17,16]],[[17,16],9],[[17,16],9],[[17,16]],[[17,16]]],"p":[[4,"BigEndian"],[4,"LittleEndian"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"f32"],[6,"Result"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"usize"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[4,"Result"],[3,"TypeId"],[8,"ByteOrder"],[8,"ReadBytesExt"],[8,"WriteBytesExt"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"p":[]},\
"color_quant":{"doc":"Color quantization library","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NeuQuant","borrow","borrow_mut","color_map_rgb","color_map_rgba","from","index_of","init","into","lookup","map_pixel","new","try_from","try_into","type_id"],"q":["color_quant","","","","","","","","","","","","","",""],"d":["","","","Returns the RGBA color map calculated from the sample.","Returns the RGBA color map calculated from the sample.","Returns the argument unchanged.","Finds the best-matching index in the color map.","Initializes the neuronal network and trains it with the …","Calls <code>U::from(self)</code>.","Lookup pixel values for color at <code>idx</code> in the colormap.","Maps the rgba-pixel in-place to the best-matching color in …","Creates a new neuronal network and trains it with the …","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,[[3,[2]]]],[1,[[3,[2]]]],[[]],[1,4],[1],[[]],[[1,4],5],[1],[[6,4],1],[[],7],[[],7],[[],8]],"p":[[3,"NeuQuant"],[15,"u8"],[3,"Vec"],[15,"usize"],[4,"Option"],[15,"i32"],[4,"Result"],[3,"TypeId"]]},\
"crc32fast":{"doc":"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation.","t":[3,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11],"n":["Hasher","borrow","borrow_mut","clone","clone_into","combine","default","finalize","finish","fmt","from","hash","into","new","new_with_initial","new_with_initial_len","reset","to_owned","try_from","try_into","type_id","update","write"],"q":["crc32fast","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an in-progress CRC32 computation.","","","","","Combine the hash state with the hash state for the …","","Finalize the hash state and return the computed CRC32 …","","","Returns the argument unchanged.","Computes the CRC32 hash of a byte slice.","Calls <code>U::from(self)</code>.","Create a new <code>Hasher</code>.","Create a new <code>Hasher</code> with an initial CRC32 state.","Create a new <code>Hasher</code> with an initial CRC32 state.","Reset the hash state.","","","","","Process the given byte slice and update the hash state.",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[]],[[]],[1,1],[[]],[[1,1]],[[],1],[1,2],[1,3],[[1,4],5],[[]],[[],2],[[]],[[],1],[2,1],[[2,3],1],[1],[[]],[[],6],[[],6],[[],7],[1],[1]],"p":[[3,"Hasher"],[15,"u32"],[15,"u64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"critical_section":{"doc":"critical-section","t":[3,8,3,6,3,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,14,11,11,11,11,11,11,11,11,11,11,5],"n":["CriticalSection","Impl","Mutex","RawRestoreState","RestoreState","acquire","acquire","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_ref","borrow_ref_mut","clone","clone","fmt","fmt","fmt","from","from","from","get_mut","into","into","into","into_inner","invalid","new","new","release","release","replace","replace_with","set_impl","take","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with"],"q":["critical_section","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Critical section token.","Methods required for a critical section implementation.","A mutex based on critical sections.","Raw, transparent “restore state”.","Opaque “restore state”.","Acquire a critical section in the current thread.","Acquire the critical section.","Borrows the data for the duration of the critical section.","","","","","","","Borrow the data and call <code>RefCell::borrow</code>","Borrow the data and call <code>RefCell::borrow_mut</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a mutable reference to the contained value when the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the contained value, consuming the mutex.","Create an invalid, dummy  <code>RestoreState</code>.","Creates a new mutex.","Creates a critical section token.","Release the critical section.","Release the critical section.","Borrow the data and call <code>RefCell::replace</code>","Borrow the data and call <code>RefCell::replace_with</code>","Set the critical section implementation.","Borrow the data and call <code>RefCell::take</code>","","","","","","","","","","Execute closure <code>f</code> in a critical section."],"i":[0,0,0,0,0,0,15,3,3,4,1,3,4,1,3,3,4,1,3,4,1,3,4,1,3,3,4,1,3,1,3,4,0,15,3,3,0,3,3,4,1,3,4,1,3,4,1,0],"f":[0,0,0,0,0,[[],1],[[],2],[[3,4]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[5]],4],6],[[[3,[5]],4],7],[4,4],[1,1],[[[3,[8]],9],10],[[4,9],10],[[1,9],10],[[]],[[]],[[]],[3],[[]],[[]],[[]],[3],[[],1],[[],3],[[],4],[1],[2],[[[3,[5]],4]],[[[3,[5]],4]],0,[[[3,[[5,[11]]]],4],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[14]],"p":[[3,"RestoreState"],[6,"RawRestoreState"],[3,"Mutex"],[3,"CriticalSection"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Default"],[4,"Result"],[3,"TypeId"],[8,"FnOnce"],[8,"Impl"]]},\
"crossbeam_channel":{"doc":"Multi-producer multi-consumer channels for message passing.","t":[13,13,13,13,13,13,3,3,3,3,3,4,3,3,3,3,4,3,13,13,3,3,4,3,4,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Disconnected","Disconnected","Disconnected","Disconnected","Empty","Full","IntoIter","Iter","ReadyTimeoutError","Receiver","RecvError","RecvTimeoutError","Select","SelectTimeoutError","SelectedOperation","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryReadyError","TryRecvError","TrySelectError","TrySendError","after","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","is_disconnected","is_disconnected","is_disconnected","is_disconnected","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_timeout","is_timeout","iter","len","len","never","new","next","next","next","provide","provide","provide","provide","provide","provide","provide","provide","ready","ready_deadline","ready_timeout","recv","recv","recv","recv_deadline","recv_timeout","remove","same_channel","same_channel","select","select","select_deadline","select_timeout","send","send","send","send_deadline","send_timeout","tick","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_ready","try_recv","try_select","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded"],"q":["crossbeam_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The message could not be sent because the channel is …","The message could not be sent because the channel is …","The message could not be received because the channel is …","The message could not be received because the channel is …","A message could not be received because the channel is …","The message could not be sent because the channel is full.","A blocking iterator over messages in a channel.","A blocking iterator over messages in a channel.","An error returned from the <code>ready_timeout</code> method.","The receiving side of a channel.","An error returned from the <code>recv</code> method.","An error returned from the <code>recv_timeout</code> method.","Selects from a set of channel operations.","An error returned from the <code>select_timeout</code> method.","A selected operation that needs to be completed.","An error returned from the <code>send</code> method.","An error returned from the <code>send_timeout</code> method.","The sending side of a channel.","The message could not be sent because the channel is full …","A message could not be received because the channel is …","A non-blocking iterator over messages in a channel.","An error returned from the <code>try_ready</code> method.","An error returned from the <code>try_recv</code> method.","An error returned from the <code>try_select</code> method.","An error returned from the <code>try_send</code> method.","Creates a receiver that delivers a message after a certain …","Creates a receiver that delivers a message at a certain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a channel of bounded capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the index of the selected operation.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the message.","Unwraps the message.","Unwraps the message.","","","","","","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the channel is empty.","Returns <code>true</code> if the receive operation failed because the …","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the channel is full.","Returns <code>true</code> if the send operation failed because the …","Returns <code>true</code> if the send operation timed out.","Returns <code>true</code> if the receive operation timed out.","A blocking iterator over messages in the channel.","Returns the number of messages in the channel.","Returns the number of messages in the channel.","Creates a receiver that never delivers messages.","Creates an empty list of channel operations for selection.","","","","","","","","","","","","Blocks until one of the operations becomes ready.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is received or …","Adds a receive operation.","Completes the receive operation.","Waits for a message to be received from the channel, but …","Waits for a message to be received from the channel, but …","Removes a previously added operation.","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if receivers belong to the same channel.","Blocks until one of the operations becomes ready and …","Selects from a set of channel operations.","Blocks until a given deadline, or until one of the …","Blocks for a limited time until one of the operations …","Blocks the current thread until a message is sent or the …","Adds a send operation.","Completes the send operation.","Waits for a message to be sent into the channel, but only …","Waits for a message to be sent into the channel, but only …","Creates a receiver that delivers messages periodically.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over messages in the channel.","Attempts to find a ready operation without blocking.","Attempts to receive a message from the channel without …","Attempts to select one of the operations without blocking.","Attempts to send a message into the channel without …","","","","","","","","","","","","","","","","","","Creates a channel of unbounded capacity."],"i":[10,11,13,14,13,10,0,0,0,0,0,0,0,0,0,0,0,0,11,14,0,0,0,0,0,0,0,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,0,5,3,5,3,7,9,10,11,12,13,14,15,16,17,18,5,3,7,9,10,11,12,13,14,15,16,17,18,7,5,3,19,9,10,11,12,13,14,15,16,17,18,5,3,24,25,26,7,19,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,18,5,3,24,25,26,7,19,9,10,10,11,11,12,13,13,14,14,15,16,17,18,19,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,9,10,11,3,3,24,25,26,10,11,13,14,5,3,13,5,3,10,11,14,3,5,3,0,7,24,25,26,9,10,11,12,13,14,15,16,7,7,7,3,7,19,3,3,7,5,3,7,0,7,7,5,7,19,5,5,0,5,3,7,9,10,11,12,13,14,15,16,17,18,9,10,11,12,13,14,15,16,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,3,7,3,7,5,5,3,24,25,26,7,19,9,10,11,12,13,14,15,16,17,18,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[2,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[5,[[6,[4]]]],[3,[[6,[4]]]],[5,5],[3,3],[7,7],[[[9,[8]]],[[9,[8]]]],[[[10,[8]]],[[10,[8]]]],[[[11,[8]]],[[11,[8]]]],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[5],[3],[19],[[[9,[20]],9],21],[[[10,[20]],10],21],[[[11,[20]],11],21],[[12,12],21],[[13,13],21],[[14,14],21],[[15,15],21],[[16,16],21],[[17,17],21],[[18,18],21],[[5,22],23],[[3,22],23],[[24,22],23],[[25,22],23],[[26,22],23],[[7,22],23],[[19,22],23],[[9,22],23],[[9,22],23],[[10,22],23],[[10,22],23],[[11,22],23],[[11,22],23],[[12,22],23],[[12,22],23],[[13,22],23],[[13,22],23],[[14,22],23],[[14,22],23],[[15,22],23],[[15,22],23],[[16,22],23],[[16,22],23],[[17,22],23],[[18,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,10],[[]],[9,11],[[]],[[]],[12,13],[[]],[[]],[12,14],[[]],[[]],[[]],[[]],[19,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[11],[3],[3],[[]],[[]],[[]],[10,21],[11,21],[13,21],[14,21],[5,21],[3,21],[13,21],[5,21],[3,21],[10,21],[11,21],[14,21],[3,24],[5,4],[3,4],[[],3],[[],7],[24,6],[25,6],[26,6],[27],[27],[27],[27],[27],[27],[27],[27],[7,4],[[7,2],[[28,[4,18]]]],[[7,1],[[28,[4,18]]]],[3,[[28,[12]]]],[[7,3],4],[[19,3],[[28,[12]]]],[[3,2],[[28,[14]]]],[[3,1],[[28,[14]]]],[[7,4]],[[5,5],21],[[3,3],21],[7,19],0,[[7,2],[[28,[19,16]]]],[[7,1],[[28,[19,16]]]],[5,[[28,[9]]]],[[7,5],4],[[19,5],[[28,[9]]]],[[5,2],[[28,[11]]]],[[5,1],[[28,[11]]]],[1,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[3,25],[7,[[28,[4,17]]]],[3,[[28,[13]]]],[7,[[28,[19,15]]]],[5,[[28,[10]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]]],"p":[[3,"Duration"],[3,"Instant"],[3,"Receiver"],[15,"usize"],[3,"Sender"],[4,"Option"],[3,"Select"],[8,"Clone"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[3,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"TrySelectError"],[3,"SelectTimeoutError"],[3,"TryReadyError"],[3,"ReadyTimeoutError"],[3,"SelectedOperation"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Demand"],[4,"Result"],[3,"String"],[3,"TypeId"]]},\
"crossbeam_deque":{"doc":"Concurrent work-stealing deques.","t":[13,3,13,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Empty","Injector","Retry","Steal","Stealer","Success","Worker","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","init","init","init","init","into","into","into","into","is_empty","is_empty","is_empty","is_empty","is_retry","is_success","len","len","len","new","new_fifo","new_lifo","or_else","pop","push","push","steal","steal","steal_batch","steal_batch","steal_batch_and_pop","steal_batch_and_pop","steal_batch_with_limit","steal_batch_with_limit","steal_batch_with_limit_and_pop","steal_batch_with_limit_and_pop","stealer","success","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["crossbeam_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The queue was empty at the time of stealing.","An injector queue.","The steal operation needs to be retried.","Possible outcomes of a steal operation.","A stealer handle of a worker queue.","At least one task was successfully stolen.","A worker queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Consumes items until a <code>Success</code> is found and returns it.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue was empty at the time of …","Returns <code>true</code> if the steal operation needs to be retried.","Returns <code>true</code> if at least one task was stolen.","Returns the number of tasks in the deque.","Returns the number of tasks in the deque.","Returns the number of tasks in the queue.","Creates a new injector queue.","Creates a FIFO worker queue.","Creates a LIFO worker queue.","If no task was stolen, attempts another steal operation.","Pops a task from the queue.","Pushes a task into the queue.","Pushes a task into the queue.","Steals a task from the queue.","Steals a task from the queue.","Steals a batch of tasks and pushes them into another …","Steals a batch of tasks and pushes them into a worker.","Steals a batch of tasks, pushes them into another worker, …","Steals a batch of tasks, pushes them into a worker, and …","Steals no more than <code>limit</code> of tasks and pushes them into …","Steals no more than of tasks and pushes them into a worker.","Steals no more than <code>limit</code> of tasks, pushes them into …","Steals no more than <code>limit</code> of tasks, pushes them into a …","Creates a stealer for this queue.","Returns the result of the operation, if successful.","","","","","","","","","","","","","",""],"i":[3,0,3,0,0,3,0,8,1,4,3,8,1,4,3,1,3,1,3,4,8,1,4,3,8,1,4,3,8,1,4,4,3,3,8,1,4,3,8,1,4,3,3,8,1,4,3,8,1,4,3,8,1,4,3,3,3,8,1,4,4,8,8,3,8,8,4,1,4,1,4,1,4,1,4,1,4,8,3,1,3,8,1,4,3,8,1,4,3,8,1,4,3],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[[3,[2]]],[[3,[2]]]],[[]],[[]],[[],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[4],[5],[5],[[[3,[6]],3],7],[[8,9],10],[[1,9],10],[[4,9],10],[[3,9],10],[[]],[[]],[[]],[[]],[[],3],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[8,7],[1,7],[4,7],[3,7],[3,7],[3,7],[8,5],[1,5],[4,5],[[],4],[[],8],[[],8],[3,3],[8,11],[8],[4],[1,3],[4,3],[[1,8],3],[[4,8],3],[[1,8],3],[[4,8],3],[[1,8,5],3],[[4,8,5],3],[[1,8,5],3],[[4,8,5],3],[8,1],[3,11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13]],"p":[[3,"Stealer"],[8,"Clone"],[4,"Steal"],[3,"Injector"],[15,"usize"],[8,"PartialEq"],[15,"bool"],[3,"Worker"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"crossbeam_epoch":{"doc":"Epoch-based memory reclamation.","t":[18,3,3,6,8,3,3,16,3,3,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,5,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11],"n":["ALIGN","Atomic","Collector","CompareAndSetError","CompareAndSetOrdering","CompareExchangeError","Guard","Init","LocalHandle","Owned","Pointable","Pointer","Shared","as_mut","as_raw","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","collector","collector","compare_and_set","compare_and_set_weak","compare_exchange","compare_exchange_weak","current","default","default","default","default_collector","defer","defer_destroy","defer_unchecked","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","failure","fetch_and","fetch_or","fetch_update","fetch_xor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_usize","from_usize","from_usize","init","init","init","into","into","into","into","into","into","into","into_box","into_owned","into_owned","into_shared","into_usize","into_usize","into_usize","is_null","is_pinned","is_pinned","load","load_consume","new","new","new","new","null","null","partial_cmp","pin","pin","register","repin","repin_after","store","success","swap","tag","tag","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_owned","try_into_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unprotected","with_tag","with_tag"],"q":["crossbeam_epochd":["The alignment of pointer.","An atomic pointer that can be safely shared between …","An epoch-based garbage collector.","The error returned on failed compare-and-set operation.","Memory orderings for compare-and-set operations.","The error returned on failed compare-and-swap operation.","A guard that keeps the current thread pinned.","The type for initializers.","A handle to a garbage collector.","An owned heap-allocated object.","Types that are pointed to by a single word.","A trait for either <code>Owned</code> or <code>Shared</code> pointers.","A pointer to an object protected by the epoch GC.","","Converts the pointer to a raw pointer (without the tag).","","Converts the pointer to a reference.","","","","","","","","","","","","","","","","","Returns a copy of the atomic value.","","","Creates another reference to the same garbage collector.","","","","","","Returns the <code>Collector</code> associated with this handle.","Returns the <code>Collector</code> associated with this guard.","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","Stores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …","The value in the atomic pointer at the time of the failed …","","","","Returns the default global collector.","Stores a function so that it can be executed at some point …","Stores a destructor for an object so that it can be …","Stores a function so that it can be executed at some point …","Dereferences the given pointer.","","Dereferences the pointer.","Mutably dereferences the given pointer.","","Dereferences the pointer.","Drops the object pointed to by the given pointer.","","","","","Checks if both handles point to the same collector.","The ordering of the operation when it fails.","Bitwise “and” with the current tag.","Bitwise “or” with the current tag.","Fetches the pointer, and then applies a function to it …","Bitwise “xor” with the current tag.","Clears up the thread-local cache of deferred functions by …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a new atomic pointer pointing to <code>owned</code>.","","","Returns a new atomic pointer pointing to <code>ptr</code>.","Returns a new atomic pointer pointing to <code>raw</code>.","","Returns a new owned pointer pointing to <code>b</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new pointer pointing to <code>raw</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a new owned pointer pointing to <code>raw</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","Returns a new pointer pointing to the tagged pointer <code>data</code>.","","Initializes a with the given initializer.","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the owned pointer into a <code>Box</code>.","Takes ownership of the pointee.","Takes ownership of the pointee.","Converts the owned pointer into a <code>Shared</code>.","Returns the machine representation of the pointer.","","","Returns <code>true</code> if the pointer is null.","Returns <code>true</code> if the current thread is pinned.","Returns <code>true</code> if the handle is pinned.","Loads a <code>Shared</code> from the atomic pointer.","Loads a <code>Shared</code> from the atomic pointer using a “consume…","Allocates <code>value</code> on the heap and returns a new atomic …","Allocates <code>value</code> on the heap and returns a new owned …","Creates a new collector.","The new value, which the operation failed to store.","Returns a new null atomic pointer.","Returns a new null pointer.","","Pins the current thread.","Pins the handle.","Registers a new handle for the collector.","Unpins and then immediately re-pins the thread.","Temporarily unpins the thread, executes the given function …","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.","The ordering of the operation when it succeeds.","Stores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …","Returns the tag stored within the pointer.","Returns the tag stored within the pointer.","","","","","","","","","","","","","","","","","","","Takes ownership of the pointee if it is non-null.","Takes ownership of the pointee if it is not null.","","","","","","","","Returns a reference to a dummy guard that allows …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …","Returns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …"],"i":[2,0,0,0,0,0,0,2,0,0,0,0,0,3,4,3,4,15,6,3,3,4,8,10,11,15,6,3,3,4,8,10,11,6,3,4,8,6,3,4,8,4,10,11,6,6,6,6,15,6,4,8,0,11,11,11,2,3,4,2,3,4,2,3,10,11,4,8,25,6,6,6,6,11,15,6,6,3,4,4,8,10,11,15,6,6,6,6,6,6,6,3,3,3,3,4,4,8,10,11,3,18,3,4,2,6,3,15,6,3,4,8,10,11,3,6,4,3,18,3,4,4,0,10,6,6,6,3,8,15,6,4,4,0,10,8,11,11,6,25,6,3,4,6,3,4,8,15,6,3,4,8,10,11,15,6,3,4,8,10,11,6,4,15,6,3,4,8,10,11,0,3,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[[0,[1,2]]]]]],[4],[[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],5],[[]],[[]],[[[3,[[0,[1,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[[6,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[[[3,[7]]],[[3,[7]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[8,8],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],9],[10,8],[11,[[5,[8]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],11],[[13,[[4,[[0,[1,2]]]],[12,[[0,[1,2]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],11],[[13,[[4,[[0,[1,2]]]],[12,[[0,[1,2]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],14,14,11],[[13,[[4,[[0,[1,2]]]],[15,[[0,[1,2]]]]]]]],[[[6,[[0,[1,2]]]],[4,[[0,[1,2]]]],14,14,11],[[13,[[4,[[0,[1,2]]]],[15,[[0,[1,2]]]]]]]],0,[[],[[6,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[],8],[[],8],[11],[[11,4]],[11],[16],[[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[16],[[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[16],[[[3,[[0,[1,2]]]]]],[10],[11],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],17],[[8,8],17],[[],14],[[[6,[[0,[1,2]]]],16,14,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],16,14,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],14,14,11],[[13,[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]]]]],[[[6,[[0,[1,2]]]],16,14,11],[[4,[[0,[1,2]]]]]],[11],[[[15,[[0,[18,19]]]],20],21],[[[6,[[0,[1,2]]]],20],21],[[[6,[[0,[1,2]]]],20],21],[[[3,[[0,[1,2]]]],20],21],[[[4,[[0,[1,2]]]],20],21],[[[4,[[0,[1,2]]]],20],21],[[8,20],21],[[10,20],21],[[11,20],21],[[]],[[]],[22],[[[3,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[23,6],[[],6],[[[4,[[0,[1,2]]]]],[[6,[[0,[1,2]]]]]],[[],6],[[],3],[23,3],[22],[[]],[[]],[[],4],[[]],[[]],[[]],[[],3],[16],[16,[[3,[[0,[1,2]]]]]],[16,[[4,[[0,[1,2]]]]]],[[],16],[[],[[6,[[0,[1,2]]]]]],[[],[[3,[[0,[1,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,23],[[[6,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],11],[[4,[[0,[1,2]]]]]],[[],16],[[[3,[[0,[1,2]]]]],16],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2]]]]],17],[[],17],[10,17],[[[6,[[0,[1,2]]]],14,11],[[4,[[0,[1,2]]]]]],[[[6,[[0,[1,2]]]],11],[[4,[[0,[1,2]]]]]],[[],6],[[],3],[[],8],0,[[],[[6,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[5,[9]]]],[[],11],[10,11],[8,10],[11],[11],[[[6,[[0,[1,2]]]],[18,[[0,[1,2]]]],14]],[[],14],[[[6,[[0,[1,2]]]],[18,[[0,[1,2]]]],14,11],[[4,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]],16],[[[4,[[0,[1,2]]]]],16],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[6,[[0,[1,2]]]]],[[5,[[3,[[0,[1,2]]]]]]]],[[[4,[[0,[1,2]]]]],[[5,[[3,[[0,[1,2]]]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],11],[[[3,[[0,[1,2]]]],16],[[3,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],16],[[4,[[0,[1,2]]]]]]],"p":[[8,"Sized"],[8,"Pointable"],[3,"Owned"],[3,"Shared"],[4,"Option"],[3,"Atomic"],[8,"Clone"],[3,"Collector"],[4,"Ordering"],[3,"LocalHandle"],[3,"Guard"],[6,"CompareAndSetError"],[4,"Result"],[4,"Ordering"],[3,"CompareExchangeError"],[15,"usize"],[15,"bool"],[8,"Pointer"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"never"],[3,"Box"],[3,"TypeId"],[8,"CompareAndSetOrdering"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","sync","thread","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id","Parker","ShardedLock","ShardedLockReadGuard","ShardedLockWriteGuard","Unparker","WaitGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","deref","deref","deref_mut","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","get_mut","into","into","into","into","into","into","into_inner","into_raw","into_raw","is_poisoned","new","new","new","park","park_deadline","park_timeout","read","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","unpark","unparker","wait","write","Scope","ScopedJoinHandle","ScopedThreadBuilder","as_pthread_t","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","fmt","fmt","fmt","from","from","from","into","into","into","into_pthread_t","join","name","scope","spawn","spawn","stack_size","thread","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["crossbeam_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","Thread synchronization primitives.","Threads that can borrow variables from the stack.","","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","","","A thread parking primitive.","A sharded reader-writer lock.","A guard used to release the shared read access of a …","A guard used to release the exclusive write access of a …","Unparks a thread parked by the associated <code>Parker</code>.","Enables threads to synchronize the beginning or end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a raw pointer into a <code>Parker</code>.","Converts a raw pointer into an <code>Unparker</code>.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this lock, returning the underlying data.","Converts a <code>Parker</code> into a raw pointer.","Converts an <code>Unparker</code> into a raw pointer.","Returns <code>true</code> if the lock is poisoned.","Creates a new <code>Parker</code>.","Creates a new sharded reader-writer lock.","Creates a new wait group and returns the single reference …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Blocks the current thread until the token is made …","Locks with shared read access, blocking the current thread …","","","","","","","","","","","","","","","","","Attempts to acquire this lock with shared read access.","Attempts to acquire this lock with exclusive write access.","","","","","","","Atomically makes the token available if it is not already.","Returns a reference to an associated <code>Unparker</code>.","Drops this reference and waits until all other references …","Locks with exclusive write access, blocking the current …","A scope for spawning threads.","A handle that can be used to join its scoped thread.","Configures the properties of a new thread.","","","","","","","","Creates a builder that can configure a thread before …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Waits for the thread to finish and returns its result.","Sets the name for the new thread.","Creates a new scope for spawning threads.","Spawns a scoped thread.","Spawns a scoped thread with this configuration.","Sets the size of the stack for the new thread.","Returns a handle to the underlying thread.","","","","","","","","",""],"i":[0,0,0,3,2,3,2,2,2,3,2,2,2,2,3,2,3,2,2,2,2,3,2,2,3,3,2,3,3,3,0,0,2,3,2,3,2,3,2,0,0,49,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,49,14,14,14,14,14,14,14,0,0,0,0,0,0,31,29,32,30,34,35,31,29,32,30,34,35,29,30,29,30,31,32,30,34,35,35,30,35,31,29,32,30,34,34,35,35,31,29,32,32,32,30,34,35,31,29,32,31,29,32,30,34,35,32,31,29,32,31,32,30,31,31,31,32,29,30,34,35,31,29,32,30,34,35,31,29,32,30,34,35,32,32,31,29,32,30,34,35,29,31,30,32,0,0,0,42,44,42,45,44,42,45,44,44,42,45,44,42,45,44,42,45,42,42,45,0,44,45,45,42,44,42,45,44,42,45,44,42,45],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[[],3],[[],[[2,[4]]]],[2],[2],[[[2,[5]],2],6],[[3,7],8],[[[2,[9]],7],8],[[]],[[],2],[10],[[]],[[[2,[11]]]],[[]],[[]],[2],[3,6],[[],3],[[],2],[3],[3],[3],0,0,[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,[14],[[]],[[]],[[[14,[[0,[15,16]]]],[0,[15,16]],[0,[15,16]]],[[0,[15,16]]]],[[[14,[[0,[15,16]]]],[0,[15,16]],[0,[15,16]]],[[12,[[0,[15,16]],[0,[15,16]]]]]],[[],[[14,[4]]]],[14],[[[14,[17]],17],17],[[[14,[18]],18],18],[[[14,[19]],19],19],[[[14,[20]],20],20],[[[14,[21]],21],21],[[[14,[22]],22],22],[[[14,[23]],23],23],[[[14,[24]],24],24],[[[14,[25]],25],25],[[[14,[26]],26],26],[[[14,[27]],27],27],[[[14,[28]],28],28],[[[14,[27]],27],27],[[[14,[25]],25],25],[[[14,[19]],19],19],[[[14,[17]],17],17],[[[14,[26]],26],26],[[[14,[6]],6],6],[[[14,[18]],18],18],[[[14,[28]],28],28],[[[14,[22]],22],22],[[[14,[24]],24],24],[[[14,[23]],23],23],[[[14,[20]],20],20],[[[14,[21]],21],21],[[[14,[17]],17],17],[[[14,[18]],18],18],[[[14,[24]],24],24],[[[14,[21]],21],21],[[[14,[26]],26],26],[[[14,[25]],25],25],[[[14,[20]],20],20],[[[14,[23]],23],23],[[[14,[28]],28],28],[[[14,[27]],27],27],[[[14,[22]],22],22],[[[14,[19]],19],19],[[[14,[20]],20],20],[[[14,[21]],21],21],[[[14,[19]],19],19],[[[14,[22]],22],22],[[[14,[26]],26],26],[[[14,[24]],24],24],[[[14,[18]],18],18],[[[14,[23]],23],23],[[[14,[28]],28],28],[[[14,[17]],17],17],[[[14,[25]],25],25],[[[14,[27]],27],27],[[[14,[24]],24],24],[[[14,[22]],22],22],[[[14,[17]],17],17],[[[14,[20]],20],20],[[[14,[18]],18],18],[[[14,[23]],23],23],[[[14,[6]],6],6],[[[14,[28]],28],28],[[[14,[26]],26],26],[[[14,[27]],27],27],[[[14,[19]],19],19],[[[14,[21]],21],21],[[[14,[25]],25],25],[[[14,[18]],18],18],[[[14,[24]],24],24],[[[14,[6]],6],6],[[[14,[19]],19],19],[[[14,[21]],21],21],[[[14,[23]],23],23],[[[14,[27]],27],27],[[[14,[26]],26],26],[[[14,[22]],22],22],[[[14,[28]],28],28],[[[14,[25]],25],25],[[[14,[20]],20],20],[[[14,[17]],17],17],[[[14,[27]],27],27],[[[14,[20]],20],20],[[[14,[23]],23],23],[[[14,[22]],22],22],[[[14,[18]],18],18],[[[14,[21]],21],21],[[[14,[26]],26],26],[[[14,[25]],25],25],[[[14,[17]],17],17],[[[14,[19]],19],19],[[[14,[28]],28],28],[[[14,[24]],24],24],[[[14,[[0,[15,16]]]]],[[12,[[0,[15,16]],[0,[15,16]]]]]],[[[14,[27]],27],27],[[[14,[25]],25],25],[[[14,[26]],26],26],[[[14,[20]],20],20],[[[14,[17]],17],17],[[[14,[22]],22],22],[[[14,[23]],23],23],[[[14,[28]],28],28],[[[14,[19]],19],19],[[[14,[21]],21],21],[[[14,[18]],18],18],[[[14,[24]],24],24],[[[14,[6]],6],6],[[[14,[[0,[15,9]]]],7],8],[[]],[[],14],[10],[[]],[14],[[],6],[[[14,[15]]],15],[[]],[[],14],[14],[14],[[[14,[4]]],4],[[],12],[[],12],[[],13],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[30,30],[[]],[[]],[[],31],[[],[[32,[4]]]],[[],30],[[[34,[33]]]],[[[35,[33]]]],[[[35,[33]]]],[30],[[[35,[33]]]],[[31,7],8],[[29,7],8],[[[32,[[0,[33,9]]]],7],8],[[30,7],8],[[[34,[[0,[33,36]]]],7],8],[[[34,[9]],7],8],[[[35,[[0,[33,36]]]],7],8],[[[35,[9]],7],8],[[]],[[]],[10],[[]],[[],32],[[]],[[]],[[]],[[],31],[[],29],[[[32,[33]]],37],[[]],[[]],[[]],[[]],[[]],[[]],[32,37],[31],[29],[[[32,[33]]],6],[[],31],[[],32],[[],30],[31],[[31,38]],[[31,39]],[[[32,[33]]],[[37,[[34,[33]]]]]],[[]],[[]],[[],40],[[],40],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[32,[33]]],[[41,[[34,[33]]]]]],[[[32,[33]]],[[41,[[35,[33]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[29],[31,29],[30],[[[32,[33]]],[[37,[[35,[33]]]]]],0,0,0,[42,43],[[]],[[]],[[]],[[]],[[]],[[]],[44,45],[[44,7],8],[[42,7],8],[[45,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[42,43],[42,46],[[45,40],45],[[],46],[44,42],[45,[[47,[42]]]],[[45,22],45],[42,48],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13]],"p":[[8,"Clone"],[3,"CachePadded"],[3,"Backoff"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hash"],[4,"Result"],[3,"TypeId"],[3,"AtomicCell"],[8,"Copy"],[8,"Eq"],[15,"i16"],[15,"i128"],[15,"u128"],[15,"i64"],[15,"u64"],[15,"usize"],[15,"i32"],[15,"u16"],[15,"i8"],[15,"u32"],[15,"u8"],[15,"isize"],[3,"Unparker"],[3,"WaitGroup"],[3,"Parker"],[3,"ShardedLock"],[8,"Sized"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[8,"Display"],[6,"LockResult"],[3,"Instant"],[3,"Duration"],[3,"String"],[6,"TryLockResult"],[3,"ScopedJoinHandle"],[6,"RawPthread"],[3,"Scope"],[3,"ScopedThreadBuilder"],[6,"Result"],[6,"Result"],[3,"Thread"],[8,"AtomicConsume"]]},\
"deflate":{"doc":"An implementation an encoder using DEFLATE compression …","t":[13,4,3,13,13,13,13,4,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Best","Compression","CompressionOptions","Default","Fast","Greedy","Lazy","MatchingType","Normal","SpecialOptions","_ForceFixed","_ForceStored","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deflate_bytes","deflate_bytes_conf","deflate_bytes_zlib","deflate_bytes_zlib_conf","eq","eq","eq","eq","fast","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","high","huffman_only","into","into","into","into","lazy_if_less_than","matching_type","max_hash_checks","partial_cmp","partial_cmp","rle","special","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","DeflateEncoder","ZlibEncoder","borrow","borrow","borrow_mut","borrow_mut","checksum","drop","drop","finish","finish","flush","flush","from","from","into","into","new","new","reset","reset","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":["deflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deflate::write","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Higher compression level (<code>CompressionOptions::high()</code>).","An enum describing the level of compression to be used by …","A struct describing the options for a compressor or …","Default level (<code>CompressionOptions::default()</code>).","Fast minimal compression (<code>CompressionOptions::fast()</code>).","Use greedy matching: the matching algorithm simply uses a …","Use lazy matching: after finding a match, the next input …","An enum describing whether we use lazy or greedy matching.","Compress normally.","Enum allowing some special options (not implemented yet)!","Force fixed Huffman tables. (Unimplemented!).","Force stored (uncompressed) blocks only. (Unimplemented!).","","","","","","","","","","","","","","","","","","","","","Returns the options describing the default compression …","Compress the given slice of bytes with DEFLATE compression …","Compress the given slice of bytes with DEFLATE compression.","Compress the given slice of bytes with DEFLATE …","Compress the given slice of bytes with DEFLATE …","","","","","Returns  a fast set of compression settings","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns compression settings roughly corresponding to the …","Returns a set of compression settings that makes the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Only lazy match if we have a length less than this value.","Whether to use lazy or greedy matching.","The maximum number of checks to make in the hash table for …","","","Returns a set of compression settings that makes the …","Force fixed/stored blocks (Not implemented yet).","","","","","","","","","","","","","","","","","","Encoders implementing a <code>Write</code> interface.","A DEFLATE encoder/compressor.","A Zlib encoder/compressor.","","","","","Return the adler32 checksum of the currently consumed data.","When the encoder is dropped, output the rest of the data.","When the encoder is dropped, output the rest of the data.","Encode all pending data to the contained writer, consume …","Encode all pending data to the contained writer, consume …","Flush the encoder.","Flush the encoder.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encoder using the provided compression …","Create a new <code>ZlibEncoder</code> using the provided compression …","Resets the encoder (except the compression options), …","Resets the encoder (except the compression options), …","","","","","","","",""],"i":[1,0,0,1,1,4,4,0,2,0,2,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,4,1,2,3,0,0,0,0,1,2,3,4,3,1,2,3,4,4,1,2,3,3,4,1,2,3,4,3,3,1,2,3,4,3,3,3,1,4,3,3,1,2,3,4,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,0,19,17,19,17,17,19,17,19,17,19,17,19,17,19,17,19,17,19,17,19,17,19,17,19,17,19,17],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[[]],[[]],[[]],[[]],[[1,1],5],[[4,4],5],[[],1],[[],2],[[],3],[[],[[7,[6]]]],[[[8,[3]]],[[7,[6]]]],[[],[[7,[6]]]],[[[8,[3]]],[[7,[6]]]],[[1,1],9],[[2,2],9],[[3,3],9],[[4,4],9],[[],3],[[1,10],11],[[2,10],11],[[3,10],11],[[4,10],11],[[4,10],11],[[]],[[]],[1,3],[[]],[[]],[1],[2],[3],[4],[[],3],[[],3],[[]],[[]],[[]],[[]],0,0,0,[[1,1],[[12,[5]]]],[[4,4],[[12,[5]]]],[[],3],0,[[]],[[]],[[]],[[]],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],0,0,0,[[]],[[]],[[]],[[]],[[[17,[16]]],18],[[[19,[16]]]],[[[17,[16]]]],[[[19,[16]]],[[20,[16]]]],[[[17,[16]]],[[20,[16]]]],[[[19,[16]]],20],[[[17,[16]]],20],[[]],[[]],[[]],[[]],[[16,[8,[3]]],[[19,[16]]]],[[16,[8,[3]]],[[17,[16]]]],[[[19,[16]],16],[[20,[16]]]],[[[17,[16]],16],[[20,[16]]]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[[19,[16]]],[[20,[21]]]],[[[17,[16]]],[[20,[21]]]]],"p":[[4,"Compression"],[4,"SpecialOptions"],[3,"CompressionOptions"],[4,"MatchingType"],[4,"Ordering"],[15,"u8"],[3,"Vec"],[8,"Into"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[8,"Write"],[3,"ZlibEncoder"],[15,"u32"],[3,"DeflateEncoder"],[6,"Result"],[15,"usize"]]},\
"either":{"doc":"The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","t":[4,2,13,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11],"n":["Either","Left","Left","Right","Right","all","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow_mut","clone","clone_from","cmp","collect","count","deref","deref_mut","either","either_into","either_with","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","find","find_map","flip","fmt","fmt","fold","for_both","for_each","from","from","hash","into","into","into_future","into_inner","into_iter","into_iter","is_left","is_right","last","left","left_and_then","left_or","left_or_default","left_or_else","len","map","map_left","map_right","next","next_back","nth","partial_cmp","partition","poll","position","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","try_from","try_into","try_left","try_right","type_id","unwrap_left","unwrap_right"],"q":["either","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","","A value of type <code>L</code>.","","A value of type <code>R</code>.","","","","","","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","","","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","Evaluate the provided expression for both <code>Either::Left</code> and …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","","Map <code>f</code> over the contained value and return the result in the","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","","","","","","","","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","","","Macro for unwrapping the left side of an <code>Either</code>, which …","Dual to <code>try_left!</code>, see its documentation for more …","","Returns the left value","Returns the right value"],"i":[0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1],"f":[0,0,0,0,0,[1,2],[1,2],[1,3],[1],[1],[1,1],[[[4,[1]]],[[1,[4,4]]]],[[[4,[1]]],[[1,[4,4]]]],[1,1],[1],[1,3],[1],[[]],[[]],[[[1,[5,5]]],[[1,[5,5]]]],[[[1,[5,5]],[1,[5,5]]]],[[[1,[6,6]],1],7],[1],[1,8],[1],[1],[1],[1],[1],[[[1,[9,9]],1],2],[[1,3]],[[1,3]],[1],[[[1,[10,10]]],[[10,[1]]]],[1],[[[1,[11,11]]],[[11,[1]]]],[[[1,[10,10]]],[[10,[1]]]],[1],[1,11],[1,11],[1,1],[[1,12],13],[[[1,[14,14]],12],13],[1],0,[1],[[]],[10,1],[[[1,[15,15]]]],[1,10],[[]],[[]],[1],[[]],[1,1],[1,2],[1,2],[1,11],[1,11],[1,1],[1],[1],[1],[1,8],[1,1],[1,1],[1,1],[1,11],[1,11],[[1,8],11],[[[1,[16,16]],1],[[11,[7]]]],[1],[[[4,[1]],17],18],[1,[[11,[8]]]],[1,11],[1],[1,11],[1,1],[1],[1],[1],[1],[[],10],[[],10],0,0,[[],19],[1],[1]],"p":[[4,"Either"],[15,"bool"],[15,"str"],[3,"Pin"],[8,"Clone"],[8,"Ord"],[4,"Ordering"],[15,"usize"],[8,"PartialEq"],[4,"Result"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[3,"Context"],[4,"Poll"],[3,"TypeId"]]},\
"embedded_alloc":{"doc":"crates.io crates.io","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Heap","alloc","borrow","borrow_mut","dealloc","empty","free","from","init","into","try_from","try_into","type_id","used"],"q":["embedded_alloc","","","","","","","","","","","","",""],"d":["","","","","","Crate a new UNINITIALIZED heap allocator","Returns an estimate of the amount of bytes available.","Returns the argument unchanged.","Initializes the heap","Calls <code>U::from(self)</code>.","","","","Returns an estimate of the amount of bytes in use."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[1,2],3],[[]],[[]],[[1,3,2]],[[],1],[1,4],[[]],[[1,4,4]],[[]],[[],5],[[],5],[[],6],[1,4]],"p":[[3,"Heap"],[3,"Layout"],[15,"u8"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"embedded_dma":{"doc":"Traits to aid the correct use of buffers in DMA …","t":[8,8,8,16,16,16,16,8,8,11,11,10,10],"n":["ReadBuffer","ReadTarget","Word","Word","Word","Word","Word","WriteBuffer","WriteTarget","as_read_buffer","as_write_buffer","read_buffer","write_buffer"],"q":["embedded_dma","","","","","","","","","","","",""],"d":["Trait for buffers that can be given to DMA for reading.","Trait for <code>Deref</code> targets used by the blanket <code>DmaReadBuffer</code> …","Trait for DMA word types used by the blanket DMA buffer …","","","","","Trait for buffers that can be given to DMA for writing.","Trait for <code>DerefMut</code> targets used by the blanket …","","","Provide a buffer usable for DMA reads.","Provide a buffer usable for DMA writes."],"i":[0,0,0,1,2,3,4,0,0,3,4,1,2],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]]],"p":[[8,"ReadBuffer"],[8,"WriteBuffer"],[8,"ReadTarget"],[8,"WriteTarget"]]},\
"embedded_fps":{"doc":"sponsor-us github crates-io","t":[13,4,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Clock","Error","FPS","MaxFPS","StdClock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","fmt","fmt","fmt","from","from","from","into","into","into","new","new","tick","tick_max","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_now","try_tick","try_tick_max","type_id","type_id","type_id"],"q":["embedded_fps","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The clock returned an error when calling <code>Clock::try_now</code>.","The errors that <code>FPS</code> can return.","Measures Frames Per Second (FPS).","The maximum reading of Frames per second was reached. The …","A Standard clock based on <code>std</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new Frames Per Second counter.","Creates a new <code>StdClock</code>. Internally it calls <code>Instant::now()</code>.","Adds another frame tick and returns the current Frames Pre …","Adds another frame tick and returns the current Frames Pre …","","","","","","","","","","Adds another frame tick and returns the current Frames Pre …","Adds another frame tick and returns the current Frames Pre …","","",""],"i":[8,0,0,8,0,3,8,4,3,8,4,3,4,3,4,3,4,3,8,4,3,8,4,3,8,4,3,4,3,3,3,4,3,8,4,3,8,4,4,3,3,3,8,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[4,4],[[]],[[]],[[],3],[[],4],[[[3,[[0,[5,2]]]],6],7],[[8,6],7],[[4,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[3,[2]]]],[[],4],[[[3,[2]]],9],[[[3,[2]]],9],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4,[[10,[[11,[4]],12]]]],[[[3,[2]]],[[10,[9,8]]]],[[[3,[2]]],[[10,[9,8]]]],[[],13],[[],13],[[],13]],"p":[[8,"Clone"],[8,"Clock"],[3,"FPS"],[3,"StdClock"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Error"],[15,"usize"],[4,"Result"],[3,"Instant"],[4,"Error"],[3,"TypeId"]]},\
"embedded_graphics":{"doc":"Embedded-graphics is a 2D graphics library that is focused …","tn":["Color","Drawable","Output","Pixel","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","default","draw","draw","draw_target","eq","examples","fmt","framebuffer","from","geometry","hash","image","into","iterator","mock_display","mono_font","overflowing_as","overflowing_cast_from","partial_cmp","pixelcolor","prelude","primitives","saturating_as","saturating_cast_from","text","to_owned","transform","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Clipped","Color","ColorConverted","Cropped","DrawTarget","DrawTargetExt","Error","Translated","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_box","bounding_box","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clear","clear","clipped","clipped","clipped","clipped","clipped","color_converted","color_converted","color_converted","color_converted","color_converted","cropped","cropped","cropped","cropped","cropped","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","fill_contiguous","fill_contiguous","fill_contiguous","fill_contiguous","fill_contiguous","fill_solid","fill_solid","fill_solid","fill_solid","fill_solid","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","translated","translated","translated","translated","translated","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Framebuffer","as_image","az","borrow","borrow_mut","bounding_box","buffer_size","buffer_size_bpp","cast_from","checked_as","checked_cast_from","clipped","clone","clone_into","cmp","color_converted","cropped","data","data_mut","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","draw_iter","eq","fmt","from","hash","into","new","overflowing_as","overflowing_cast_from","partial_cmp","pixel","saturating_as","saturating_cast_from","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","set_pixel","size","to_owned","translated","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","AnchorPoint","AnchorX","AnchorY","Angle","AngleUnit","Bottom","BottomCenter","BottomLeft","BottomRight","Center","Center","Center","CenterLeft","CenterRight","Dimensions","Left","OriginDimensions","Point","Right","Size","Top","TopCenter","TopLeft","TopRight","abs","abs","add","add","add","add","add_assign","add_assign","add_assign","add_assign","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","component_div","component_div","component_max","component_max","component_min","component_min","component_mul","component_mul","default","default","deg","div","div","div_assign","div_assign","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_degrees","from_radians","from_xy","hash","hash","hash","hash","hash","height","index","index","into","into","into","into","into","into","mul","mul","mul_assign","mul_assign","neg","neg","new","new","new_equal","new_equal","normalize","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rad","saturating_add","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_sub","size","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_degrees","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_radians","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x_axis","x_axis","y","y","y_axis","y_axis","zero","zero","zero","Color","Color","GetPixel","Image","ImageDrawable","ImageDrawableExt","ImageRaw","ImageRawBE","ImageRawLE","SubImage","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","bounding_box","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","draw","draw","draw","draw","draw_sub_image","draw_sub_image","draw_sub_image","eq","fmt","fmt","fmt","from","from","from","hash","into","into","into","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","pixel","pixel","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","size","sub_image","to_owned","to_owned","translate","translate_mut","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ContiguousIteratorExt","PixelIteratorExt","contiguous","draw","into_pixels","pixel","raw","translated","IntoPixels","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","draw","fmt","from","into","into_iter","next","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","translated","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Translated","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","draw","eq","fmt","from","into","into_iter","next","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","translated","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","BitsIterator","ByteIterator","BytesIterator","RawDataSlice","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","draw","draw","eq","fmt","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","new","next","next","next","next","next","next","next","next","next","next","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","translated","translated","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ColorMapping","MockDisplay","NONE_COLOR","NONE_COLOR","affected_area","assert_eq","assert_eq_with_message","assert_pattern","assert_pattern_with_message","az","borrow","borrow_mut","bounding_box","cast_from","char_to_color","checked_as","checked_cast_from","clipped","clone","clone_into","color_converted","color_to_char","cropped","default","diff","draw_iter","draw_pixel","eq","fmt","from","from_pattern","from_points","get_pixel","into","map","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","set_allow_out_of_bounds_drawing","set_allow_overdraw","set_pixel","set_pixels","size","swap_xy","to_owned","translated","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","DecorationDimensions","MonoFont","MonoTextStyle","MonoTextStyleBuilder","ascii","az","az","az","az","background_color","background_color","baseline","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_from","cast_from","cast_from","cast_from","character_size","character_spacing","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","default_strikethrough","default_underline","draw_string","draw_whitespace","eq","eq","eq","fmt","fmt","fmt","fmt","font","font","from","from","from","from","from","glyph_mapping","hash","height","image","into","into","into","into","is_transparent","iso_8859_1","iso_8859_10","iso_8859_13","iso_8859_14","iso_8859_15","iso_8859_16","iso_8859_2","iso_8859_3","iso_8859_4","iso_8859_5","iso_8859_7","iso_8859_9","jis_x0201","line_height","mapping","measure_string","new","new","new","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","reset_background_color","reset_strikethrough","reset_text_color","reset_underline","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_background_color","set_strikethrough_color","set_text_color","set_underline_color","strikethrough","strikethrough","strikethrough_color","strikethrough_with_color","text_color","text_color","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","underline","underline","underline_color","underline_with_color","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_6X9","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","FONT_6X13","FONT_7X14","FONT_8X13","FONT_9X15","FONT_9X18","ASCII","Ascii","GlyphMapping","ISO_8859_1","ISO_8859_10","ISO_8859_13","ISO_8859_14","ISO_8859_15","ISO_8859_16","ISO_8859_2","ISO_8859_3","ISO_8859_4","ISO_8859_5","ISO_8859_7","ISO_8859_9","Iso8859_1","Iso8859_10","Iso8859_13","Iso8859_14","Iso8859_15","Iso8859_16","Iso8859_2","Iso8859_3","Iso8859_4","Iso8859_5","Iso8859_7","Iso8859_9","JIS_X0201","JisX0201","Mapping","StrGlyphMapping","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","chars","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","contains","eq","eq","fmt","fmt","from","from","glyph_mapping","hash","hash","index","index","into","into","iter","mime","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","ranges","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BLACK","BLACK","BLUE","Bgr555","Bgr565","Bgr666","Bgr888","BinaryColor","CSS_ALICE_BLUE","CSS_ANTIQUE_WHITE","CSS_AQUA","CSS_AQUAMARINE","CSS_AZURE","CSS_BEIGE","CSS_BISQUE","CSS_BLACK","CSS_BLANCHED_ALMOND","CSS_BLUE","CSS_BLUE_VIOLET","CSS_BROWN","CSS_BURLY_WOOD","CSS_CADET_BLUE","CSS_CHARTREUSE","CSS_CHOCOLATE","CSS_CORAL","CSS_CORNFLOWER_BLUE","CSS_CORNSILK","CSS_CRIMSON","CSS_CYAN","CSS_DARK_BLUE","CSS_DARK_CYAN","CSS_DARK_GOLDENROD","CSS_DARK_GRAY","CSS_DARK_GREEN","CSS_DARK_KHAKI","CSS_DARK_MAGENTA","CSS_DARK_OLIVE_GREEN","CSS_DARK_ORANGE","CSS_DARK_ORCHID","CSS_DARK_RED","CSS_DARK_SALMON","CSS_DARK_SEA_GREEN","CSS_DARK_SLATE_BLUE","CSS_DARK_SLATE_GRAY","CSS_DARK_TURQUOISE","CSS_DARK_VIOLET","CSS_DEEP_PINK","CSS_DEEP_SKY_BLUE","CSS_DIM_GRAY","CSS_DODGER_BLUE","CSS_FIRE_BRICK","CSS_FLORAL_WHITE","CSS_FOREST_GREEN","CSS_FUCHSIA","CSS_GAINSBORO","CSS_GHOST_WHITE","CSS_GOLD","CSS_GOLDENROD","CSS_GRAY","CSS_GREEN","CSS_GREEN_YELLOW","CSS_HONEYDEW","CSS_HOT_PINK","CSS_INDIAN_RED","CSS_INDIGO","CSS_IVORY","CSS_KHAKI","CSS_LAVENDER","CSS_LAVENDER_BLUSH","CSS_LAWN_GREEN","CSS_LEMON_CHIFFON","CSS_LIGHT_BLUE","CSS_LIGHT_CORAL","CSS_LIGHT_CYAN","CSS_LIGHT_GOLDENROD_YELLOW","CSS_LIGHT_GRAY","CSS_LIGHT_GREEN","CSS_LIGHT_PINK","CSS_LIGHT_SALMON","CSS_LIGHT_SEA_GREEN","CSS_LIGHT_SKY_BLUE","CSS_LIGHT_SLATE_GRAY","CSS_LIGHT_STEEL_BLUE","CSS_LIGHT_YELLOW","CSS_LIME","CSS_LIME_GREEN","CSS_LINEN","CSS_MAGENTA","CSS_MAROON","CSS_MEDIUM_AQUAMARINE","CSS_MEDIUM_BLUE","CSS_MEDIUM_ORCHID","CSS_MEDIUM_PURPLE","CSS_MEDIUM_SEA_GREEN","CSS_MEDIUM_SLATE_BLUE","CSS_MEDIUM_SPRING_GREEN","CSS_MEDIUM_TURQUOISE","CSS_MEDIUM_VIOLET_RED","CSS_MIDNIGHT_BLUE","CSS_MINT_CREAM","CSS_MISTY_ROSE","CSS_MOCCASIN","CSS_NAVAJO_WHITE","CSS_NAVY","CSS_OLD_LACE","CSS_OLIVE","CSS_OLIVE_DRAB","CSS_ORANGE","CSS_ORANGE_RED","CSS_ORCHID","CSS_PALE_GOLDENROD","CSS_PALE_GREEN","CSS_PALE_TURQUOISE","CSS_PALE_VIOLET_RED","CSS_PAPAYA_WHIP","CSS_PEACH_PUFF","CSS_PERU","CSS_PINK","CSS_PLUM","CSS_POWDER_BLUE","CSS_PURPLE","CSS_REBECCAPURPLE","CSS_RED","CSS_ROSY_BROWN","CSS_ROYAL_BLUE","CSS_SADDLE_BROWN","CSS_SALMON","CSS_SANDY_BROWN","CSS_SEASHELL","CSS_SEA_GREEN","CSS_SIENNA","CSS_SILVER","CSS_SKY_BLUE","CSS_SLATE_BLUE","CSS_SLATE_GRAY","CSS_SNOW","CSS_SPRING_GREEN","CSS_STEEL_BLUE","CSS_TAN","CSS_TEAL","CSS_THISTLE","CSS_TOMATO","CSS_TURQUOISE","CSS_VIOLET","CSS_WHEAT","CSS_WHITE","CSS_WHITE_SMOKE","CSS_YELLOW","CSS_YELLOW_GREEN","CYAN","GREEN","Gray2","Gray4","Gray8","GrayColor","IntoStorage","MAGENTA","MAX_B","MAX_G","MAX_R","Off","On","PixelColor","RED","Raw","Rgb555","Rgb565","Rgb666","Rgb888","RgbColor","Storage","WHITE","WHITE","WebColors","YELLOW","az","az","az","az","az","az","az","az","az","az","az","az","b","b","b","b","b","b","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","char_to_color","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","color_to_char","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","g","g","g","g","g","g","g","g","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into_storage","invert","is_off","is_on","luma","luma","luma","luma","new","new","new","new","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","r","r","r","r","r","r","r","raw","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BITS_PER_PIXEL","BigEndian","ByteOrder","Bytes","LittleEndian","RawData","RawU1","RawU16","RawU2","RawU24","RawU32","RawU4","RawU8","Storage","ToBytes","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Angle","AngleUnit","ContainsPoint","ContiguousIteratorExt","Dimensions","DrawTarget","DrawTargetExt","Drawable","GrayColor","ImageDrawable","ImageDrawableExt","IntoStorage","OffsetOutline","OriginDimensions","Pixel","PixelColor","PixelIteratorExt","Point","PointsIter","Primitive","RawData","RgbColor","Size","Transform","WebColors","_","Arc","Center","Circle","Color","ContainsPoint","CornerRadii","CornerRadiiBuilder","Ellipse","Inside","Iter","Line","OffsetOutline","Output","Outside","PointsIter","Polyline","Primitive","PrimitiveStyle","PrimitiveStyleBuilder","Rectangle","RoundedRectangle","Sector","StrokeAlignment","Styled","StyledDimensions","StyledDrawable","Triangle","arc","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","bounding_box","build","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","circle","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","contains","default","default","default","default","draw","draw_styled","ellipse","eq","eq","eq","eq","fill_area","fill_color","fill_color","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into_styled","is_transparent","line","new","new","new","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pixels","points","polyline","primitive","rectangle","reset_fill_color","reset_stroke_color","rounded_rectangle","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sector","stroke_alignment","stroke_alignment","stroke_area","stroke_color","stroke_color","stroke_width","stroke_width","style","styled_bounding_box","to_owned","to_owned","to_owned","to_owned","top_left","top_right","translate","translate_mut","triangle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_fill","with_stroke","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Arc","Points","StyledPixelsIterator","angle_start","angle_sweep","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","diameter","draw","draw_styled","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_circle","into","into","into","into_iter","into_iter","new","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_circle","to_owned","to_owned","to_owned","top_left","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Circle","Points","StyledPixelsIterator","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contains","default","diameter","draw","draw_styled","eq","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","into_iter","into_iter","new","next","next","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_owned","to_owned","to_owned","top_left","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Ellipse","Points","StyledPixelsIterator","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contains","default","draw","draw_styled","eq","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","into_iter","into_iter","new","next","next","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","styled_bounding_box","to_owned","to_owned","to_owned","top_left","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Line","Points","StyledPixelsIterator","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","delta","draw","draw_styled","end","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","into_iter","into_iter","midpoint","new","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","start","styled_bounding_box","to_owned","to_owned","to_owned","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_delta","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Points","Polyline","StyledPixelsIterator","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","draw","draw_styled","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","into_iter","into_iter","new","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_owned","to_owned","to_owned","translate","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vertices","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Points","Rectangle","StyledPixelsIterator","anchor_point","anchor_x","anchor_y","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bottom_right","bounding_box","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","columns","contains","contains","default","draw","draw_styled","empty","eq","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","hash","intersection","into","into","into","into_iter","into_iter","is_zero_sized","new","next","next","offset","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","resized","resized_height","resized_width","rows","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","size","styled_bounding_box","to_owned","to_owned","to_owned","top_left","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","with_corners","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","zero","CornerRadii","CornerRadiiBuilder","Points","RoundedRectangle","StyledPixelsIterator","all","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_left","bottom_left","bottom_right","bottom_right","bounding_box","build","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","confine_radii","contains","corners","default","default","draw","draw_styled","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into_iter","into_iter","left","new","new","new","next","next","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","points","rectangle","right","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_owned","to_owned","to_owned","to_owned","to_owned","top","top_left","top_left","top_right","top_right","translate","translate_mut","translated","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_equal_corners","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Points","Sector","StyledPixelsIterator","angle_start","angle_sweep","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","center","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","contains","diameter","draw","draw_styled","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_circle","into","into","into","into_iter","into_iter","new","next","next","offset","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_circle","to_owned","to_owned","to_owned","top_left","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_center","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Points","StyledPixelsIterator","Triangle","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contains","default","draw","draw_styled","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_slice","hash","hash","hash","into","into","into","into_iter","into_iter","new","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","styled_bounding_box","to_owned","to_owned","to_owned","translate","translate_mut","translated","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vertices","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Alignment","Alphabetic","Baseline","Bottom","Center","Custom","DecorationColor","Left","LineHeight","Middle","None","Percent","Pixels","Right","Text","TextColor","TextStyle","TextStyleBuilder","Top","alignment","alignment","az","az","az","az","az","az","az","baseline","baseline","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","character_style","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","default","draw","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","is_custom","is_none","is_text_color","line_height","line_height","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","position","renderer","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","text","text_style","to_absolute","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate","translate_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","with_alignment","with_alignment","with_baseline","with_baseline","with_text_style","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CharacterStyle","Color","Color","TextMetrics","TextRenderer","az","borrow","borrow_mut","bounding_box","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","draw_string","draw_whitespace","eq","fmt","from","hash","into","line_height","measure_string","next_position","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","set_background_color","set_background_color","set_strikethrough_color","set_strikethrough_color","set_text_color","set_text_color","set_underline_color","set_underline_color","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Transform","translate","translate_mut"],"q":["embedded_graphics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::draw_target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::framebuffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::geometryembedded_graphics::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::iterator","","","","","","","","embedded_graphics::iterator::contiguous","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::iterator::pixel","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::iterator::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mock_display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::ascii","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_1","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_10","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_13","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_14","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_15","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_16","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_2","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_3","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_4","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_5","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_7","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::iso_8859_9","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::jis_x0201","","","","","","embedded_graphics::mono_font::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolorembedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitivesembedded_graphics::primitives::arc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::circle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::ellipse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::polyline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::rounded_rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::sector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::triangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::textembedded_graphics::text::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::transform","",""],"d":["The pixel color type.","Marks an object as “drawable”. Must be implemented for …","The return type of the <code>draw</code> method.","A single pixel.","","","","","","","","","","","Draw the graphics object using the supplied DrawTarget.","","A target for embedded-graphics drawing operations.","","Drawing examples","","Framebuffer.","Returns the argument unchanged.","Geometry module.","","Image support for embedded-graphics","Calls <code>U::from(self)</code>.","Iterators.","Mock display for use in tests.","Monospaced bitmap fonts.","","","","Pixel color types.","Prelude","Graphics primitives","","","Text drawing.","","Transformations for graphics objects","","","","","","","","Clipped draw target.","The pixel color type the targetted display supports.","Color conversion draw target.","Cropped draw target.","A target for embedded-graphics drawing operations.","Extension trait for <code>DrawTarget</code>s.","Error type to return when a drawing operation fails.","Translated draw target.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fill the entire display with a solid color.","","","Creates a clipped draw target based on this draw target.","","","","","Creates a color conversion draw target.","","","","","Creates a cropped draw target based on this draw target.","","","","","Draw individual pixels to the display without a defined …","","","","","Fill a given area with an iterator providing a contiguous …","","","","","Fill a given area with a solid color.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Creates a translated draw target based on this draw target.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A framebuffer.","Returns an image based on the framebuffer content.","","","","","Calculates the required buffer size.","Calculates the required buffer size.","","","","","","","","","","Returns a reference to the raw framebuffer data.","Returns a mutable reference to the raw framebuffer data.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new framebuffer.","","","","","","","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","Sets the color of a pixel.","","","","","","","","","","","Anchor point.","X axis anchor point.","Y axis anchor point.","Angle.","AngleUnit trait.","Bottom.","Bottom center.","Bottom left.","Bottom right.","Center.","Center.","Center.","Center left.","Center right.","Adds the ability to get the bounding box of an item.","Left.","Dimensions with <code>top_left</code> of the bounding box at <code>(0, 0)</code>.","2D point.","Right.","2D size.","Top.","Top center.","Top left.","Top right.","Remove the sign from a coordinate","Compute the absolute value of the angle.","","Offsets a point by adding a size.","","","Offsets a point by adding a size.","","","","","","","","","","","","","","","","","","","","","","Returns the bounding box.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the componentwise division of two <code>Points</code>s.","Returns the componentwise division of two <code>Size</code>s.","Returns the componentwise maximum of two <code>Point</code>s","Returns the componentwise maximum of two <code>Size</code>s.","Returns the componentwise minimum of two <code>Point</code>s","Returns the componentwise minimum of two <code>Size</code>s.","Returns the componentwise multiplication of two <code>Point</code>s.","Returns the componentwise multiplication of two <code>Size</code>s.","","","Convert a number (interpreted as degrees) to an <code>Angle</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an angle defined in degrees.","Creates an angle defined in radians.","Creates an anchor point from an X and Y component.","","","","","","The height.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a point from  X and Y coordinates.","Creates a size from a width and a height.","Creates a point with X and Y values set to an equal value.","Creates a size with width and height set to an equal value.","Normalize the angle to less than one full rotation (ie. in …","","","","","","","","","","","","","","","","","","","Convert a number (interpreted as radians) to an <code>Angle</code>.","Saturating addition.","","","","","","","","","","","","","Saturating subtraction.","Returns the size of the bounding box.","","Offsets a point by subtracting a size.","","","Offsets a point by subtracting a size.","","","","Return numerical value of the angle in degree","","","","","","","Return numerical value of the angle in radian","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The width.","","","","","","","","","","","","","Returns the X axis component.","The x coordinate.","Returns a point with equal <code>x</code> value and <code>y</code> set to <code>0</code>.","Returns a size with equal <code>width</code> value and <code>height</code> set to <code>0</code>.","Returns the Y axis component.","The y coordinate.","Returns a point with equal <code>y</code> value and <code>x</code> set to <code>0</code>.","Returns a size with equal <code>height</code> value and <code>width</code> set to <code>0</code>.","Creates a point with X and Y equal to zero.","Creates a size with width and height equal to zero.","Creates a zero degree angle.","The color type.","The color type.","Pixel getter.","Image object.","Image drawable.","Extension trait for image drawables.","An image constructed from a slice of raw pixel data.","Image with big endian data.","Image with little endian data.","Sub image.","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the entire image to the target.","","","","Draws a part of the image to the target.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new image.","Creates a new <code>Image</code>.","","","","","","","","Gets the color of a pixel.","","","","","","","","","","Returns a sub image of this image drawable.","","","Translate the image by a given delta, returning a new image","Translate the image by a given delta, modifying the …","","","","","","","","","","","","","","","","Creates a new <code>Image</code> centered around a given point.","","","","","","","Extension trait for contiguous iterators.","Extension trait for pixel iterators.","Contiguous iterator.","Draws the pixel iterator to a draw target.","Converts a contiguous iterator into a pixel iterator.","Pixel iterator.","Raw data iterator.","Returns a translated version of the iterator.","Converts a contiguous iterator into a pixel iterator.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Translated pixel iterator.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Iterator for raw data slices with less than 8 BPP.","Iterator for raw data slices with 8 BPP.","Iterator for raw data slices more than 8 BPP.","Raw data slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a new raw data slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mapping between <code>char</code>s and colors.","Mock display struct","Color used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …","Color used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …","Returns the area that was affected by drawing operations.","Checks if the displays are equal.","Checks if the displays are equal.","Checks if the display is equal to the given pattern.","Checks if the display is equal to the given pattern.","","","","","","Converts a char into a color of type <code>C</code>.","","","","","","","Converts a color of type <code>C</code> into a char.","","","Compares the display to another display.","","Changes the color of a pixel.","","","Returns the argument unchanged.","Creates a new mock display from a character pattern.","Create a mock display from an iterator of <code>Point</code>s.","Returns the color of a pixel.","Calls <code>U::from(self)</code>.","Maps a <code>MockDisplay&lt;C&gt;&#39; to a </code>MockDisplay` by applying a …","Creates a new empty mock display.","","","","","Sets if out of bounds drawing is allowed.","Sets if overdrawing is allowed.","Changes the value of a pixel without bounds checking.","Sets the points in an iterator to the given color.","","Returns a copy of with the content mirrored by swapping x …","","","","","","","","","","Decoration dimensions.","Monospaced bitmap font.","Style properties for text using a monospaced font.","Text style builder for monospaced fonts.","ASCII glyph subset.","","","","","Sets the background color.","Background color.","The baseline.","","","","","","","","","Builds the text style.","","","","","Size of a single character in pixel.","Spacing between characters.","","","","","","","","","","","","","","","","","","","Creates a new default strikethrough decoration for the …","Creates a new default underline decoration for the given …","","","","","","","","","","Sets the font.","Font.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Glyph mapping.","","Height of the decoration.","Raw image data containing the font.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the style is transparent.","ISO_8859_1 glyph subset.","ISO_8859_10 glyph subset.","ISO_8859_13 glyph subset.","ISO_8859_14 glyph subset.","ISO_8859_15 glyph subset.","ISO_8859_16 glyph subset.","ISO_8859_2 glyph subset.","ISO_8859_3 glyph subset.","ISO_8859_4 glyph subset.","ISO_8859_5 glyph subset.","ISO_8859_7 glyph subset.","ISO_8859_9 glyph subset.","JIS_X0201 glyph subset.","","Glyph mapping.","","Creates a text style with transparent background.","Creates a new text style builder.","Creates new decoration dimensions.","Offset from the top of the character to the top of the …","","","","","","","","","","Resets the background color to transparent.","Removes the strikethrough decoration.","Resets the text color to transparent.","Removes the underline decoration.","","","","","","","","","","","","","Enables strikethrough using the text color.","Strikethrough decoration dimensions.","Strikethrough color.","Enables strikethrough with a custom color.","Sets the text color.","Text color.","","","","","","","","","","","","","","","","","Enables underline using the text color.","Underline decoration dimensions.","Underline color.","Enables underline with a custom color.","","","","","","","","","","","","","","","","","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x9 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","6x13 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","ASCII.","ASCII.","Mapping from characters to glyph indices.","ISO/IEC 8859 Part 1: Latin-1, Western European.","ISO/IEC 8859 Part 10: Latin-6, Nordic.","ISO/IEC 8859 Part 13: Latin-7, Baltic Rim.","ISO/IEC 8859 Part 14: Latin-8, Celtic.","ISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).","ISO/IEC 8859 Part 16: Latin-10: South-East European.","ISO/IEC 8859 Part 2: Latin-2, Central European.","ISO/IEC 8859 Part 3: Latin-3, South European.","ISO/IEC 8859 Part 4: Latin-4, North European.","ISO/IEC 8859 Part 5: Latin/Cyrillic.","ISO/IEC 8859 Part 7: Latin/Greek.","ISO/IEC 8859 Part 9: Latin-5, Turkish.","ISO/IEC 8859 Part 1: Latin-1, Western European.","ISO/IEC 8859 Part 10: Latin-6, Nordic.","ISO/IEC 8859 Part 13: Latin-7, Baltic Rim.","ISO/IEC 8859 Part 14: Latin-8, Celtic.","ISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).","ISO/IEC 8859 Part 16: Latin-10: South-East European.","ISO/IEC 8859 Part 2: Latin-2, Central European.","ISO/IEC 8859 Part 3: Latin-3, South European.","ISO/IEC 8859 Part 4: Latin-4, North European.","ISO/IEC 8859 Part 5: Latin/Cyrillic.","ISO/IEC 8859 Part 7: Latin/Greek.","ISO/IEC 8859 Part 9: Latin-5, Turkish.","JIS X 0201: Japanese katakana (halfwidth).","JIS X 0201: Japanese katakana (halfwidth).","Mapping.","Glyph mapping stored as a UTF-8 string.","","","","","","","","","Returns an iterator over the characters in this mapping.","","","","","","","","","","","Returns if the mapping contains the given char.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a glyph mapping for this mapping.","","","Maps a character to a glyph index.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over all mappings.","Returns the MIME identifier for this mapping.","Creates a new glyph mapping.","","","","","","","Returns an iterator over the character ranges.","","","","","","","","","","","","","","","","","","","","","Black color (0% luma).","Black color (R: 0%, G: 0%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Bgr555 color.","Bgr565 color.","Bgr666 color.","Bgr888 color.","Binary color."," Alice Blue"," Antique White"," Aqua"," Aquamarine"," Azure"," Beige"," Bisque"," Black"," Blanched Almond"," Blue"," Blue Violet"," Brown"," Burly Wood"," Cadet Blue"," Chartreuse"," Chocolate"," Coral"," Cornflower Blue"," Cornsilk"," Crimson"," Cyan"," Dark Blue"," Dark Cyan"," Dark Goldenrod"," Dark Gray"," Dark Green"," Dark Khaki"," Dark Magenta"," Dark Olive Green"," Dark Orange"," Dark Orchid"," Dark Red"," Dark Salmon"," Dark Sea Green"," Dark Slate Blue"," Dark Slate Gray"," Dark Turquoise"," Dark Violet"," Deep Pink"," Deep Sky Blue"," Dim Gray"," Dodger Blue"," Fire Brick"," Floral White"," Forest Green"," Fuchsia"," Gainsboro"," Ghost White"," Gold"," Goldenrod"," Gray"," Green"," Green Yellow"," Honeydew"," Hot Pink"," Indian Red"," Indigo"," Ivory"," Khaki"," Lavender"," Lavender Blush"," Lawn Green"," Lemon Chiffon"," Light Blue"," Light Coral"," Light Cyan"," Light Goldenrod Yellow"," Light Gray"," Light Green"," Light Pink"," Light Salmon"," Light Sea Green"," Light Sky Blue"," Light Slate Gray"," Light Steel Blue"," Light Yellow"," Lime"," Lime Green"," Linen"," Magenta"," Maroon"," Medium Aquamarine"," Medium Blue"," Medium Orchid"," Medium Purple"," Medium Sea Green"," Medium Slate Blue"," Medium Spring Green"," Medium Turquoise"," Medium Violet Red"," Midnight Blue"," Mint Cream"," Misty Rose"," Moccasin"," Navajo White"," Navy"," Old Lace"," Olive"," Olive Drab"," Orange"," Orange Red"," Orchid"," Pale Goldenrod"," Pale Green"," Pale Turquoise"," Pale Violet Red"," Papaya Whip"," Peach Puff"," Peru"," Pink"," Plum"," Powder Blue"," Purple"," Rebeccapurple"," Red"," Rosy Brown"," Royal Blue"," Saddle Brown"," Salmon"," Sandy Brown"," Seashell"," Sea Green"," Sienna"," Silver"," Sky Blue"," Slate Blue"," Slate Gray"," Snow"," Spring Green"," Steel Blue"," Tan"," Teal"," Thistle"," Tomato"," Turquoise"," Violet"," Wheat"," White"," White Smoke"," Yellow"," Yellow Green","Cyan color (R: 0%, G: 100%, B: 100%)","Green color (R: 0%, G: 100%, B: 0%)","2 bit grayscale color.","4 bit grayscale color.","8 bit grayscale color.","Grayscale color.","Convert a <code>PixelColor</code> into its underlying storage type","Magenta color (R: 100%, G: 0%, B: 100%)","The maximum value in the blue channel.","The maximum value in the green channel.","The maximum value in the red channel.","Inactive pixel.","Active pixel.","Pixel color trait.","Red color (R: 100%, G: 0%, B: 0%)","Raw data type.","Rgb555 color.","Rgb565 color.","Rgb666 color.","Rgb888 color.","RGB color.","The underlying storage type for the pixel color","White color (100% luma).","White color (R: 100%, G: 100%, B: 100%)","Named colors as defined in the CSS specification.","Yellow color (R: 100%, G: 100%, B: 0%)","","","","","","","","","","","","","Returns the blue channel value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the green channel value.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>PixelColor</code> into its raw storage form","Inverts the color.","Returns <code>true</code> if this color is <code>Off</code>.","Returns <code>true</code> if this color is <code>On</code>.","Returns the luma channel value.","","","","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new Rgb555 color. Too large channel values will …","Creates a new Bgr555 color. Too large channel values will …","Creates a new Rgb565 color. Too large channel values will …","Creates a new Bgr565 color. Too large channel values will …","Creates a new Rgb666 color. Too large channel values will …","Creates a new Bgr666 color. Too large channel values will …","Creates a new Rgb888 color. Too large channel values will …","Creates a new Bgr888 color. Too large channel values will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the red channel value.","","","","","","","","","Raw color types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bits per pixel.","Big endian byte order marker.","Raw data byte order.","Return type of methods in this trait.","Little endian byte order marker.","Trait implemented by all <code>RawUx</code> types.","1 bit per pixel raw data.","16 bits per pixel raw data.","2 bits per pixel raw data.","24 bits per pixel raw data.","32 bits per pixel raw data.","4 bits per pixel raw data.","8 bits per pixel raw data.","Storage type.","Trait to convert colors into a byte array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>u32</code> into a <code>RawData</code> type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this raw data into the storage type.","","","","","","","","Creates a new color from the least significant 1 bit of …","Creates a new color from the least significant 2 bits of …","Creates a new color from the least significant 4 bits of …","Creates a new color from the least significant 8 bits of …","Creates a new color from the least significant 16 bits of …","Creates a new color from the least significant 24 bits of …","Creates a new color from the least significant 32 bits of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a color into a byte array with big endian byte …","","","","","","","","Converts a color into a byte array with little endian byte …","","","","","","","","Converts a color into a byte array with native byte order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Center.","","Color type.","Trait to check if a point is inside a closed shape.","The definition of each corner radius for a rounded …","<code>CornerRadii</code> builder.","","Inside.","Iterator over all points inside the primitive.","","Offset outline trait.","Output type.","Outside.","Create an iterator over all points in the primitive.","","Primitive trait","Style properties for primitives.","Primitive style builder.","","","","Stroke alignment.","Styled.","Styled dimensions.","Styled drawable.","","The arc primitive","","","","","","","","","","","","","Bottom left corner radius","Bottom right corner radius","","Builds the primitive style.","","","","","","","","","","","","","The circle primitive","","","","","","","","","","","","","Returns <code>true</code> if the given point is inside the shape.","","","","","","Draws the primitive using the given style.","The ellipse primitive","","","","","Returns the fill area.","Sets the fill color.","Fill color of the primitive.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this primitive into a <code>Styled</code>.","Returns if a primitive drawn with this style is completely …","The line primitive","Creates a primitive style without fill and stroke.","Creates a new primitive style builder.","Creates a styled.","Offsets the outline of the shape.","","","","","","","","","","","","","Returns an iterator over the pixels in this styled …","Returns an iterator over all points inside the primitive.","The polyline primitive","Primitive.","The rectangle primitive. Also good for drawing squares.","Resets the fill color to transparent.","Resets the stroke color to transparent.","The rounded rectangle primitive.","","","","","","","","","The sector primitive","Sets the stroke alignment.","Stroke alignment.","Returns the stroke area.","Sets the stroke color.","Stroke color of the primitive.","Sets the stroke width.","Stroke width in pixels.","Style.","Returns the bounding box using the given style.","","","","","Top left corner radius","Top right corner radius","","","The triangle primitive.","","","","","","","","","","","","","","","","","","","","","Creates a fill primitive style.","Creates a stroke primitive style.","","","","","","","","","Arc primitive","Iterator over all points on the arc line.","Pixel iterator for each pixel in the arc border","Angle at which the arc starts","Angle defining the arc sweep starting at angle_start","","","","","","","","","","","","","","Return the center point of the arc.","","","","","","","","","","","","","Diameter of the circle supporting the arc","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an arc based on a circle.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new arc delimited with a top-left point with a …","","","","","","","","","","","","","","","","","","Returns a circle with the same <code>top_left</code> and <code>diameter</code> as …","","","","Top-left point of the bounding-box of the circle …","Translate the arc from its current position to a new …","Translate the arc from its current position to a new …","","","","","","","","","","","","","","","","","Create a new arc centered around a given point with a …","","","","","","","Circle primitive","Iterator over all points inside the circle.","Pixel iterator for each pixel in the circle border","","","","","","","","","","","","","","Return the center point of the circle","","","","","","","","","","","","","","","","Diameter of the circle","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new circle delimited with a top-left point with a …","","","","","","","","","","","","","","","","","","","","","","Top-left point of circle’s bounding box","Translate the circle from its current position to a new …","Translate the circle from its current position to a new …","","","","","","","","","","","","","","","","","Create a new circle centered around a given point with a …","","","","","","","Ellipse primitive","Iterator over all points inside the ellipse","Pixel iterator for each pixel in the ellipse border","","","","","","","","","","","","","","Return the center point of the ellipse","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new ellipse delimited with a top-left point with …","","","","","","","","","","","","","","","","","","Size of the ellipse","","","","","Top-left point of ellipse’s bounding box","Translate the ellipse from its current position to a new …","Translate the ellipse from its current position to a new …","","","","","","","","","","","","","","","","","Create a new ellipse centered around a given point with a …","","","","","","","Line primitive","Iterator over all points on the line.","Styled line iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute the delta (<code>end - start</code>) of the line.","","","End point","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Compute the midpoint of the line.","Creates a line between two points.","","","","","","","","","","","","","","","","","","Start point","","","","","Translate the line from its current position to a new …","Translate the line from its current position to a new …","","","","","","","","","","","","","","","","","Creates a line with a start point and a delta vector.","","","","","","","An iterator over all pixel positions on the polyline","Polyline primitive","Pixel iterator for each pixel in the line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new polyline from a list of vertices","","","","","","","","","","","","","","","","","","","","","","Translate the polyline from its current position to a new …","An offset to apply to the polyline as a whole","Translate the polyline from its current position to a new …","","","","","","","","","","","","","","","","","All vertices in the line","","","","","","","Iterator over all points inside the rectangle.","Rectangle primitive","Pixel iterator for each pixel in the rect border","Returns an anchor point.","Returns the X coordinate of a given anchor edge of the …","Returns the Y coordinate of a given anchor edge of the …","","","","","","","","","","Returns the bottom right corner of this rectangle.","","","","","Returns the center of this rectangle.","","","","","","","","","","","","","","Returns the range of X coordinates in this rectangle.","","Return whether the rectangle contains a given point.","","","","Create a points iterator that returns no items.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a new <code>Rectangle</code> containing the intersection of <code>self</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> is the rectangle is zero sized.","Creates a new rectangle from the top left point and the …","","","","Offset the rectangle by a given value.","","","","","","","","","Returns a resized copy of this rectangle.","Returns a new rectangle with the given height, resized …","Returns a new rectangle with the given width, resized …","Returns the range of Y coordinates in this rectangle.","","","","","","","Size of the rectangle.","","","","","Top left point of the rectangle.","Translate the rect from its current position to a new …","Translate the rect from its current position to a new …","","","","","","","","","","","","","","","","","Creates a new rectangle from the center point and the size.","Creates a new rectangle from two corners.","","","","","","","Returns a zero sized rectangle.","The definition of each corner radius for a rounded …","<code>CornerRadii</code> builder.","Iterator over all points inside the rounded rectangle.","Rounded rectangle primitive.","Pixel iterator for each pixel in the rect border","Set all corner radii to the same value.","","","","","","","","","","","","","","","","Set the bottom left and bottom right corner radii to the …","Set the bottom left corner radius.","Bottom left corner radius","Set the bottom right corner radius.","Bottom right corner radius","","Consume the builder and produce a <code>CornerRadii</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the rounded rectangle with confined corner radii.","","The radius of each corner","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Set the top left and bottom left corner radii to the same …","Create a new set of corner radii with all corners having …","Create a new corner radii builder.","Creates a new rounded rectangle with the given corner …","","","","","","","","","","","","","","","","","","The base rectangle","Set the top right and bottom right corner radii to the …","","","","","","","","","","","","","","","","","Set the top left and top right corner radii to the same …","Set the top left corner radius.","Top left corner radius","Set the top right corner radius.","Top right corner radius","Translate the rounded rectangle from its current position …","Translate the rounded rectangle from its current position …","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rounded rectangle with equal corner radius …","","","","","","","","","","","Iterator over all points inside the sector.","Sector primitive","Pixel iterator for each pixel in the sector border","Angle at which the sector starts","Angle defining the sector sweep starting at angle_start","","","","","","","","","","","","","","Return the center point of the sector","","","","","","","","","","","","","","Diameter of the circle supporting the sector","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an arc based on a circle.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new sector delimited with a top-left point with a …","","","","","","","","","","","","","","","","","","","Returns a circle with the same <code>top_left</code> and <code>diameter</code> as …","","","","Top-left point of the bounding-box of the circle …","Translate the sector from its current position to a new …","Translate the sector from its current position to a new …","","","","","","","","","","","","","","","","","Create a new sector centered around a given point with a …","","","","","","","Iterator over all points inside the triangle.","Pixel iterator for each pixel in the triangle border","Triangle primitive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new triangle from a <code>Point</code> slice.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new triangle with the given vertices.","","","","","","","","","","","","","","","","","","","","","Translate the triangle from its current position to a new …","Translate the triangle from its current position to a new …","","","","","","","","","","","","","","","","","The vertices of the triangle.","","","","","","","Horizontal text alignment.","Alphabetic baseline.","Text baseline.","Bottom.","Center.","Text decoration with a custom color.","Text decoration color.","Left.","Text line height.","Middle.","No text decoration.","Relative line height in percent of the default line height.","Absolute line height in pixels.","Right.","Text drawable.","Text decoration with the same color as the text.","Text style.","Builder for text styles.","Top.","Sets the horizontal text alignment.","Horizontal text alignment.","","","","","","","","Sets the text baseline.","Text baseline.","","","","","","","","","","","","","","","","Builds the text style.","","","","","","","","The character style.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the decoration_color is <code>Custom</code>.","Returns <code>true</code> if the decoration_color is <code>None</code>.","Returns <code>true</code> if the decoration_color is <code>TextColor</code>.","Sets the line height.","Line height.","Creates a text drawable with the default text style.","Creates a new text style builder.","","","","","","","","","","","","","","","","","","","","","","The position.","Text renderer.","","","","","","","","","","","","","","","The string.","The text style.","Converts the line height to an absolute pixel distance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a text drawable with the given alignment.","Creates a new text style with the given alignment.","Creates a text drawable with the given baseline.","Creates a new text style with the given baseline.","Creates a text drawable with the given text style.","","","","","","","","","","","","","","","Character style.","The color type.","Color type.","Text metrics.","Text renderer.","","","","Bounding box.","","","","","","","Draws a string.","Draws whitespace of the given width.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the default line height.","Returns the text metrics for a string.","The position of the next text.","","","","","","Sets the background color.","Sets the background color.","Sets the strikethrough color.","Sets the strikethrough color.","Sets the text color.","Sets the text color.","Sets the underline color.","Sets the underline color.","","","","","","","","","Transform operations","Move the origin of an object by a given number of (x, y) …","Move the origin of an object by a given number of (x, y) …"],"i":[124,0,124,0,2,2,2,2,2,2,2,2,2,2,124,2,0,2,0,2,0,2,0,2,0,2,0,0,0,2,2,2,0,0,0,2,2,0,2,0,2,2,2,2,2,2,2,0,125,0,0,0,0,125,0,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,125,11,12,126,9,11,13,12,126,9,11,13,12,126,9,11,13,12,125,9,11,13,12,125,9,11,13,12,125,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,13,126,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,9,11,13,12,0,18,18,18,18,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,38,36,36,36,36,37,38,36,36,0,37,0,0,37,0,38,36,36,36,17,35,17,17,16,35,17,17,16,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,127,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,17,16,17,16,17,16,17,16,17,16,128,17,16,17,16,17,16,36,37,38,35,17,17,16,16,36,37,38,35,17,17,17,17,16,16,16,16,36,37,38,35,35,35,36,17,16,36,37,38,16,17,16,17,16,36,37,38,35,17,16,17,16,17,35,17,16,17,16,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,128,16,17,16,36,37,38,35,17,16,36,37,38,35,16,129,17,17,16,35,17,17,16,35,35,17,16,36,37,38,35,35,17,16,17,17,17,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,17,16,36,37,38,35,16,17,16,36,37,38,35,17,16,36,37,38,35,36,17,17,16,36,17,17,16,17,16,35,130,131,0,0,0,0,0,0,0,0,19,44,43,19,44,43,19,44,43,19,44,43,19,44,43,19,44,43,19,44,43,19,43,19,43,19,130,19,44,43,130,19,44,19,19,44,43,19,44,43,19,19,44,43,19,43,19,44,43,19,44,43,19,131,19,19,44,43,19,44,43,19,44,132,19,43,43,43,19,44,43,19,44,43,19,44,43,19,44,43,19,44,43,43,19,44,43,19,44,43,0,0,0,133,134,0,0,133,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,47,47,48,50,47,47,48,49,50,47,48,49,50,47,47,48,49,50,47,47,47,47,47,47,47,47,47,47,48,49,50,47,48,48,48,49,50,50,50,50,50,50,48,48,48,49,50,50,50,50,50,50,47,48,49,50,47,48,49,50,47,47,48,49,50,47,48,49,50,48,48,48,49,50,50,50,50,50,50,47,48,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,0,0,135,135,51,51,51,51,51,51,51,51,51,51,135,51,51,51,51,51,51,135,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,57,56,58,59,56,57,58,57,56,58,59,57,56,58,59,56,57,56,58,59,58,58,57,56,58,59,57,56,58,59,57,56,58,59,57,56,58,59,59,59,59,59,57,57,57,58,59,57,56,58,59,56,57,57,56,56,58,59,58,59,59,58,57,56,58,59,57,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,57,57,56,59,59,57,56,58,59,57,56,58,59,59,56,56,56,56,57,56,58,59,57,56,58,59,57,57,57,57,56,58,57,56,56,57,57,56,58,59,57,56,58,59,57,56,58,59,57,56,58,59,56,58,57,56,57,56,58,59,57,56,58,59,57,56,58,59,57,56,58,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,0,66,0,0,64,66,64,66,64,66,64,66,64,64,66,64,66,64,66,64,66,64,66,64,64,66,64,66,64,66,66,64,66,136,64,64,66,66,66,64,64,66,64,66,64,66,64,64,66,64,66,64,66,64,66,64,66,64,66,64,66,64,66,64,66,64,66,137,138,138,0,0,0,0,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,138,138,0,0,0,0,0,138,138,138,138,75,75,0,138,54,0,0,0,0,0,140,137,138,0,138,75,76,77,78,68,69,70,71,72,73,53,74,138,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,53,53,53,53,53,53,53,53,53,53,53,53,53,74,74,74,74,74,74,74,74,74,74,74,74,74,138,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,140,75,75,75,137,76,77,78,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,138,68,69,70,71,72,73,53,74,0,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,75,76,77,78,68,69,70,71,72,73,53,74,141,0,0,142,0,0,0,0,0,0,0,0,0,141,0,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,23,23,31,31,31,30,30,30,29,29,29,28,28,28,28,28,28,27,27,27,27,27,27,24,24,26,25,141,23,31,30,29,28,27,24,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,141,23,31,30,29,28,27,24,23,31,30,29,28,27,24,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,142,23,31,30,29,28,27,24,142,23,31,30,29,28,27,24,142,23,31,30,29,28,27,24,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,23,31,30,29,28,27,24,26,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,86,0,0,0,0,84,143,0,0,86,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,82,84,81,83,82,84,81,83,82,84,81,109,109,81,82,83,82,84,81,83,82,84,81,83,82,84,81,0,83,82,84,81,83,82,84,81,83,82,84,81,144,83,82,84,81,81,86,0,83,82,84,81,81,82,83,83,82,84,81,83,82,82,84,81,83,82,84,81,83,82,84,81,145,83,0,83,82,81,87,83,82,84,81,83,82,84,81,83,82,84,81,81,143,0,81,0,82,82,0,83,82,84,81,83,82,84,81,0,82,83,81,82,83,82,83,81,80,83,82,84,81,109,109,81,81,0,83,82,84,81,83,82,84,81,83,82,84,81,83,82,84,81,83,82,84,81,83,83,83,82,84,81,83,82,84,81,0,0,0,89,89,90,91,89,90,91,89,90,91,89,89,90,91,89,89,90,91,89,90,91,89,90,91,89,90,91,89,89,91,89,90,91,89,90,91,89,90,91,89,89,90,91,89,90,91,89,90,91,90,91,89,90,91,89,89,89,90,91,89,90,91,89,89,89,90,91,89,89,89,89,91,90,91,89,90,91,89,90,91,89,90,91,89,90,91,89,89,90,91,89,90,91,89,0,0,0,93,94,92,93,94,92,93,94,92,92,93,94,92,92,93,94,92,93,94,92,93,94,92,93,94,92,92,92,92,92,94,92,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,92,92,93,94,92,93,94,92,92,93,94,92,92,92,92,94,93,94,92,93,94,92,93,94,92,93,94,92,93,94,92,92,93,94,92,93,94,92,0,0,0,96,97,95,96,97,95,96,97,95,95,96,97,95,95,96,97,95,96,97,95,96,97,95,96,97,95,95,95,95,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,95,95,96,97,95,96,97,95,95,95,96,97,95,95,95,95,97,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,95,96,97,95,96,97,95,0,0,0,99,100,98,99,100,98,99,100,98,98,99,100,98,99,100,98,99,100,98,99,100,98,99,100,98,99,98,98,98,100,98,98,99,98,99,100,98,99,100,98,99,98,99,100,98,99,100,98,98,99,100,99,100,98,99,100,98,99,98,98,99,100,98,99,100,98,98,98,99,100,98,98,98,100,99,100,98,99,100,98,99,100,98,99,100,98,99,100,98,98,99,100,98,99,100,98,0,0,0,102,103,101,102,103,101,102,103,101,101,102,103,101,102,103,101,102,103,101,102,103,101,102,103,101,102,101,101,103,101,102,101,102,103,101,102,103,101,102,101,102,103,101,102,103,101,102,103,102,103,101,102,103,101,102,101,101,102,103,101,102,103,101,101,102,103,101,101,101,101,103,102,103,101,102,103,101,102,103,101,102,103,101,102,103,101,101,102,103,101,102,103,101,0,0,0,10,10,10,104,10,105,104,10,105,104,10,105,10,10,104,10,105,10,104,10,105,104,10,105,104,10,105,104,10,105,10,10,10,10,10,105,10,104,104,10,105,104,10,105,104,10,105,104,10,105,10,104,10,105,104,105,10,10,104,105,10,10,104,10,105,104,10,105,10,10,10,10,10,10,104,10,105,104,10,105,10,10,104,10,105,10,10,10,105,104,10,105,104,10,105,104,10,105,104,10,105,104,10,105,10,10,104,10,105,104,10,105,10,0,0,0,0,0,107,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,107,107,109,107,109,108,107,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,108,108,108,108,109,107,111,108,109,107,110,111,108,109,107,110,111,108,109,107,107,110,111,108,109,107,110,111,108,109,107,110,111,108,110,111,107,109,107,108,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,108,108,108,107,109,107,110,111,108,109,107,110,111,108,108,109,107,110,111,108,107,107,109,107,109,108,108,111,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,109,107,110,111,108,108,109,107,110,111,108,109,107,110,111,108,0,0,0,112,112,113,114,112,113,114,112,113,114,112,112,113,114,112,112,113,114,112,113,114,112,113,114,112,113,114,112,112,112,114,112,113,114,112,113,114,112,113,114,112,112,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,112,112,113,114,112,113,114,112,112,112,113,114,112,112,112,112,114,113,114,112,113,114,112,113,114,112,113,114,112,113,114,112,112,113,114,112,113,114,112,0,0,0,116,117,115,116,117,115,116,117,115,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,115,115,115,117,115,116,117,115,116,117,115,116,117,115,115,116,117,115,116,117,115,116,117,115,116,117,116,117,115,116,117,115,115,115,116,117,115,116,117,115,115,116,117,115,115,115,117,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,115,116,117,115,116,117,115,0,61,0,61,119,63,0,119,0,61,63,123,123,119,0,63,0,0,61,118,122,121,122,118,61,119,63,123,118,122,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,118,121,122,118,61,119,63,123,121,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,61,119,63,123,122,123,121,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,118,61,119,63,123,121,122,61,119,63,123,121,122,118,61,119,63,123,63,63,63,118,122,121,118,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,0,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,121,123,121,122,118,61,119,63,123,121,121,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,118,61,119,63,123,121,122,121,122,121,121,122,118,61,119,63,123,121,122,118,61,119,63,123,0,146,120,0,0,62,62,62,62,62,62,62,62,62,62,120,120,62,62,62,62,62,120,120,62,62,62,62,62,62,146,146,146,146,146,146,146,146,62,62,62,62,62,62,62,62,0,88,88],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[2,2],[[]],[[2,2],3],[[],2],[[],4],[2,4],0,[[2,2],5],0,[[2,6],[[4,[7]]]],0,[[]],0,[2],0,[[]],0,0,0,[[]],[[]],[[2,2],[[1,[3]]]],0,0,0,[[]],[[]],0,[[]],0,[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,10],[11,10],[[],10],[12,10],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],4],[11,4],[12,4],[10,9],[10,9],[10,9],[10,9],[10,9],[[],11],[[],11],[[],11],[[],11],[[],11],[10,13],[10,13],[10,13],[10,13],[10,13],[[],4],[9,4],[11,4],[13,4],[12,4],[10,4],[[9,10],4],[[11,10],4],[[13,10],4],[[12,10],4],[10,4],[[9,10],4],[[11,10],4],[[13,10],4],[[12,10],4],[[9,6],14],[[[11,[15,15]],6],14],[[13,6],14],[[12,6],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,16],[17,12],[17,12],[17,12],[17,12],[17,12],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[18,19],[[]],[[]],[[]],[[],10],[[20,20],20],[[20,20,20],20],[[]],[[],1],[[],1],[10,9],[[[18,[21,21,21]]],[[18,[21,21,21]]]],[[]],[[[18,[22,22,22]],18],3],[[],11],[10,13],[18],[18],[[[18,[23]]],4],[[[18,[24,25]]],4],[[[18,[24,26]]],4],[[[18,[27,25]]],4],[[[18,[27,26]]],4],[[[18,[28,25]]],4],[[[18,[28,26]]],4],[[[18,[29]]],4],[[[18,[30]]],4],[[[18,[31]]],4],[[[18,[32,32,32]],18],5],[[[18,[15,15,15]],6],14],[[]],[[[18,[33,33,33]]]],[[]],[[],18],[[]],[[]],[[[18,[34,34,34]],18],[[1,[3]]]],[[18,17],1],[[]],[[]],[[[18,[23]],17]],[[[18,[31]],17]],[[[18,[30]],17]],[[[18,[29]],17]],[[[18,[28,26]],17]],[[[18,[28,25]],17]],[[[18,[27,26]],17]],[[[18,[27,25]],17]],[[[18,[24,26]],17]],[[[18,[24,25]],17]],[18,16],[[]],[17,12],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,17],[35,35],[[17,17],17],[[17,16],17],[[16,16],16],[[35,35],35],[[17,16]],[[17,17]],[[16,16]],[[35,35]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[17,17],[16,16],[36,36],[37,37],[38,38],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],[[17,17],3],[[16,16],3],[[36,36],3],[[37,37],3],[[38,38],3],[[17,17],17],[[16,16],16],[[17,17],17],[[16,16],16],[[17,17],17],[[16,16],16],[[17,17],17],[[16,16],16],[[],17],[[],16],[[],35],[[17,39],17],[[16,40],16],[[17,39]],[[16,40]],[[17,17],5],[[16,16],5],[[36,36],5],[[37,37],5],[[38,38],5],[[35,35],5],[[17,6],[[4,[7]]]],[[17,6],[[4,[7]]]],[[16,6],[[4,[7]]]],[[16,6],[[4,[7]]]],[[36,6],[[4,[7]]]],[[37,6],[[4,[7]]]],[[38,6],[[4,[7]]]],[[35,6],14],[[],17],[[],17],[[]],[[],17],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[41,35],[41,35],[[37,38],36],[17],[16],[36],[37],[38],0,[[17,20],39],[[16,20],40],[[]],[[]],[[]],[[]],[[]],[[]],[[17,39],17],[[16,40],16],[[17,39]],[[16,40]],[17],[35,35],[[39,39],17],[[40,40],16],[39,17],[40,16],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,17],[[1,[3]]]],[[16,16],[[1,[3]]]],[[36,36],[[1,[3]]]],[[37,37],[[1,[3]]]],[[38,38],[[1,[3]]]],[[35,35],[[1,[3]]]],[[],35],[[16,16],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,16],16],[[],16],[[17,17],17],[[17,16],17],[[16,16],16],[[35,35],35],[[17,16]],[[17,17]],[[16,16]],[[35,35]],[35,41],[[]],[[]],[[]],[[]],[[]],[[]],[35,41],[[],42],[[],42],[[],4],[[],[[4,[17]]]],[[],[[4,[17]]]],[[],[[4,[17]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,37],0,[17,17],[16,16],[36,38],0,[17,17],[16,16],[[],17],[[],16],[[],35],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[43,10],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[19,19],[[[43,[21]]],[[43,[21]]]],[[]],[[]],[[19,19],3],[[],4],[19,4],[44,4],[43,4],[10,4],[[19,10],4],[[44,10],4],[[19,19],5],[[19,6],14],[[[44,[15]],6],14],[[[43,[15]],6],14],[[]],[[]],[[]],[19],[[]],[[]],[[]],[40,19],[17,43],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19],[[1,[3]]]],[17,1],[[19,17],1],[[]],[[]],[[]],[[]],[[]],[[]],[19,16],[44,16],[10,44],[[]],[[]],[[43,17],43],[[43,17],43],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[17,43],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],4],[10,45],0,0,[17,46],0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],4],[[45,6],14],[[]],[[]],[[]],[45,1],[[]],[[]],[[]],[[]],[17,46],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],4],[[[46,[32]],46],5],[[[46,[15]],6],14],[[]],[[]],[[]],[46,1],[[]],[[]],[[]],[[]],[17,46],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[47,[21,21]]],[[47,[21,21]]]],[[]],[[[47,[22,22]],47],3],[[],4],[[],4],[[[47,[32,32]],47],5],[[[47,[15,15]],6],14],[[[48,[15]],6],14],[[49,6],14],[[[50,[15,15]],6],14],[[]],[[]],[[]],[[]],[[[47,[33,33]]]],[[]],[[]],[[]],[[]],[[[47,[28,25]]]],[[[47,[29]]]],[[[47,[27,26]]]],[[[47,[30]]]],[[[47,[24,26]]]],[[[47,[27,25]]]],[[[47,[24,25]]]],[[[47,[31]]]],[[[47,[28,26]]]],[[[47,[23]]]],[[]],[[]],[[]],[[],47],[[[48,[31]]],1],[[[48,[23]]],1],[[[48,[30]]],1],[49,1],[[[50,[24,26]]],1],[[[50,[28,25]]],1],[[[50,[28,26]]],1],[[[50,[27,25]]],1],[[[50,[24,25]]],1],[[[50,[27,26]]],1],[[[48,[23]],20],1],[[[48,[31]],20],1],[[[48,[30]],20],1],[[49,20],1],[[[50,[28,25]],20],1],[[[50,[24,25]],20],1],[[[50,[27,25]],20],1],[[[50,[27,26]],20],1],[[[50,[28,26]],20],1],[[[50,[24,26]],20],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[34,34]],47],[[1,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[30]]]],[[[48,[31]]]],[[[48,[23]]]],[49],[[[50,[24,26]]]],[[[50,[27,25]]]],[[[50,[24,25]]]],[[[50,[27,26]]]],[[[50,[28,26]]]],[[[50,[28,25]]]],[[]],[17,46],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[51,10],[[51,51]],[[51,51]],[51],[51],[[]],[[]],[[]],[[],10],[[]],[52],[[],1],[[],1],[10,9],[51,51],[[]],[[],11],[[],52],[10,13],[[],51],[[51,51],[[51,[53]]]],[51,4],[[51,17]],[[[51,[54]],[51,[54]]],5],[[51,6],14],[[]],[[],51],[[],51],[[51,17],1],[[]],[51,51],[[],51],[[]],[[]],[[]],[[]],[[51,5]],[[51,5]],[[51,17,1]],[[51,55,1]],[51,16],[51,51],[[]],[17,12],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[56,[54]],54],[[56,[54]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[54]]],[[57,[54]]]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[57,[21]]],[[57,[21]]]],[[[56,[21]]],[[56,[21]]]],[58,58],[59,59],[[]],[[]],[[]],[[]],[[59,59],3],[[],59],[40,59],[40,59],[[[57,[54]],60,17,61],[[4,[17]]]],[[[57,[54]],40,17,61],[[4,[17]]]],[[[57,[32]],57],5],[[58,58],5],[[59,59],5],[[[57,[15]],6],14],[[[56,[15]],6],14],[[58,6],14],[[59,6],14],[[56,58],56],0,[[]],[57,[[56,[54]]]],[[]],[[]],[[]],0,[59],0,0,[[]],[[]],[[]],[[]],[[[57,[54]]],5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[57,[54]]],40],0,[[[57,[54]],60,17,61],62],[[58,54],[[57,[54]]]],[[],56],[[40,40],59],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,59],[[1,[3]]]],[56,56],[56,56],[56,56],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[54]],1]],[[[57,[54]],63]],[[[57,[54]],1]],[[[57,[54]],63]],[56,56],0,0,[[[56,[54]],54],[[56,[54]]]],[[[56,[54]],54],[[56,[54]]]],0,[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[56,56],0,0,[[[56,[54]],54],[[56,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,65],[[],1],[[],1],[[],1],[[],1],[64,64],[66,66],[[]],[[]],[[64,64],3],[[66,66],3],[[64,52],5],[[64,64],5],[[66,66],5],[[64,6],14],[[66,6],14],[[]],[[]],[66,64],[64],[66],[52,20],[[64,52],20],[[]],[[]],[[],65],[66,60],[[60,20],64],[[]],[[]],[[]],[[]],[[64,64],[[1,[3]]]],[[66,66],[[1,[3]]]],[64,65],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[68,67],[69,67],[70,67],[71,67],[72,67],[73,67],[53,67],[74,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,75],[52,76],[52,77],[52,78],[52,68],[52,69],[52,70],[52,71],[52,53],[52,74],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[75,75],[76,76],[77,77],[78,78],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[53,53],[74,74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,75],3],[[76,76],3],[[77,77],3],[[78,78],3],[[68,68],3],[[69,69],3],[[70,70],3],[[71,71],3],[[72,72],3],[[73,73],3],[[53,53],3],[[74,74],3],[75,52],[76,52],[77,52],[78,52],[68,52],[69,52],[70,52],[71,52],[53,52],[74,52],[[],75],[[],76],[[],77],[[],78],[[],68],[[],69],[[],70],[[],71],[[],72],[[],73],[[],53],[[],74],[[75,75],5],[[76,76],5],[[77,77],5],[[78,78],5],[[68,68],5],[[69,69],5],[[70,70],5],[[71,71],5],[[72,72],5],[[73,73],5],[[53,53],5],[[74,74],5],[[75,6],[[4,[7]]]],[[76,6],[[4,[7]]]],[[77,6],[[4,[7]]]],[[78,6],[[4,[7]]]],[[68,6],[[4,[7]]]],[[69,6],[[4,[7]]]],[[70,6],[[4,[7]]]],[[71,6],[[4,[7]]]],[[72,6],[[4,[7]]]],[[73,6],[[4,[7]]]],[[53,6],[[4,[7]]]],[[74,6],[[4,[7]]]],[77,75],[69,75],[53,75],[68,75],[73,75],[23,75],[78,75],[70,75],[[]],[76,75],[74,75],[72,75],[71,75],[5,75],[68,76],[31,76],[70,76],[71,76],[72,76],[69,76],[74,76],[77,76],[[]],[53,76],[73,76],[75,76],[78,76],[68,77],[73,77],[53,77],[70,77],[[]],[72,77],[76,77],[69,77],[71,77],[75,77],[78,77],[74,77],[30,77],[75,78],[70,78],[53,78],[77,78],[74,78],[69,78],[72,78],[[]],[68,78],[76,78],[29,78],[73,78],[71,78],[70,68],[73,68],[78,68],[71,68],[75,68],[72,68],[74,68],[[]],[76,68],[69,68],[53,68],[77,68],[28,68],[71,69],[78,69],[[]],[70,69],[68,69],[73,69],[77,69],[75,69],[72,69],[53,69],[76,69],[28,69],[74,69],[74,70],[76,70],[[]],[75,70],[77,70],[28,70],[72,70],[73,70],[53,70],[69,70],[78,70],[68,70],[71,70],[73,71],[[]],[76,71],[74,71],[68,71],[28,71],[69,71],[70,71],[53,71],[75,71],[72,71],[78,71],[77,71],[76,72],[69,72],[[]],[71,72],[27,72],[78,72],[73,72],[75,72],[53,72],[68,72],[74,72],[70,72],[77,72],[71,73],[77,73],[[]],[53,73],[68,73],[72,73],[70,73],[78,73],[27,73],[74,73],[75,73],[76,73],[69,73],[77,53],[74,53],[78,53],[69,53],[27,53],[76,53],[73,53],[72,53],[[]],[68,53],[70,53],[71,53],[75,53],[71,74],[68,74],[76,74],[72,74],[27,74],[77,74],[78,74],[73,74],[69,74],[75,74],[70,74],[[]],[53,74],[[],67],[68,67],[69,67],[70,67],[71,67],[72,67],[73,67],[53,67],[74,67],[75],[76],[77],[78],[68],[69],[70],[71],[72],[73],[53],[74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[75,5],[75,5],[[],67],[76,67],[77,67],[78,67],[67,76],[67,77],[67,78],[[67,67,67],68],[[67,67,67],69],[[67,67,67],70],[[67,67,67],71],[[67,67,67],72],[[67,67,67],73],[[67,67,67],53],[[67,67,67],74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,75],[[1,[3]]]],[[76,76],[[1,[3]]]],[[77,77],[[1,[3]]]],[[78,78],[[1,[3]]]],[[68,68],[[1,[3]]]],[[69,69],[[1,[3]]]],[[70,70],[[1,[3]]]],[[71,71],[[1,[3]]]],[[72,72],[[1,[3]]]],[[73,73],[[1,[3]]]],[[53,53],[[1,[3]]]],[[74,74],[[1,[3]]]],[[],67],[68,67],[69,67],[70,67],[71,67],[72,67],[73,67],[53,67],[74,67],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[23,23],[31,31],[30,30],[29,29],[28,28],[27,27],[24,24],[26,26],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,23],3],[[31,31],3],[[30,30],3],[[29,29],3],[[28,28],3],[[27,27],3],[[24,24],3],[[26,26],3],[[25,25],3],[[],23],[[],31],[[],30],[[],29],[[],28],[[],27],[[],24],[[23,23],5],[[31,31],5],[[30,30],5],[[29,29],5],[[28,28],5],[[27,27],5],[[24,24],5],[[26,26],5],[[25,25],5],[[23,6],[[4,[7]]]],[[31,6],[[4,[7]]]],[[30,6],[[4,[7]]]],[[29,6],[[4,[7]]]],[[28,6],[[4,[7]]]],[[27,6],[[4,[7]]]],[[24,6],[[4,[7]]]],[[26,6],[[4,[7]]]],[[25,6],[[4,[7]]]],[75,23],[67,23],[[]],[[]],[67,31],[76,31],[[]],[67,30],[77,30],[78,29],[[]],[67,29],[70,28],[[]],[68,28],[69,28],[71,28],[79,28],[74,27],[72,27],[[]],[40,27],[53,27],[73,27],[40,24],[[]],[[]],[[]],[40],[40,23],[40,31],[40,30],[40,29],[40,28],[40,27],[40,24],[23],[31],[30],[29],[28],[27],[24],[26],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[31],[30],[29],[28],[27],[24],[67,23],[67,31],[67,30],[67,29],[79,28],[40,27],[40,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,23],[[1,[3]]]],[[31,31],[[1,[3]]]],[[30,30],[[1,[3]]]],[[29,29],[[1,[3]]]],[[28,28],[[1,[3]]]],[[27,27],[[1,[3]]]],[[24,24],[[1,[3]]]],[[26,26],[[1,[3]]]],[[25,25],[[1,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[31],[30],[29],[28],[27],[24],[[]],[23],[31],[30],[29],[28],[27],[24],[[]],[23],[31],[30],[29],[28],[27],[24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[81,[80]]],10],[82,83],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[83,83],[82,82],[84,84],[[[81,[21,21]]],[[81,[21,21]]]],[[]],[[]],[[]],[[]],[[83,83],3],[[82,82],3],[[84,84],3],[[[81,[22,22]],81],3],[17,5],[[],83],[[],82],[[],84],[[],[[81,[85,85]]]],[[[81,[86]]],4],[[],4],0,[[83,83],5],[[82,82],5],[[84,84],5],[[[81,[32,32]],81],5],[[[81,[87,[83,[54]]]]],87],[82,82],0,[[83,6],14],[[82,6],14],[[84,6],14],[[[81,[15,15]],6],14],[[]],[83,82],[[]],[[]],[[]],[83],[82],[84],[[[81,[33,33]]]],[[]],[[]],[[]],[[]],[[],81],[83,5],0,[[],83],[[],82],[[],81],[39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],[[1,[3]]]],[[82,82],[[1,[3]]]],[[84,84],[[1,[3]]]],[[[81,[34,34]],81],[[1,[3]]]],[[[81,[0]]]],[[]],0,0,0,[82,82],[82,82],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[82,84],82],0,[[[81,[87,[83,[54]]]]],87],[82,82],0,[[82,40],82],0,0,[[],10],[[]],[[]],[[]],[[]],0,0,[[[81,[88,21]],17],[[81,[88,21]]]],[[[81,[88,21]],17],[[81,[88,21]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],83],[40,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,10],[[]],[[]],[[]],[89,17],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[90,90],[[[91,[21]]],[[91,[21]]]],[89,89],[[]],[[]],[[]],0,[[],4],[[89,83],4],[[90,90],5],[[[91,[32]],91],5],[[89,89],5],[[90,6],14],[[[91,[15]],6],14],[[89,6],14],[[]],[[]],[[]],[[92,35,35],89],[[]],[[]],[[]],[[]],[[]],[[17,40,35,35],89],[90,1],[[[91,[54]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[89,89],[[1,[3]]]],[89],[[]],[[]],[[]],[[]],[[]],[[]],[[89,83],10],[89,92],[[]],[[]],[[]],0,[[89,17],89],[[89,17],89],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,40,35,35],89],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,10],[[]],[[]],[[]],[92,17],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[93,93],[[[94,[21]]],[[94,[21]]]],[92,92],[[]],[[]],[[]],[[92,92],3],[[92,17],5],[[],92],0,[[],4],[[92,83],4],[[93,93],5],[[[94,[32]],94],5],[[92,92],5],[[93,6],14],[[[94,[15]],6],14],[[92,6],14],[[]],[[]],[[]],[93],[[[94,[33]]]],[92],[[]],[[]],[[]],[[]],[[]],[[17,40],92],[93,1],[94,1],[[92,39],92],[[]],[[]],[[]],[[]],[[]],[[]],[[92,92],[[1,[3]]]],[92],[[]],[[]],[[]],[[]],[[]],[[]],[[92,83],10],[[]],[[]],[[]],0,[[92,17],92],[[92,17],92],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,40],92],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,10],[[]],[[]],[[]],[95,17],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[96,96],[[[97,[21]]],[[97,[21]]]],[95,95],[[]],[[]],[[]],[[95,95],3],[[95,17],5],[[],95],[[],4],[[95,83],4],[[96,96],5],[[[97,[32]],97],5],[[95,95],5],[[96,6],14],[[[97,[15]],6],14],[[95,6],14],[[]],[[]],[[]],[96],[[[97,[33]]]],[95],[[]],[[]],[[]],[[]],[[]],[[17,16],95],[96,1],[[[97,[54]]],1],[[95,39],95],[[]],[[]],[[]],[[]],[[]],[[]],[[95,95],[[1,[3]]]],[95],[[]],[[]],[[]],[[]],[[]],[[]],0,[[95,83],10],[[]],[[]],[[]],0,[[95,17],95],[[95,17],95],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,16],95],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,10],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[99,99],[[[100,[21]]],[[100,[21]]]],[98,98],[[]],[[]],[[]],[[99,99],3],[[98,98],3],[[],98],[98,17],[[],4],[[98,83],4],0,[[99,99],5],[[98,98],5],[[99,6],14],[[[100,[15]],6],14],[[98,6],14],[[]],[[]],[[]],[99],[98],[[]],[[]],[[]],[[]],[[]],[98,17],[[17,17],98],[99,1],[[[100,[54]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[99,99],[[1,[3]]]],[[98,98],[[1,[3]]]],[98],[[]],[[]],[[]],[[]],[[]],[[]],0,[[98,83],10],[[]],[[]],[[]],[[98,17],98],[[98,17],98],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,17],98],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,10],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[102,102],[[[103,[21]]],[[103,[21]]]],[101,101],[[]],[[]],[[]],[[102,102],3],[[101,101],3],[[],101],[[],4],[[101,83],4],[[102,102],5],[[101,101],5],[[102,6],14],[[[103,[15]],6],14],[[101,6],14],[[]],[[]],[[]],[102],[101],[[]],[[]],[[]],[[]],[[]],[[],101],[102,1],[[[103,[54]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[102,102],[[1,[3]]]],[[101,101],[[1,[3]]]],[101],[[]],[[]],[[]],[[]],[[]],[[]],[[101,83],10],[[]],[[]],[[]],[[101,17],101],0,[[101,17],101],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[10,36],17],[[10,37],39],[[10,38],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,[[1,[17]]]],[10,10],[[]],[[]],[[]],[10,17],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[104,104],[10,10],[[[105,[21]]],[[105,[21]]]],[[]],[[]],[[]],[[10,10],3],[10,[[106,[39]]]],[[10,17],5],[[10,17],5],[[],10],[[],4],[[10,83],4],[[],104],[[104,104],5],[[10,10],5],[[[105,[32]],105],5],[[104,6],[[4,[7]]]],[[10,6],[[4,[7]]]],[[[105,[15]],6],14],[[]],[[]],[[]],[104],[10],[[[105,[33]]]],[[10,10],10],[[]],[[]],[[]],[[]],[[]],[10,5],[[17,16],10],[104,1],[[[105,[54]]],1],[[10,39],10],[[10,39],10],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],[[1,[3]]]],[10],[[10,16,36],10],[[10,40,38],10],[[10,40,37],10],[10,[[106,[39]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[10,83],10],[[]],[[]],[[]],0,[[10,17],10],[[10,17],10],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,16],10],[[17,17],10],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],0,0,0,0,0,[[107,16],107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[107,16],107],[[107,16],107],0,[[107,16],107],0,[108,10],[107,109],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[109,109],[107,107],[110,110],[[[111,[21]]],[[111,[21]]]],[108,108],[[]],[[]],[[]],[[]],[[]],[[109,109],3],[[107,107],3],[[108,108],3],[108,108],[[108,17],5],0,[[],109],[[],107],[[],4],[[108,83],4],[[109,109],5],[[107,107],5],[[110,110],5],[[[111,[32]],111],5],[[108,108],5],[[109,6],14],[[107,6],14],[[110,6],14],[[[111,[15]],6],14],[[108,6],14],[[]],[109,107],[[]],[[]],[[]],[[]],[109],[107],[110],[[[111,[33]]]],[108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[107,16],107],[16,109],[[],107],[[10,109],108],[110,1],[[[111,[54]]],1],[[108,39],108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[109,109],[[1,[3]]]],[[107,107],[[1,[3]]]],[[108,108],[[1,[3]]]],[108],0,[[107,16],107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[108,83],10],[[]],[[]],[[]],[[]],[[]],[[107,16],107],[[107,16],107],0,[[107,16],107],0,[[108,17],108],[[108,17],108],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,16],108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,10],[[]],[[]],[[]],[112,17],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[113,113],[[[114,[21]]],[[114,[21]]]],[112,112],[[]],[[]],[[]],[[112,17],5],0,[[],4],[[112,83],4],[[113,113],5],[[[114,[32]],114],5],[[112,112],5],[[113,6],14],[[[114,[15]],6],14],[[112,6],14],[[]],[[]],[[]],[[92,35,35],112],[[]],[[]],[[]],[[]],[[]],[[17,40,35,35],112],[113,1],[[[114,[54]]],1],[[112,39],112],[[]],[[]],[[]],[[]],[[]],[[]],[[112,112],[[1,[3]]]],[112],[[]],[[]],[[]],[[]],[[]],[[]],[[112,83],10],[112,92],[[]],[[]],[[]],0,[[112,17],112],[[112,17],112],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[17,40,35,35],112],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,10],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[116,116],[[[117,[21]]],[[117,[21]]]],[115,115],[[]],[[]],[[]],[[115,115],3],[[115,17],5],[[],115],[[],4],[[115,83],4],[[116,116],5],[[[117,[32]],117],5],[[115,115],5],[[116,6],14],[[[117,[15]],6],14],[[115,6],14],[[]],[[]],[[]],[[],115],[116],[[[117,[33]]]],[115],[[]],[[]],[[]],[[]],[[]],[[17,17,17],115],[116,1],[[[117,[54]]],1],[[]],[[]],[[]],[[]],[[]],[[]],[[115,115],[[1,[3]]]],[115],[[]],[[]],[[]],[[]],[[]],[[]],[[115,83],10],[[]],[[]],[[]],[[115,17],115],[[115,17],115],[17,46],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[118,119],118],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[118,61],118],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[120]]],10],[118,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[121,[21]]],[[121,[21]]]],[122,122],[118,118],[61,61],[119,119],[[[63,[21]]],[[63,[21]]]],[123,123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[22]],121],3],[[122,122],3],[[61,61],3],[[119,119],3],[[[63,[22]],63],3],[[123,123],3],[[],122],[[],123],[[[121,[120]]],[[4,[17]]]],[[[121,[32]],121],5],[[122,122],5],[[118,118],5],[[61,61],5],[[119,119],5],[[[63,[32]],63],5],[[123,123],5],[[[121,[15]],6],14],[[122,6],14],[[118,6],14],[[61,6],14],[[119,6],14],[[[63,[15]],6],14],[[123,6],14],[[]],[[]],[[]],[122,118],[[]],[[]],[[]],[[]],[[[121,[33]]]],[122],[61],[119],[[[63,[33]]]],[123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[54]]],5],[[[63,[54]]],5],[[[63,[54]]],5],[[118,123],118],0,[[60,17],121],[[],118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[34]],121],[[1,[3]]]],[[122,122],[[1,[3]]]],[[118,118],[[1,[3]]]],[[61,61],[[1,[3]]]],[[119,119],[[1,[3]]]],[[[63,[34]],63],[[1,[3]]]],[[123,123],[[1,[3]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[123,40],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[121,[21]],17],[[121,[21]]]],[[[121,[21]],17],[[121,[21]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[60,17,119],121],[119,122],[[60,17,61],121],[61,122],[[60,17,122],121],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],0,[[]],[[],1],[[],1],[62,62],[[]],[[62,62],3],[[60,17,61],[[4,[17]]]],[[40,17,61],[[4,[17]]]],[[62,62],5],[[62,6],14],[[]],[62],[[]],[[],40],[[60,17,61],62],0,[[]],[[]],[[62,62],[[1,[3]]]],[[]],[[]],[1],[1],[63],[63],[1],[1],[63],[63],[[]],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,[17],[17]],"p":[[4,"Option"],[3,"Pixel"],[4,"Ordering"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"TypeId"],[3,"Clipped"],[3,"Rectangle"],[3,"ColorConverted"],[3,"Translated"],[3,"Cropped"],[6,"Result"],[8,"Debug"],[3,"Size"],[3,"Point"],[3,"Framebuffer"],[3,"ImageRaw"],[15,"usize"],[8,"Clone"],[8,"Ord"],[3,"RawU1"],[3,"RawU32"],[4,"BigEndian"],[4,"LittleEndian"],[3,"RawU24"],[3,"RawU16"],[3,"RawU8"],[3,"RawU4"],[3,"RawU2"],[8,"PartialEq"],[8,"Hash"],[8,"PartialOrd"],[3,"Angle"],[4,"AnchorPoint"],[4,"AnchorX"],[4,"AnchorY"],[15,"i32"],[15,"u32"],[15,"f32"],[3,"String"],[3,"Image"],[3,"SubImage"],[3,"IntoPixels"],[3,"Translated"],[3,"RawDataSlice"],[3,"BitsIterator"],[3,"ByteIterator"],[3,"BytesIterator"],[3,"MockDisplay"],[15,"char"],[3,"Rgb888"],[8,"PixelColor"],[8,"IntoIterator"],[3,"MonoTextStyleBuilder"],[3,"MonoTextStyle"],[3,"MonoFont"],[3,"DecorationDimensions"],[15,"str"],[4,"Baseline"],[3,"TextMetrics"],[4,"DecorationColor"],[3,"StrGlyphMapping"],[8,"Iterator"],[4,"Mapping"],[15,"u8"],[3,"Rgb555"],[3,"Bgr555"],[3,"Rgb565"],[3,"Bgr565"],[3,"Rgb666"],[3,"Bgr666"],[3,"Bgr888"],[4,"BinaryColor"],[3,"Gray2"],[3,"Gray4"],[3,"Gray8"],[15,"u16"],[8,"StyledDimensions"],[3,"Styled"],[3,"PrimitiveStyleBuilder"],[3,"PrimitiveStyle"],[4,"StrokeAlignment"],[8,"Default"],[8,"StyledDrawable"],[8,"OffsetOutline"],[8,"Transform"],[3,"Arc"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Circle"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Ellipse"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Line"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Polyline"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Range"],[3,"CornerRadiiBuilder"],[3,"RoundedRectangle"],[3,"CornerRadii"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Sector"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Triangle"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"TextStyleBuilder"],[4,"Alignment"],[8,"TextRenderer"],[3,"Text"],[3,"TextStyle"],[4,"LineHeight"],[8,"Drawable"],[8,"DrawTarget"],[8,"DrawTargetExt"],[8,"Dimensions"],[8,"AngleUnit"],[8,"OriginDimensions"],[8,"ImageDrawable"],[8,"GetPixel"],[8,"ImageDrawableExt"],[8,"PixelIteratorExt"],[8,"ContiguousIteratorExt"],[8,"ColorMapping"],[8,"GlyphMapping"],[8,"GrayColor"],[8,"RgbColor"],[8,"WebColors"],[8,"IntoStorage"],[8,"RawData"],[8,"ToBytes"],[8,"PointsIter"],[8,"ContainsPoint"],[8,"Primitive"],[8,"CharacterStyle"]]},\
"embedded_graphics_core":{"doc":"embedded-graphics-core contains the core components of …","t":[16,8,16,3,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,11,0,11,0,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,16,8,16,11,10,11,11,4,4,4,13,13,13,13,13,13,13,13,13,8,13,8,3,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,16,16,8,8,10,10,10,18,18,18,3,3,3,3,4,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,8,8,18,18,18,18,13,13,8,18,16,3,3,3,3,8,16,18,18,8,18,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,4,8,16,4,8,3,3,3,3,3,3,3,16,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,8,2,10,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Color","Drawable","Output","Pixel","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","default","draw","draw","draw_target","eq","fmt","from","geometry","hash","image","into","overflowing_as","overflowing_cast_from","partial_cmp","pixelcolor","prelude","primitives","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","Color","DrawTarget","Error","clear","draw_iter","fill_contiguous","fill_solid","AnchorPoint","AnchorX","AnchorY","Bottom","BottomCenter","BottomLeft","BottomRight","Center","Center","Center","CenterLeft","CenterRight","Dimensions","Left","OriginDimensions","Point","Right","Size","Top","TopCenter","TopLeft","TopRight","abs","add","add","add","add_assign","add_assign","add_assign","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","component_div","component_div","component_max","component_max","component_min","component_min","component_mul","component_mul","default","default","div","div","div_assign","div_assign","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_xy","hash","hash","hash","hash","hash","height","index","index","into","into","into","into","into","mul","mul","mul_assign","mul_assign","neg","new","new","new_equal","new_equal","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","saturating_add","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_sub","size","sub","sub","sub","sub_assign","sub_assign","sub_assign","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x_axis","x_axis","y","y","y_axis","y_axis","zero","zero","Color","Color","GetPixel","ImageDrawable","draw","draw_sub_image","pixel","BLACK","BLACK","BLUE","Bgr555","Bgr565","Bgr666","Bgr888","BinaryColor","CSS_ALICE_BLUE","CSS_ANTIQUE_WHITE","CSS_AQUA","CSS_AQUAMARINE","CSS_AZURE","CSS_BEIGE","CSS_BISQUE","CSS_BLACK","CSS_BLANCHED_ALMOND","CSS_BLUE","CSS_BLUE_VIOLET","CSS_BROWN","CSS_BURLY_WOOD","CSS_CADET_BLUE","CSS_CHARTREUSE","CSS_CHOCOLATE","CSS_CORAL","CSS_CORNFLOWER_BLUE","CSS_CORNSILK","CSS_CRIMSON","CSS_CYAN","CSS_DARK_BLUE","CSS_DARK_CYAN","CSS_DARK_GOLDENROD","CSS_DARK_GRAY","CSS_DARK_GREEN","CSS_DARK_KHAKI","CSS_DARK_MAGENTA","CSS_DARK_OLIVE_GREEN","CSS_DARK_ORANGE","CSS_DARK_ORCHID","CSS_DARK_RED","CSS_DARK_SALMON","CSS_DARK_SEA_GREEN","CSS_DARK_SLATE_BLUE","CSS_DARK_SLATE_GRAY","CSS_DARK_TURQUOISE","CSS_DARK_VIOLET","CSS_DEEP_PINK","CSS_DEEP_SKY_BLUE","CSS_DIM_GRAY","CSS_DODGER_BLUE","CSS_FIRE_BRICK","CSS_FLORAL_WHITE","CSS_FOREST_GREEN","CSS_FUCHSIA","CSS_GAINSBORO","CSS_GHOST_WHITE","CSS_GOLD","CSS_GOLDENROD","CSS_GRAY","CSS_GREEN","CSS_GREEN_YELLOW","CSS_HONEYDEW","CSS_HOT_PINK","CSS_INDIAN_RED","CSS_INDIGO","CSS_IVORY","CSS_KHAKI","CSS_LAVENDER","CSS_LAVENDER_BLUSH","CSS_LAWN_GREEN","CSS_LEMON_CHIFFON","CSS_LIGHT_BLUE","CSS_LIGHT_CORAL","CSS_LIGHT_CYAN","CSS_LIGHT_GOLDENROD_YELLOW","CSS_LIGHT_GRAY","CSS_LIGHT_GREEN","CSS_LIGHT_PINK","CSS_LIGHT_SALMON","CSS_LIGHT_SEA_GREEN","CSS_LIGHT_SKY_BLUE","CSS_LIGHT_SLATE_GRAY","CSS_LIGHT_STEEL_BLUE","CSS_LIGHT_YELLOW","CSS_LIME","CSS_LIME_GREEN","CSS_LINEN","CSS_MAGENTA","CSS_MAROON","CSS_MEDIUM_AQUAMARINE","CSS_MEDIUM_BLUE","CSS_MEDIUM_ORCHID","CSS_MEDIUM_PURPLE","CSS_MEDIUM_SEA_GREEN","CSS_MEDIUM_SLATE_BLUE","CSS_MEDIUM_SPRING_GREEN","CSS_MEDIUM_TURQUOISE","CSS_MEDIUM_VIOLET_RED","CSS_MIDNIGHT_BLUE","CSS_MINT_CREAM","CSS_MISTY_ROSE","CSS_MOCCASIN","CSS_NAVAJO_WHITE","CSS_NAVY","CSS_OLD_LACE","CSS_OLIVE","CSS_OLIVE_DRAB","CSS_ORANGE","CSS_ORANGE_RED","CSS_ORCHID","CSS_PALE_GOLDENROD","CSS_PALE_GREEN","CSS_PALE_TURQUOISE","CSS_PALE_VIOLET_RED","CSS_PAPAYA_WHIP","CSS_PEACH_PUFF","CSS_PERU","CSS_PINK","CSS_PLUM","CSS_POWDER_BLUE","CSS_PURPLE","CSS_REBECCAPURPLE","CSS_RED","CSS_ROSY_BROWN","CSS_ROYAL_BLUE","CSS_SADDLE_BROWN","CSS_SALMON","CSS_SANDY_BROWN","CSS_SEASHELL","CSS_SEA_GREEN","CSS_SIENNA","CSS_SILVER","CSS_SKY_BLUE","CSS_SLATE_BLUE","CSS_SLATE_GRAY","CSS_SNOW","CSS_SPRING_GREEN","CSS_STEEL_BLUE","CSS_TAN","CSS_TEAL","CSS_THISTLE","CSS_TOMATO","CSS_TURQUOISE","CSS_VIOLET","CSS_WHEAT","CSS_WHITE","CSS_WHITE_SMOKE","CSS_YELLOW","CSS_YELLOW_GREEN","CYAN","GREEN","Gray2","Gray4","Gray8","GrayColor","IntoStorage","MAGENTA","MAX_B","MAX_G","MAX_R","Off","On","PixelColor","RED","Raw","Rgb555","Rgb565","Rgb666","Rgb888","RgbColor","Storage","WHITE","WHITE","WebColors","YELLOW","az","az","az","az","az","az","az","az","az","az","az","az","b","b","b","b","b","b","b","b","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","g","g","g","g","g","g","g","g","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into_storage","invert","is_off","is_on","luma","luma","luma","luma","new","new","new","new","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","r","r","r","r","r","r","r","raw","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BITS_PER_PIXEL","BigEndian","ByteOrder","Bytes","LittleEndian","RawData","RawU1","RawU16","RawU2","RawU24","RawU32","RawU4","RawU8","Storage","ToBytes","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","from_u32","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_be_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_le_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Dimensions","DrawTarget","Drawable","GrayColor","ImageDrawable","IntoStorage","OriginDimensions","Pixel","PixelColor","Point","PointsIter","RawData","RgbColor","Size","WebColors","_","Iter","PointsIter","Rectangle","points","rectangle","Points","Rectangle","anchor_point","anchor_x","anchor_y","az","az","borrow","borrow","borrow_mut","borrow_mut","bottom_right","bounding_box","cast_from","cast_from","center","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","columns","contains","default","empty","eq","eq","fmt","fmt","from","from","hash","hash","intersection","into","into","into_iter","is_zero_sized","new","next","offset","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","points","resized","resized_height","resized_width","rows","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","size","to_owned","to_owned","top_left","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","with_center","with_corners","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","zero"],"q":["embedded_graphics_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::draw_target","","","","","","","embedded_graphics_core::geometryembedded_graphics_core::image","","","","","","","embedded_graphics_core::pixelcolorembedded_graphics_core::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::prelude","","","","","","","","","","","","","","","","embedded_graphics_core::primitives","","","","","embedded_graphics_core::primitives::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The pixel color type.","Marks an object as “drawable”. Must be implemented for …","The return type of the <code>draw</code> method.","A single pixel.","","","","","","","","","","","Draw the graphics object using the supplied DrawTarget.","","A target for embedded-graphics drawing operations.","","","Returns the argument unchanged.","Geometry module.","","Image drawable.","Calls <code>U::from(self)</code>.","","","","Pixel color types.","Prelude","Core primitives.","","","","","","","","","","","The pixel color type the targetted display supports.","A target for embedded-graphics drawing operations.","Error type to return when a drawing operation fails.","Fill the entire display with a solid color.","Draw individual pixels to the display without a defined …","Fill a given area with an iterator providing a contiguous …","Fill a given area with a solid color.","Anchor point.","X axis anchor point.","Y axis anchor point.","Bottom.","Bottom center.","Bottom left.","Bottom right.","Center.","Center.","Center.","Center left.","Center right.","Adds the ability to get the bounding box of an item.","Left.","Dimensions with <code>top_left</code> of the bounding box at <code>(0, 0)</code>.","2D point.","Right.","2D size.","Top.","Top center.","Top left.","Top right.","Remove the sign from a coordinate","Offsets a point by adding a size.","","","Offsets a point by adding a size.","","","","","","","","","","","","","","","","","","Returns the bounding box.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the componentwise division of two <code>Points</code>s.","Returns the componentwise division of two <code>Size</code>s.","Returns the componentwise maximum of two <code>Point</code>s","Returns the componentwise maximum of two <code>Size</code>s.","Returns the componentwise minimum of two <code>Point</code>s","Returns the componentwise minimum of two <code>Size</code>s.","Returns the componentwise multiplication of two <code>Point</code>s.","Returns the componentwise multiplication of two <code>Size</code>s.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an anchor point from an X and Y component.","","","","","","The height.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Creates a point from  X and Y coordinates.","Creates a size from a width and a height.","Creates a point with X and Y values set to an equal value.","Creates a size with width and height set to an equal value.","","","","","","","","","","","","","","","","Saturating addition.","","","","","","","","","","","Saturating subtraction.","Returns the size of the bounding box.","","Offsets a point by subtracting a size.","","Offsets a point by subtracting a size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The width.","","","","","","","","","","","Returns the X axis component.","The x coordinate.","Returns a point with equal <code>x</code> value and <code>y</code> set to <code>0</code>.","Returns a size with equal <code>width</code> value and <code>height</code> set to <code>0</code>.","Returns the Y axis component.","The y coordinate.","Returns a point with equal <code>y</code> value and <code>x</code> set to <code>0</code>.","Returns a size with equal <code>height</code> value and <code>width</code> set to <code>0</code>.","Creates a point with X and Y equal to zero.","Creates a size with width and height equal to zero.","The color type.","The color type.","Pixel getter.","Image drawable.","Draws the entire image to the target.","Draws a part of the image to the target.","Gets the color of a pixel.","Black color (0% luma).","Black color (R: 0%, G: 0%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Bgr555 color.","Bgr565 color.","Bgr666 color.","Bgr888 color.","Binary color."," Alice Blue"," Antique White"," Aqua"," Aquamarine"," Azure"," Beige"," Bisque"," Black"," Blanched Almond"," Blue"," Blue Violet"," Brown"," Burly Wood"," Cadet Blue"," Chartreuse"," Chocolate"," Coral"," Cornflower Blue"," Cornsilk"," Crimson"," Cyan"," Dark Blue"," Dark Cyan"," Dark Goldenrod"," Dark Gray"," Dark Green"," Dark Khaki"," Dark Magenta"," Dark Olive Green"," Dark Orange"," Dark Orchid"," Dark Red"," Dark Salmon"," Dark Sea Green"," Dark Slate Blue"," Dark Slate Gray"," Dark Turquoise"," Dark Violet"," Deep Pink"," Deep Sky Blue"," Dim Gray"," Dodger Blue"," Fire Brick"," Floral White"," Forest Green"," Fuchsia"," Gainsboro"," Ghost White"," Gold"," Goldenrod"," Gray"," Green"," Green Yellow"," Honeydew"," Hot Pink"," Indian Red"," Indigo"," Ivory"," Khaki"," Lavender"," Lavender Blush"," Lawn Green"," Lemon Chiffon"," Light Blue"," Light Coral"," Light Cyan"," Light Goldenrod Yellow"," Light Gray"," Light Green"," Light Pink"," Light Salmon"," Light Sea Green"," Light Sky Blue"," Light Slate Gray"," Light Steel Blue"," Light Yellow"," Lime"," Lime Green"," Linen"," Magenta"," Maroon"," Medium Aquamarine"," Medium Blue"," Medium Orchid"," Medium Purple"," Medium Sea Green"," Medium Slate Blue"," Medium Spring Green"," Medium Turquoise"," Medium Violet Red"," Midnight Blue"," Mint Cream"," Misty Rose"," Moccasin"," Navajo White"," Navy"," Old Lace"," Olive"," Olive Drab"," Orange"," Orange Red"," Orchid"," Pale Goldenrod"," Pale Green"," Pale Turquoise"," Pale Violet Red"," Papaya Whip"," Peach Puff"," Peru"," Pink"," Plum"," Powder Blue"," Purple"," Rebeccapurple"," Red"," Rosy Brown"," Royal Blue"," Saddle Brown"," Salmon"," Sandy Brown"," Seashell"," Sea Green"," Sienna"," Silver"," Sky Blue"," Slate Blue"," Slate Gray"," Snow"," Spring Green"," Steel Blue"," Tan"," Teal"," Thistle"," Tomato"," Turquoise"," Violet"," Wheat"," White"," White Smoke"," Yellow"," Yellow Green","Cyan color (R: 0%, G: 100%, B: 100%)","Green color (R: 0%, G: 100%, B: 0%)","2 bit grayscale color.","4 bit grayscale color.","8 bit grayscale color.","Grayscale color.","Convert a <code>PixelColor</code> into its underlying storage type","Magenta color (R: 100%, G: 0%, B: 100%)","The maximum value in the blue channel.","The maximum value in the green channel.","The maximum value in the red channel.","Inactive pixel.","Active pixel.","Pixel color trait.","Red color (R: 100%, G: 0%, B: 0%)","Raw data type.","Rgb555 color.","Rgb565 color.","Rgb666 color.","Rgb888 color.","RGB color.","The underlying storage type for the pixel color","White color (100% luma).","White color (R: 100%, G: 100%, B: 100%)","Named colors as defined in the CSS specification.","Yellow color (R: 100%, G: 100%, B: 0%)","","","","","","","","","","","","","Returns the blue channel value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the green channel value.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>PixelColor</code> into its raw storage form","Inverts the color.","Returns <code>true</code> if this color is <code>Off</code>.","Returns <code>true</code> if this color is <code>On</code>.","Returns the luma channel value.","","","","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new Rgb555 color. Too large channel values will …","Creates a new Bgr555 color. Too large channel values will …","Creates a new Rgb565 color. Too large channel values will …","Creates a new Bgr565 color. Too large channel values will …","Creates a new Rgb666 color. Too large channel values will …","Creates a new Bgr666 color. Too large channel values will …","Creates a new Rgb888 color. Too large channel values will …","Creates a new Bgr888 color. Too large channel values will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the red channel value.","","","","","","","","","Raw color types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bits per pixel.","Big endian byte order marker.","Raw data byte order.","Return type of methods in this trait.","Little endian byte order marker.","Trait implemented by all <code>RawUx</code> types.","1 bit per pixel raw data.","16 bits per pixel raw data.","2 bits per pixel raw data.","24 bits per pixel raw data.","32 bits per pixel raw data.","4 bits per pixel raw data.","8 bits per pixel raw data.","Storage type.","Trait to convert colors into a byte array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>u32</code> into a <code>RawData</code> type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this raw data into the storage type.","","","","","","","","Creates a new color from the least significant 1 bit of …","Creates a new color from the least significant 2 bits of …","Creates a new color from the least significant 4 bits of …","Creates a new color from the least significant 8 bits of …","Creates a new color from the least significant 16 bits of …","Creates a new color from the least significant 24 bits of …","Creates a new color from the least significant 32 bits of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a color into a byte array with big endian byte …","","","","","","","","Converts a color into a byte array with little endian byte …","","","","","","","","Converts a color into a byte array with native byte order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator over all points inside the primitive.","Create an iterator over all points in the primitive.","","Returns an iterator over all points inside the primitive.","The rectangle primitive.","Iterator over all points inside the rectangle.","Rectangle primitive","Returns an anchor point.","Returns the X coordinate of a given anchor edge of the …","Returns the Y coordinate of a given anchor edge of the …","","","","","","","Returns the bottom right corner of this rectangle.","","","","Returns the center of this rectangle.","","","","","","","","","","Returns the range of X coordinates in this rectangle.","Return whether the rectangle contains a given point.","","Create a points iterator that returns no items.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a new <code>Rectangle</code> containing the intersection of <code>self</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> is the rectangle is zero sized.","Creates a new rectangle from the top left point and the …","","Offset the rectangle by a given value.","","","","","","","Returns a resized copy of this rectangle.","Returns a new rectangle with the given height, resized …","Returns a new rectangle with the given width, resized …","Returns the range of Y coordinates in this rectangle.","","","","","Size of the rectangle.","","","Top left point of the rectangle.","","","","","","","","","","","Creates a new rectangle from the center point and the size.","Creates a new rectangle from two corners.","","","","","Returns a zero sized rectangle."],"i":[44,0,44,0,2,2,2,2,2,2,2,2,2,2,44,2,0,2,2,2,0,2,0,2,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,45,0,45,45,45,45,45,0,0,0,14,12,12,12,12,13,14,12,12,0,13,0,0,13,0,14,12,12,12,10,10,10,11,10,10,11,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,46,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,12,13,14,10,10,11,11,12,13,14,10,10,10,10,11,11,11,11,12,13,14,12,10,11,12,13,14,11,10,11,10,11,12,13,14,10,11,10,11,10,10,11,10,11,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,11,10,11,12,13,14,10,11,12,13,14,11,47,10,10,11,10,10,11,10,11,12,13,14,10,11,10,10,10,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,10,11,12,13,14,11,10,11,12,13,14,10,11,12,13,14,12,10,10,11,12,10,10,11,10,11,48,49,0,0,48,48,49,50,51,51,0,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,51,51,0,0,0,0,0,51,51,51,51,28,28,0,51,53,0,0,0,0,0,54,50,51,0,51,28,29,30,31,20,21,22,23,24,25,26,27,51,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,51,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,54,28,28,28,50,29,30,31,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,51,20,21,22,23,24,25,26,27,0,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,28,29,30,31,20,21,22,23,24,25,26,27,55,0,0,56,0,0,0,0,0,0,0,0,0,55,0,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,36,36,36,37,37,37,37,37,37,38,38,39,40,55,32,33,34,35,36,37,38,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,55,32,33,34,35,36,37,38,32,33,34,35,36,37,38,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,56,32,33,34,35,36,37,38,56,32,33,34,35,36,37,38,56,32,33,34,35,36,37,38,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,32,33,34,35,36,37,38,39,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,0,0,57,0,0,0,9,9,9,42,9,42,9,42,9,9,9,42,9,9,42,9,42,9,42,9,42,9,9,9,9,9,42,42,9,42,9,42,9,42,9,9,42,9,42,9,9,42,9,42,9,42,9,9,9,9,9,9,9,42,9,42,9,9,42,9,9,42,9,42,9,42,9,42,9,42,9,9,9,42,9,42,9,9],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[2,2],[[]],[[2,2],3],[[],2],[[],4],[2,4],0,[[2,2],5],[[2,6],7],[[]],0,[2],0,[[]],[[]],[[]],[[2,2],[[1,[3]]]],0,0,0,[[]],[[]],[[]],[[],4],[[],4],[[],8],[[]],[[]],[[]],[[]],0,0,0,[[],4],[[],4],[9,4],[9,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[[10,11],10],[[10,10],10],[[11,11],11],[[10,11]],[[10,10]],[[11,11]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[10,10],[11,11],[12,12],[13,13],[14,14],[[]],[[]],[[]],[[]],[[]],[[10,10],3],[[11,11],3],[[12,12],3],[[13,13],3],[[14,14],3],[[10,10],10],[[11,11],11],[[10,10],10],[[11,11],11],[[10,10],10],[[11,11],11],[[10,10],10],[[11,11],11],[[],10],[[],11],[[10,15],10],[[11,16],11],[[10,15]],[[11,16]],[[10,10],5],[[11,11],5],[[12,12],5],[[13,13],5],[[14,14],5],[[10,6],7],[[10,6],7],[[11,6],7],[[11,6],7],[[12,6],7],[[13,6],7],[[14,6],7],[[],10],[[]],[[],10],[[],10],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[13,14],12],[10],[11],[12],[13],[14],0,[[10,17],15],[[11,17],16],[[]],[[]],[[]],[[]],[[]],[[10,15],10],[[11,16],11],[[10,15]],[[11,16]],[10],[[15,15],10],[[16,16],11],[15,10],[16,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],[[1,[3]]]],[[11,11],[[1,[3]]]],[[12,12],[[1,[3]]]],[[13,13],[[1,[3]]]],[[14,14],[[1,[3]]]],[[11,11],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,11],11],[[],11],[[10,10],10],[[10,11],10],[[11,11],11],[[10,11]],[[10,10]],[[11,11]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],[[4,[10]]]],[[],[[4,[10]]]],[[],4],[[],[[4,[10]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],0,[10,10],[11,11],[12,14],0,[10,10],[11,11],[[],10],[[],11],0,0,0,0,[[],4],[9,4],[10,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[20,19],[21,19],[22,19],[23,19],[24,19],[25,19],[26,19],[27,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[28,28],[29,29],[30,30],[31,31],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,28],3],[[29,29],3],[[30,30],3],[[31,31],3],[[20,20],3],[[21,21],3],[[22,22],3],[[23,23],3],[[24,24],3],[[25,25],3],[[26,26],3],[[27,27],3],[[],28],[[],29],[[],30],[[],31],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[28,28],5],[[29,29],5],[[30,30],5],[[31,31],5],[[20,20],5],[[21,21],5],[[22,22],5],[[23,23],5],[[24,24],5],[[25,25],5],[[26,26],5],[[27,27],5],[[28,6],7],[[29,6],7],[[30,6],7],[[31,6],7],[[20,6],7],[[21,6],7],[[22,6],7],[[23,6],7],[[24,6],7],[[25,6],7],[[26,6],7],[[27,6],7],[24,28],[30,28],[27,28],[25,28],[26,28],[5,28],[32,28],[23,28],[[]],[22,28],[21,28],[20,28],[31,28],[29,28],[23,29],[31,29],[28,29],[33,29],[27,29],[[]],[30,29],[26,29],[20,29],[25,29],[21,29],[24,29],[22,29],[26,30],[22,30],[28,30],[21,30],[23,30],[20,30],[24,30],[31,30],[34,30],[25,30],[29,30],[[]],[27,30],[29,31],[22,31],[30,31],[24,31],[25,31],[26,31],[[]],[20,31],[23,31],[35,31],[28,31],[21,31],[27,31],[27,20],[[]],[29,20],[36,20],[25,20],[21,20],[24,20],[28,20],[22,20],[26,20],[31,20],[30,20],[23,20],[27,21],[23,21],[25,21],[30,21],[36,21],[29,21],[28,21],[[]],[20,21],[31,21],[22,21],[24,21],[26,21],[31,22],[21,22],[[]],[24,22],[30,22],[29,22],[36,22],[27,22],[23,22],[28,22],[20,22],[26,22],[25,22],[31,23],[25,23],[30,23],[24,23],[29,23],[20,23],[21,23],[26,23],[22,23],[27,23],[36,23],[[]],[28,23],[37,24],[25,24],[27,24],[22,24],[21,24],[26,24],[20,24],[[]],[31,24],[30,24],[29,24],[23,24],[28,24],[24,25],[37,25],[28,25],[[]],[23,25],[21,25],[22,25],[26,25],[20,25],[29,25],[30,25],[31,25],[27,25],[20,26],[24,26],[30,26],[29,26],[22,26],[31,26],[[]],[28,26],[27,26],[37,26],[25,26],[23,26],[21,26],[30,27],[29,27],[25,27],[37,27],[23,27],[20,27],[24,27],[28,27],[22,27],[21,27],[[]],[31,27],[26,27],[[],19],[20,19],[21,19],[22,19],[23,19],[24,19],[25,19],[26,19],[27,19],[28],[29],[30],[31],[20],[21],[22],[23],[24],[25],[26],[27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[28,5],[28,5],[[],19],[29,19],[30,19],[31,19],[19,29],[19,30],[19,31],[[19,19,19],20],[[19,19,19],21],[[19,19,19],22],[[19,19,19],23],[[19,19,19],24],[[19,19,19],25],[[19,19,19],26],[[19,19,19],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,28],[[1,[3]]]],[[29,29],[[1,[3]]]],[[30,30],[[1,[3]]]],[[31,31],[[1,[3]]]],[[20,20],[[1,[3]]]],[[21,21],[[1,[3]]]],[[22,22],[[1,[3]]]],[[23,23],[[1,[3]]]],[[24,24],[[1,[3]]]],[[25,25],[[1,[3]]]],[[26,26],[[1,[3]]]],[[27,27],[[1,[3]]]],[[],19],[20,19],[21,19],[22,19],[23,19],[24,19],[25,19],[26,19],[27,19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,32],3],[[33,33],3],[[34,34],3],[[35,35],3],[[36,36],3],[[37,37],3],[[38,38],3],[[39,39],3],[[40,40],3],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[32,32],5],[[33,33],5],[[34,34],5],[[35,35],5],[[36,36],5],[[37,37],5],[[38,38],5],[[39,39],5],[[40,40],5],[[32,6],7],[[33,6],7],[[34,6],7],[[35,6],7],[[36,6],7],[[37,6],7],[[38,6],7],[[39,6],7],[[40,6],7],[19,32],[[]],[28,32],[[]],[19,33],[29,33],[30,34],[[]],[19,34],[19,35],[31,35],[[]],[22,36],[41,36],[20,36],[21,36],[23,36],[[]],[24,37],[25,37],[[]],[26,37],[16,37],[27,37],[[]],[16,38],[[]],[[]],[16],[16,32],[16,33],[16,34],[16,35],[16,36],[16,37],[16,38],[32],[33],[34],[35],[36],[37],[38],[39],[40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32],[33],[34],[35],[36],[37],[38],[19,32],[19,33],[19,34],[19,35],[41,36],[16,37],[16,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,32],[[1,[3]]]],[[33,33],[[1,[3]]]],[[34,34],[[1,[3]]]],[[35,35],[[1,[3]]]],[[36,36],[[1,[3]]]],[[37,37],[[1,[3]]]],[[38,38],[[1,[3]]]],[[39,39],[[1,[3]]]],[[40,40],[[1,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32],[33],[34],[35],[36],[37],[38],[[]],[32],[33],[34],[35],[36],[37],[38],[[]],[32],[33],[34],[35],[36],[37],[38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,[[9,12],10],[[9,13],15],[[9,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[1,[10]]]],[9,9],[[]],[[]],[9,10],[[],1],[[],1],[[],1],[[],1],[42,42],[9,9],[[]],[[]],[[9,9],3],[9,[[43,[15]]]],[[9,10],5],[[],9],[[],42],[[42,42],5],[[9,9],5],[[42,6],7],[[9,6],7],[[]],[[]],[42],[9],[[9,9],9],[[]],[[]],[[]],[9,5],[[10,11],9],[42,1],[[9,15],9],[[]],[[]],[[]],[[]],[[9,9],[[1,[3]]]],[9],[[9,11,12],9],[[9,16,14],9],[[9,16,13],9],[9,[[43,[15]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],8],[[],8],[[]],[[]],[[]],[[]],[[10,11],9],[[10,10],9],[[]],[[]],[[]],[[]],[[],9]],"p":[[4,"Option"],[3,"Pixel"],[4,"Ordering"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[3,"Rectangle"],[3,"Point"],[3,"Size"],[4,"AnchorPoint"],[4,"AnchorX"],[4,"AnchorY"],[15,"i32"],[15,"u32"],[15,"usize"],[3,"String"],[15,"u8"],[3,"Rgb555"],[3,"Bgr555"],[3,"Rgb565"],[3,"Bgr565"],[3,"Rgb666"],[3,"Bgr666"],[3,"Rgb888"],[3,"Bgr888"],[4,"BinaryColor"],[3,"Gray2"],[3,"Gray4"],[3,"Gray8"],[3,"RawU1"],[3,"RawU2"],[3,"RawU4"],[3,"RawU8"],[3,"RawU16"],[3,"RawU24"],[3,"RawU32"],[4,"LittleEndian"],[4,"BigEndian"],[15,"u16"],[3,"Points"],[3,"Range"],[8,"Drawable"],[8,"DrawTarget"],[8,"Dimensions"],[8,"OriginDimensions"],[8,"ImageDrawable"],[8,"GetPixel"],[8,"GrayColor"],[8,"RgbColor"],[8,"WebColors"],[8,"PixelColor"],[8,"IntoStorage"],[8,"RawData"],[8,"ToBytes"],[8,"PointsIter"]]},\
"embedded_graphics_framebuf":{"doc":"Embedded Graphics FrameBuffer","t":[3,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,4,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FrameBuf","PixelIterator","az","az","backends","borrow","borrow","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clipped","color_converted","cropped","data","draw","draw_iter","from","from","get_color_at","height","into","into","into_iter","into_iter","new","next","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","read_buffer","reset","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set_color_at","size","translated","translated","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","width","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Color","DMACapableFrameBufferBackend","EndianCorrectedBuffer","EndianCorrection","FrameBufferBackend","ToBigEndian","ToLittleEndian","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","data_ptr","data_ptr","eq","from","from","get","get","into","into","new","nr_elements","nr_elements","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set","set","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["embedded_graphics_framebuf","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_framebuf::backends","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Constructs a frame buffer in memory. Lets you define the …","An iterator for all Pixels in the framebuffer.","","","Backends for a framebuffer.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a pixel’s color.","Get the framebuffers height.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an iterator over all Pixels in the frame buffer. …","","Create a new <code>FrameBuf</code> on top of an existing memory slice.","","","","","","","","","","","","Set a pixel’s color.","","","","","","","","","","","","","","Get the framebuffers width.","","","","","","Backends implementing this Trait can be used for DMA.","A backend for <code>FrameBuf</code> which changes the underlying byte …","Enum indicating how the bytes should be converted in the …","This trait marks the requirements for backends for a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a pixels color","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Nr of elements in the backend","","","","","","","","","","Sets a pixel to the respective color","","","","","","","","","","","","","","",""],"i":[0,0,5,12,0,5,12,5,12,5,5,12,5,12,5,12,5,5,5,5,5,12,5,5,12,5,5,5,12,5,12,5,12,5,12,5,12,5,5,5,12,5,12,5,5,5,12,5,12,5,12,5,12,5,12,5,12,5,5,12,5,12,4,0,0,0,0,21,21,20,21,20,21,20,21,20,21,20,21,20,21,14,20,21,20,21,4,20,20,21,20,4,20,20,21,20,21,20,21,20,21,4,20,20,21,20,21,20,21,20,21,20,21,20,21,20,21],"f":[0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[],1],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[[5,[3,4]]],6],[1,7],[[],8],[1,9],0,[[],6],[[[5,[3,4]]],6],[[]],[[]],[[[5,[3,4]],10],3],[[[5,[3,4]]],11],[[]],[[]],[5],[[]],[[4,11,11],[[5,[3,4]]]],[[[12,[3,4]]],[[2,[[13,[3]]]]]],[[]],[[]],[[]],[[]],[[[5,[3,14]]]],[[[5,[[0,[3,15]],4]]]],[[]],[[]],[[]],[[]],[[[5,[3,4]],10,3]],[[[5,[3,4]]],16],[10,17],[10,18],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[]],[[]],[[]],[[]],[[[5,[3,4]]],11],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[20],[[21,21],22],[[]],[[]],[11],[[20,11]],[[]],[[]],[21,[[20,[3]]]],[[],11],[20,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[[20,11]],[[],6],[[],6],[[],6],[[],6],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Rectangle"],[4,"Option"],[8,"PixelColor"],[8,"FrameBufferBackend"],[3,"FrameBuf"],[4,"Result"],[3,"Clipped"],[3,"ColorConverted"],[3,"Cropped"],[3,"Point"],[15,"usize"],[3,"PixelIterator"],[3,"Pixel"],[8,"DMACapableFrameBufferBackend"],[8,"Default"],[3,"Size"],[3,"Translated"],[3,"Translated"],[3,"TypeId"],[3,"EndianCorrectedBuffer"],[4,"EndianCorrection"],[15,"bool"]]},\
"embedded_graphics_simulator":{"doc":"It can display all sorts of embedded-graphics test code.","tn":["BinaryColorTheme","Default","Inverted","KeyDown","KeyUp","LcdBlue","LcdGreen","LcdWhite","MouseButtonDown","MouseButtonUp","MouseMove","MouseWheel","OledBlue","OledWhite","OutputImage","OutputSettings","OutputSettingsBuilder","Quit","SimulatorDisplay","SimulatorEvent","Window","as_image_buffer","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_box","bounding_box","build","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clipped","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_converted","cropped","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diff","draw_iter","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","events","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_pixel","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","load_png","max_fps","max_fps","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","pixel_spacing","pixel_spacing","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save_png","scale","scale","sdl2","show_static","size","size","theme","theme","to_base64_png","to_be_bytes","to_grayscale_output_image","to_le_bytes","to_ne_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb_output_image","translated","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update","update","with_default_color","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","direction","keycode","keycode","keymod","keymod","mouse_btn","mouse_btn","point","point","point","repeat","repeat","scroll_delta","A","AcBack","AcBookmarks","AcForward","AcHome","AcRefresh","AcSearch","AcStop","Again","AltErase","Ampersand","Application","Asterisk","At","AudioMute","AudioNext","AudioPlay","AudioPrev","AudioStop","B","Backquote","Backslash","Backspace","BrightnessDown","BrightnessUp","C","CAPSMOD","Calculator","Cancel","CapsLock","Caret","Clear","ClearAgain","Colon","Comma","Computer","Copy","CrSel","CurrencySubUnit","CurrencyUnit","Cut","D","DecimalSeparator","Delete","DisplaySwitch","Dollar","Down","E","Eject","End","Equals","Escape","ExSel","Exclaim","Execute","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Find","Flipped","G","Greater","H","Hash","Help","Home","I","Insert","J","K","KbdIllumDown","KbdIllumToggle","KbdIllumUp","Keycode","Kp0","Kp00","Kp000","Kp1","Kp2","Kp3","Kp4","Kp5","Kp6","Kp7","Kp8","Kp9","KpA","KpAmpersand","KpAt","KpB","KpBackspace","KpBinary","KpC","KpClear","KpClearEntry","KpColon","KpComma","KpD","KpDblAmpersand","KpDblVerticalBar","KpDecimal","KpDivide","KpE","KpEnter","KpEquals","KpEqualsAS400","KpExclam","KpF","KpGreater","KpHash","KpHexadecimal","KpLeftBrace","KpLeftParen","KpLess","KpMemAdd","KpMemClear","KpMemDivide","KpMemMultiply","KpMemRecall","KpMemStore","KpMemSubtract","KpMinus","KpMultiply","KpOctal","KpPercent","KpPeriod","KpPlus","KpPlusMinus","KpPower","KpRightBrace","KpRightParen","KpSpace","KpTab","KpVerticalBar","KpXor","L","LALTMOD","LAlt","LCTRLMOD","LCtrl","LGUIMOD","LGui","LSHIFTMOD","LShift","Left","Left","LeftBracket","LeftParen","Less","M","MODEMOD","Mail","MediaSelect","Menu","Middle","Minus","Mod","Mode","MouseButton","MouseWheelDirection","Mute","N","NOMOD","NUMMOD","Normal","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLockClear","O","Oper","Out","P","PageDown","PageUp","Paste","Pause","Percent","Period","Plus","Power","PrintScreen","Prior","Q","Question","Quote","Quotedbl","R","RALTMOD","RAlt","RCTRLMOD","RCtrl","RESERVEDMOD","RGUIMOD","RGui","RSHIFTMOD","RShift","Return","Return2","Right","Right","RightBracket","RightParen","S","ScrollLock","Select","Semicolon","Separator","Slash","Sleep","Space","Stop","Sysreq","T","Tab","ThousandsSeparator","U","Underscore","Undo","Unknown","Unknown","Up","V","VolumeDown","VolumeUp","W","Www","X","X1","X2","Y","Z","all","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","difference","drop","drop","drop","drop","empty","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_i32","from_iter","from_ll","from_ll","from_name","from_scancode","hash","hash","hash","hash","init","init","init","init","insert","intersection","intersects","into","into","into","into","is_all","is_empty","name","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_ll","to_owned","to_owned","to_owned","to_owned","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["embedded_graphics_simulatorembedded_graphics_simulator::SimulatorEvent","","","","","","","","","","","","","embedded_graphics_simulator::sdld":["Color theme for binary displays","A simple on/off, non-styled display with black background …","Inverted colors.","A keypress event, fired on keyDown","A keypress event, fired on keyUp","An on/off LCD-like display with light blue background and …","An on/off classic LCD-like display with green background …","An on/off classic LCD-like display with white background","A mouse click event, fired on mouseDown","A mouse click event, fired on mouseUp","Mouse move event","A mouse wheel event","An on/off OLED-like display with a dark blue background …","An on/off OLED-like display with a black background and …","Output image.","Output settings.","Output settings builder.","An exit event","Simulator display.","A derivation of <code>sdl2::event::Event</code> mapped to …","Simulator window","Returns the output image as an <code>image</code> crate <code>ImageBuffer</code>.","","","","","","","","","","","","","","","","","","","","","","","","Builds the output settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compares the content of this display with another display.","","","","","","","","","","","","","","Returns an iterator of all captured SimulatorEvents.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the color of the pixel at a point.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Loads a PNG file.","Sets the FPS limit of the window.","Maximum frames per second shown in the window.","Creates new output settings builder.","Creates a new simulator window.","Creates a new display.","","","","","","","","","","","","","","","","Sets the gap between pixels.","Spacing between pixels.","","","","","","","","","","","","","","","Saves the image content to a PNG file.","Sets the pixel scale.","Pixel scale.","Re-exported types from sdl2 crate.","Shows a static display.","","","Sets the binary color theme.","Binary color theme.","Returns the image as a base64 encoded PNG.","Converts the display content to big endian raw data.","Converts the display contents into a grayscale output …","Converts the display content to little endian raw data.","Converts the display content to native endian raw data.","","","","","","Converts the display contents into a RGB output image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the window.","Updates the image from a <code>SimulatorDisplay</code>.","Creates a new display filled with a color.","","","","","","","","","","","","","","","The directionality of the scroll (normal or flipped)","The key being released","The key being pressed","Any modifier being held at the time of keyup","Any modifier being held at the time of keydown","The mouse button being released","The mouse button being pressed","The location of the mouse in Simulator coordinates","The location of the mouse in Simulator coordinates","The current mouse position","Whether the key is repeating","Whether the key is repeating","The scroll wheel delta in the x and y directioneturns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Gets the virtual key from a scancode. Returns None if …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","",""],"i":[0,10,10,11,11,10,10,10,11,11,11,11,10,10,0,0,0,11,0,0,0,1,4,22,9,1,5,10,11,4,22,9,1,5,10,11,4,22,9,1,5,10,11,9,1,4,4,22,9,1,5,10,11,4,22,9,1,5,10,11,4,22,9,1,5,10,11,9,9,1,5,10,11,9,1,5,10,11,9,9,9,5,4,22,9,1,5,10,11,4,22,9,1,5,10,11,9,9,4,22,9,1,5,10,11,9,1,5,10,11,22,9,1,5,10,11,4,22,9,1,5,10,11,9,9,4,22,9,1,5,10,11,4,22,9,1,5,10,11,9,4,5,4,22,9,4,22,9,1,5,10,11,4,22,9,1,5,10,11,9,4,5,4,22,9,1,5,10,11,4,22,9,1,5,10,11,1,4,5,0,22,9,1,4,5,1,9,9,9,9,9,1,5,10,11,9,9,4,22,9,1,5,10,11,4,22,9,1,5,10,11,4,22,9,1,5,10,11,4,22,9,1,5,10,11,4,22,9,1,5,10,11,22,1,9,4,22,9,1,5,10,11,4,22,9,1,5,10,11,51,52,53,52,53,54,55,54,55,56,52,53,51,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,43,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,43,45,43,45,43,45,43,45,45,47,45,45,45,45,43,45,45,45,47,45,0,45,0,0,45,45,43,43,46,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,43,45,43,45,43,43,45,43,45,45,45,45,47,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,47,45,45,45,45,45,45,45,47,47,45,45,43,45,43,46,47,43,43,43,43,43,43,43,45,43,46,47,45,43,46,47,45,43,46,47,45,43,46,47,45,43,46,47,45,43,46,47,45,43,46,47,43,43,43,45,43,46,47,45,43,46,47,43,45,43,46,47,43,45,43,46,47,43,45,45,43,43,43,43,43,43,46,47,45,43,46,47,43,43,43,45,43,46,47,45,45,45,43,46,47,45,43,46,47,43,43,43,45,43,46,47,43,43,45,43,45,43,46,47,45,43,46,47,43,43,45,43,46,47,45,43,46,47,43,43,43,43,46,45,43,46,47,45,43,43,45,43,46,47,45,43,46,47,45,43,46,47,43,45,43,46,47,45,43,46,47,45,43,46,47,45,43,46,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[0]]],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[4,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[3,7],[[[9,[8]]],[[9,[8]]]],[[[1,[8]]],[[1,[8]]]],[5,5],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[[9,[12]],9],13],[[],14],[3,15],[[],5],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[[[9,[17]],9],[[6,[[9,[18]]]]]],[[[9,[17]]],19],[16],[16],[16],[16],[16],[16],[16],[[[9,[20]],9],21],[[[1,[20]],1],21],[[5,5],21],[[10,10],21],[[11,11],21],[22,23],[[[9,[24]],25],26],[[[1,[24]],25],26],[[5,25],26],[[10,25],26],[[11,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[17]],27],17],[[[9,[28]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[31,[9]]]],[[4,32],4],0,[[],4],[[33,5],22],[34,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[9,[35]],9],[[6,[13]]]],[[4,32],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[1,[0]],[30,[29]]],31],[[4,32],4],0,0,[[22,9]],[9,34],[1,34],[[4,10],4],0,[[[1,[0]]],[[31,[36]]]],[9,[[38,[37]]]],[[9,5],[[1,[39]]]],[9,[[38,[37]]]],[9,[[38,[37]]]],[[]],[[]],[[]],[[]],[[]],[[9,5],[[1,[40]]]],[27,41],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,9]],[[1,9]],[[34,17],[[9,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],43],[[]],[[]],[[]],[[]],[[43,43],43],[[43,43]],[[43,43],43],[[43,43]],[43,44],[[43,43],43],[[43,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[45,45],[43,43],[46,46],[47,47],[[]],[[]],[[]],[[]],[[43,43],13],[43,43],[[43,43],21],[16],[16],[16],[16],[16],[16],[16],[16],[[43,43],43],[16],[16],[16],[16],[[],43],[[45,45],21],[[43,43],21],[[46,46],21],[[47,47],21],[43],[[45,25],[[19,[48]]]],[[45,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[43,25],[[19,[48]]]],[[46,25],[[19,[48]]]],[[47,25],[[19,[48]]]],[[]],[[]],[[]],[[]],[44,[[6,[43]]]],[44,43],[44,43],[49,[[6,[45]]]],[[],43],[32,46],[37,47],[33,[[6,[45]]]],[50,[[6,[45]]]],[45],[43],[46],[47],[[],16],[[],16],[[],16],[[],16],[[43,43]],[[43,43],43],[[43,43],21],[[]],[[]],[[]],[[]],[43,21],[43,21],[45,36],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,43],[[6,[13]]]],[[43,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,43,21]],[[43,43],43],[[43,43]],[[43,43],43],[46,32],[[]],[[]],[[]],[[]],[[],36],[[],36],[[43,43]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],42],[[],42],[[],42],[[],42],[[43,43],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"OutputImage"],[3,"ImageBuffer"],[3,"Rectangle"],[3,"OutputSettingsBuilder"],[3,"OutputSettings"],[4,"Option"],[3,"Clipped"],[8,"Clone"],[3,"SimulatorDisplay"],[4,"BinaryColorTheme"],[4,"SimulatorEvent"],[8,"Ord"],[4,"Ordering"],[3,"ColorConverted"],[3,"Cropped"],[15,"usize"],[8,"PixelColor"],[4,"BinaryColor"],[4,"Result"],[8,"PartialEq"],[15,"bool"],[3,"Window"],[8,"Iterator"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Point"],[8,"Hash"],[3,"Path"],[8,"AsRef"],[6,"ImageResult"],[15,"u32"],[15,"str"],[3,"Size"],[8,"PartialOrd"],[3,"String"],[15,"u8"],[3,"Vec"],[3,"Gray8"],[3,"Rgb888"],[3,"Translated"],[3,"TypeId"],[3,"Mod"],[15,"u16"],[4,"Keycode"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"Error"],[15,"i32"],[4,"Scancode"],[13,"MouseWheel"],[13,"KeyUp"],[13,"KeyDown"],[13,"MouseButtonUp"],[13,"MouseButtonDown"],[13,"MouseMove"]],"a":{"sdl_getkeyfromname":[606],"sdl_getkeyfromscancode":[607],"sdl_getkeyname":[625]}},\
"embedded_hal":{"doc":"A Hardware Abstraction Layer (HAL) for embedded systems","t":[16,8,0,0,0,0,10,10,0,10,10,0,0,10,0,0,0,0,0,0,0,0,0,8,16,16,10,10,8,8,10,10,8,16,16,16,16,16,16,16,4,8,13,6,6,8,8,8,13,8,8,8,11,11,11,10,10,11,11,11,10,11,11,11,10,10,10,10,16,8,10,10,0,8,16,16,16,4,8,8,13,8,13,11,11,11,10,11,11,11,0,10,11,11,11,0,10,8,8,13,13,13,8,4,13,3,13,8,4,18,18,13,13,13,3,13,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,11,10,11,0,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,16,10,10,0,0,0,0,8,10,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,16,13,13,8,4,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,16,8,8,10,10,10,11,13,13,16,8,13,13,17,17,17,17,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,8,8,16,8,16,10,10,10],"n":["Duty","PwmPin","adc","blocking","can","digital","disable","enable","fmt","get_duty","get_max_duty","prelude","serial","set_duty","spi","timer","watchdog","can","delay","i2c","rng","serial","spi","Can","Error","Frame","receive","transmit","DelayMs","DelayUs","delay_ms","delay_us","AddressMode","Error","Error","Error","Error","Error","Error","Error","Operation","Read","Read","SevenBitAddress","TenBitAddress","Transactional","TransactionalIter","Write","Write","WriteIter","WriteIterRead","WriteRead","borrow","borrow_mut","eq","exec","exec_iter","fmt","from","into","read","try_from","try_into","type_id","write","write","write_iter_read","write_read","Error","Write","bflush","bwrite_all","write","Default","Error","Error","Error","Operation","Transactional","Transfer","Transfer","Write","Write","borrow","borrow_mut","eq","exec","fmt","from","into","transfer","transfer","try_from","try_into","type_id","write","write","Default","Default","Acknowledge","Bit","Crc","Error","ErrorKind","Extended","ExtendedId","Form","Frame","Id","MAX","MAX","Other","Overrun","Standard","StandardId","Stuff","ZERO","ZERO","as_raw","as_raw","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","data","dlc","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","into","into","into","into","is_data_frame","is_extended","is_remote_frame","is_standard","kind","kind","nb","new","new","new","new_remote","new_unchecked","new_unchecked","partial_cmp","standard_id","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Can","Error","Frame","receive","transmit","v1","v1_compat","v2","v2_compat","OutputPin","set_high","set_low","OldOutputPin","borrow","borrow_mut","from","from","into","new","set_high","set_high","set_low","set_low","try_from","try_into","type_id","Error","High","Low","OutputPin","PinState","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from","into","not","set_high","set_low","set_state","to_owned","try_from","try_into","type_id","_embedded_hal_PwmPin","_embedded_hal_blocking_delay_DelayMs","_embedded_hal_blocking_delay_DelayUs","_embedded_hal_blocking_i2c_Read","_embedded_hal_blocking_i2c_Write","_embedded_hal_blocking_i2c_WriteRead","_embedded_hal_blocking_serial_Write","_embedded_hal_blocking_spi_Transfer","_embedded_hal_blocking_spi_Write","_embedded_hal_digital_OutputPin","_embedded_hal_serial_Read","_embedded_hal_serial_Write","_embedded_hal_spi_FullDuplex","_embedded_hal_timer_CountDown","Error","Error","Read","Write","flush","read","write","write_str","CaptureOnFirstTransition","CaptureOnSecondTransition","Error","FullDuplex","IdleHigh","IdleLow","MODE_0","MODE_1","MODE_2","MODE_3","Mode","Phase","Polarity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","from","from","from","into","into","into","phase","polarity","read","send","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Cancel","CountDown","Error","Periodic","Time","cancel","start","wait"],"q":["embedded_hal","","","","","","","","","","","","","","","","","embedded_hal::blocking","","","","","","embedded_hal::blocking::can","","","","","embedded_hal::blocking::delay","","","","embedded_hal::blocking::i2c","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::blocking::serial","","","","","embedded_hal::blocking::serial::write","embedded_hal::blocking::spi","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::blocking::spi::transfer","embedded_hal::blocking::spi::write","embedded_hal::can","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::can::nb","","","","","embedded_hal::digital","","","","embedded_hal::digital::v1","","","embedded_hal::digital::v1_compat","","","","","","","","","","","","","","embedded_hal::digital::v2","","","","","","","","","","","","","","","","","","","","","","embedded_hal::prelude","","","","","","","","","","","","","","embedded_hal::serial","","","","","","","","embedded_hal::spi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_hal::timer","","","","","","",""],"d":["Type for the <code>duty</code> methods","A single PWM channel / pin","Analog-digital conversion traits","Blocking API","Controller Area Network","Digital I/O","Disables a PWM <code>channel</code>","Enables a PWM <code>channel</code>","Implementation of <code>core::fmt::Write</code> for the HAL’s …","Returns the current duty cycle","Returns the maximum duty cycle value","The prelude is a collection of all the traits in this crate","Serial interface","Sets a new duty cycle","Serial Peripheral Interface","Timers","Traits for interactions with a processors watchdog timer.","Blocking CAN API","Delays","Blocking I2C API","Blocking hardware random number generator","Blocking serial API","Blocking SPI API","A blocking CAN interface that is able to transmit and …","Associated error type.","Associated frame type.","Blocks until a frame was received or an error occured.","Puts a frame in the transmit buffer. Blocks until space is …","Millisecond delay","Microsecond delay","Pauses execution for <code>ms</code> milliseconds","Pauses execution for <code>us</code> microseconds","Address mode (7-bit / 10-bit)","Error type","Error type","Error type","Error type","Error type","Error type","Error type","Transactional I2C operation.","Blocking read","Read data into the provided buffer","7-bit address mode type","10-bit address mode type","Transactional I2C interface.","Transactional I2C interface (iterator version).","Blocking write","Write data from the provided buffer","Blocking write (iterator version)","Blocking write (iterator version) + read","Blocking write + read","","","","Execute the provided operations on the I2C bus.","Execute the provided operations on the I2C bus (iterator …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>","","","","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code>","Writes bytes to slave with address <code>address</code> and then reads …","Writes bytes to slave with address <code>address</code> and then reads …","The type of error that can occur when writing","Write half of a serial interface (blocking variant)","Block until the serial interface has sent all buffered …","Writes a slice, blocking until everything has been written","Blocking serial write","Marker trait to opt into default blocking write …","Error type","Error type","Associated error type","Operation for transactional SPI trait","Transactional trait allows multiple actions to be executed …","Blocking transfer","Write data out while reading data into the provided buffer","Blocking write","Write data from the provided buffer, discarding read data","","","","Execute the provided transactions","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Blocking transfer","Sends <code>words</code> to the slave. Returns the <code>words</code> received from …","","","","Blocking write","Sends <code>words</code> to the slave, ignoring all the incoming words","Default implementation of <code>blocking::spi::Transfer&lt;W&gt;</code> for …","Default implementation of <code>blocking::spi::Write&lt;W&gt;</code> for …","An ACK  error shall be detected by a transmitter whenever …","A bit error is detected at that bit time when the bit …","Calculated CRC sequence does not equal the received one.","CAN error","CAN error kind","Extended 29-bit Identifier (<code>0..=0x1FFF_FFFF</code>).","Extended 29-bit CAN Identifier (<code>0..=1FFF_FFFF</code>).","A form error shall be detected when a fixed-form bit field …","A CAN2.0 Frame","A CAN Identifier (standard or extended).","CAN ID <code>0x7FF</code>, the lowest priority.","CAN ID <code>0x1FFFFFFF</code>, the lowest priority.","A different error occurred. The original error may contain …","The peripheral receive buffer was overrun.","Standard 11-bit Identifier (<code>0..=0x7FF</code>).","Standard 11-bit CAN Identifier (<code>0..=0x7FF</code>).","A stuff error is detected at the bit time of the sixth …","CAN ID <code>0</code>, the highest priority.","CAN ID <code>0</code>, the highest priority.","Returns this CAN Identifier as a raw 16-bit integer.","Returns this CAN Identifier as a raw 32-bit integer.","","","","","","","","","","","","","","","","","","Returns the frame data (0..8 bytes in length).","Returns the data length code (DLC) which is in the range …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the frame identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if this frame is a data frame.","Returns true if this frame is a extended frame.","Returns true if this frame is a remote frame.","Returns true if this frame is a standard frame.","Convert error to a generic CAN error kind","","Non-blocking CAN API","Creates a new frame.","Tries to create a <code>StandardId</code> from a raw 16-bit integer.","Tries to create a <code>ExtendedId</code> from a raw 32-bit integer.","Creates a new remote frame (RTR bit set).","Creates a new <code>StandardId</code> without checking if it is inside …","Creates a new <code>ExtendedId</code> without checking if it is inside …","","Returns the Base ID part of this extended identifier.","","","","","","","","","","","","","","","","","","A CAN interface that is able to transmit and receive …","Associated error type.","Associated frame type.","Returns a received frame if available.","Puts a frame in the transmit buffer to be sent on the bus.","Digital I/O","v1 compatibility wrappers","Digital I/O","v2 compatibility shims","Single digital push-pull output pin","Drives the pin high","Drives the pin low","Wrapper to allow fallible <code>v2::OutputPin</code> traits to be …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new OldOutputPin wrapper around a <code>v2::OutputPin</code>","","","","","","","","Error type","High pin state","Low pin state","Single digital push-pull output pin","Digital output pin state","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Drives the pin high","Drives the pin low","Drives the pin high or low depending on the provided value","","","","","","","","","","","","","","","","","","","Read error","Write error","Read half of a serial interface","Write half of a serial interface","Ensures that none of the previously written words are …","Reads a single word from the serial interface","Writes a single word to the serial interface","","Data in “captured” on the first clock transition","Data in “captured” on the second clock transition","An enumeration of SPI errors","Full duplex (master mode)","Clock signal high when idle","Clock signal low when idle","Helper for CPOL = 0, CPHA = 0","Helper for CPOL = 0, CPHA = 1","Helper for CPOL = 1, CPHA = 0","Helper for CPOL = 1, CPHA = 1","SPI mode","Clock phase","Clock polarity","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clock phase","Clock polarity","Reads the word stored in the shift register","Sends a word to the slave","","","","","","","","","","","","","Trait for cancelable countdowns.","A count down timer","Error returned when a countdown can’t be canceled.","Marker trait that indicates that a timer is periodic","The unit of time used by this timer","Tries to cancel this countdown.","Starts a new count down","Non-blockingly “waits” until the count down finishes"],"i":[30,0,0,0,0,0,30,30,0,30,30,0,0,30,0,0,0,0,0,0,0,0,0,0,31,31,31,31,0,0,32,33,0,34,35,36,37,38,39,40,0,0,2,0,0,0,0,0,2,0,0,0,2,2,2,39,40,2,2,2,34,2,2,2,35,36,38,37,41,0,41,41,0,0,42,43,44,0,0,0,8,0,8,8,8,8,44,8,8,8,0,42,8,8,8,0,43,0,0,15,15,15,0,0,14,0,15,0,0,10,12,15,15,14,0,15,10,12,10,12,10,12,14,15,10,12,14,15,10,12,14,15,10,12,14,15,15,45,45,10,12,14,15,10,12,14,15,15,10,12,14,14,14,15,15,45,10,12,14,15,45,45,45,45,46,15,0,45,10,12,45,10,12,15,12,10,12,14,15,15,10,12,14,15,10,12,14,15,10,12,14,15,0,47,47,47,47,0,0,0,0,0,48,48,0,22,22,22,22,22,22,22,22,22,22,22,22,22,49,23,23,0,0,23,23,23,23,23,23,23,23,23,23,49,49,49,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,24,0,0,24,50,24,24,27,27,51,0,26,26,0,0,0,0,0,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,28,28,51,51,26,27,28,26,27,28,26,27,28,26,27,28,0,0,52,0,53,52,53,53],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[2,2],3],[[],1],[[],1],[[2,4],5],[[]],[[]],[[],1],[[],1],[[],1],[[],6],[[],1],[[],1],[[],1],[[],1],0,0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[8,[7]],8],3],[[],1],[[[8,[9]],4],5],[[]],[[]],0,[[],1],[[],1],[[],1],[[],6],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,11],[12,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[12,12],[14,14],[15,15],[[]],[[]],[[]],[[]],[[15,15],16],[[]],[[],17],[[10,10],3],[[12,12],3],[[14,14],3],[[15,15],3],[[10,4],5],[[12,4],5],[[14,4],5],[[15,4],5],[[15,4],5],[[]],[[]],[12,14],[10,14],[[]],[[]],[15],[[],14],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],15],[15,15],0,[[[18,[14]]],19],[11,[[19,[10]]]],[13,[[19,[12]]]],[[[18,[14]],17],19],[11,10],[13,12],[[15,15],[[19,[16]]]],[12,10],[[]],[[]],[[]],[[]],[[],20],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],6],[[],6],[[],6],[[],6],0,0,0,[[],21],[[],[[21,[19]]]],0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[],22],[[]],[[],22],[[],1],[22],[22],[[],1],[[],1],[[],1],[[],6],0,0,0,0,0,[[]],[[]],[23,23],[[]],[[23,23],3],[[23,4],5],[[]],[3,23],[[]],[23],[[],1],[[],1],[23,1],[[]],[[],1],[[],1],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[24,25],5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[26,26],[27,27],[28,28],[[]],[[]],[[]],[[26,26],3],[[27,27],3],[[28,28],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],21],[[],21],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],6],[[],6],[[],6],0,0,0,0,0,[[],1],[[]],[[],[[21,[29]]]]],"p":[[4,"Result"],[4,"Operation"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[8,"PartialEq"],[4,"Operation"],[8,"Debug"],[3,"StandardId"],[15,"u16"],[3,"ExtendedId"],[15,"u32"],[4,"Id"],[4,"ErrorKind"],[4,"Ordering"],[15,"usize"],[8,"Into"],[4,"Option"],[3,"String"],[6,"Result"],[3,"OldOutputPin"],[4,"PinState"],[8,"Write"],[15,"str"],[4,"Polarity"],[4,"Phase"],[3,"Mode"],[4,"Void"],[8,"PwmPin"],[8,"Can"],[8,"DelayMs"],[8,"DelayUs"],[8,"Read"],[8,"Write"],[8,"WriteIter"],[8,"WriteRead"],[8,"WriteIterRead"],[8,"Transactional"],[8,"TransactionalIter"],[8,"Write"],[8,"Transfer"],[8,"Write"],[8,"Transactional"],[8,"Frame"],[8,"Error"],[8,"Can"],[8,"OutputPin"],[8,"OutputPin"],[8,"Read"],[8,"FullDuplex"],[8,"Cancel"],[8,"CountDown"]]},\
"embedded_time":{"doc":"<code>embedded-time</code> provides a comprehensive library of <code>Duration</code> …","tn":["Clock","Clock","ConversionError","ConversionFailure","ConversionFailure","DivByZero","DivByZero","Instant","NegDuration","NegDuration","Overflow","Overflow","TimeError","TimeInt","Timer","Unspecified","Unspecified","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_div_fraction","checked_div_fraction","checked_duration_since","checked_duration_until","checked_mul_fraction","checked_mul_fraction","checked_sub","clock","clone","clone_into","cmp","default","default","duration","duration_since_epoch","eq","eq","eq","fixed_point","fmt","fmt","fmt","fraction","from","from","from","from","from","hash","hash","hash","into","into","into","new","partial_cmp","rate","sub","sub","timer","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Clock","Error","NotRunning","SCALING_FACTOR","T","Unspecified","borrow","borrow_mut","default","eq","fmt","from","hash","into","new_timer","try_from","try_into","try_now","type_id","Duration","Extensions","Fraction","Generic","Hours","Microseconds","Milliseconds","Minutes","Nanoseconds","Seconds","add","add","add","add","add","add","add","add","add","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","div","div","div","div","div","div","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hours","hours","integer","integer","integer","integer","integer","integer","integer","into","into","into","into","into","into","into","microseconds","microseconds","milliseconds","milliseconds","minutes","minutes","mul","mul","mul","mul","mul","mul","nanoseconds","nanoseconds","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rem","rem","rem","rem","rem","rem","scaling_factor","seconds","seconds","sub","sub","sub","sub","sub","sub","to_generic","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rate","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FixedPoint","SCALING_FACTOR","T","checked_div","checked_mul","integer","max_value","min_value","Fraction","borrow","borrow_mut","checked_div","checked_mul","clone","clone_into","cmp","default","denominator","div","eq","fmt","from","from_integer","hash","into","mul","new","new_reduce","numerator","partial_cmp","recip","to_integer","to_owned","try_from","try_into","type_id","Baud","Bd","Bd","BitsPerSecond","Bps","Bps","BytesPerSecond","Centihertz","Decihertz","Extensions","Fraction","Generic","Hertz","Hz","Hz","KiBd","KiBd","KiBps","KiBps","KiHz","KiHz","Kibibaud","KibibitsPerSecond","KibibytesPerSecond","Kibihertz","Kibps","Kibps","Kilobaud","KilobitsPerSecond","KilobytesPerSecond","Kilohertz","MBd","MBd","MBps","MBps","MHz","MHz","Mbps","Mbps","Mebibaud","MebibitsPerSecond","MebibytesPerSecond","Mebihertz","Megabaud","MegabitsPerSecond","MegabytesPerSecond","Megahertz","MiBd","MiBd","MiBps","MiBps","MiHz","MiHz","Mibps","Mibps","Microhertz","Millihertz","Rate","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bps","bps","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","integer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kBd","kBd","kBps","kBps","kHz","kHz","kbps","kbps","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","scaling_factor","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_duration","to_generic","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Timer","borrow","borrow_mut","elapsed","fmt","from","hash","into","into_oneshot","into_periodic","is_expired","new","param","period_complete","remaining","start","try_from","try_into","type_id","wait","wait","Armed","None","OneShot","Periodic","Running","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["embedded_time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_time::clock","","","","","","","","","","","","","","","","","","","embedded_time::duration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_time::fixed_point","","","","","","","","embedded_time::fraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_time::rateembedded_time::timer","","","","","","","","","","","","","","","","","","","","","embedded_time::timer::param","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","<code>Clock</code>-implementation-specific error","Conversion errors","Attempted type conversion failed","Attempted type conversion failed","Attempted to divide by zero","Attempted to divide by zero","Represents an instant of time relative to a specific <code>Clock</code>","Resulting <code>Duration</code> is negative (not allowed)","Resulting <code>Duration</code> is negative (not allowed)","Result is outside of those valid for this type","Result is outside of those valid for this type","Crate errors","The core inner-type trait for time-related types","","Exact cause of failure is unknown","Exact cause of failure is unknown","Add a <code>Duration</code> to an <code>Instant</code> resulting in a new, later …","","","","","","","This <code>Instant</code> + <code>Duration</code> = later (future) <code>Instant</code>","Checked integer / <code>Fraction</code> = integer","Checked integer / <code>Fraction</code> = integer","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed from self until that …","Checked integer × <code>Fraction</code> = integer","Checked integer × <code>Fraction</code> = integer","This <code>Instant</code> - <code>Duration</code> = earlier <code>Instant</code>","Abstraction for hardware timers/clocks","","","","","","Duration types/units","Returns the <code>Duration</code> (in the provided units) since the …","","","","Fixed-point values","","","","Fractional/Rational values","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new Instant from the provided <code>Clock</code>","Calculates the difference between two <code>Instant</code>s resulting …","Rate-based types/units","Subtract a two <code>Instant</code>s resulting in a <code>Duration</code>","Subtract a <code>Duration</code> from an <code>Instant</code> resulting in a new, …","Software timers coupled to a crate::Clock implementation","","","","","","","","","","","The <code>Clock</code> trait provides an abstraction for …","Potential <code>Clock</code> errors","The clock has either stopped or never started","The duration of one clock tick in seconds, AKA the clock …","The type to hold the tick count","Exact cause of failure is unknown","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Spawn a new, <code>OneShot</code> <code>Timer</code> from this clock","","","Get the current Instant","","An unsigned, fixed-point duration type","Create duration-based extensions from primitive numeric …","","The <code>Generic</code> <code>Duration</code> type allows an arbitrary <em>scaling </em>…","A duration unit type","A duration unit type","A duration unit type","A duration unit type","A duration unit type","A duration unit type","","See Add/Sub","See Add/Sub","","","See Add/Sub","See Add/Sub","","","See Add/Sub","","See Add/Sub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","","","See Formatting","See Formatting","","","See Formatting","","See Formatting","","See Formatting","See Formatting","","See Converting to a <code>Generic</code> <code>Duration</code>","See Converting to a <code>Generic</code> <code>Duration</code>","See Converting to a <code>Generic</code> <code>Duration</code>","Returns the argument unchanged.","See Converting to a <code>Generic</code> <code>Duration</code>","See Converting to a <code>Generic</code> <code>Duration</code>","See Converting to a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","Returns the argument unchanged.","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","","","","","","","","hours","hours","Returns the <em>integer</em> part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","microseconds","microseconds","milliseconds","milliseconds","minutes","minutes","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","nanoseconds","nanoseconds","Constructs a new fixed-point <code>Generic</code> <code>Duration</code> value","See Constructing a duration","See Constructing a duration","See Constructing a duration","See Constructing a duration","See Constructing a duration","See Constructing a duration","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","Returns the <em>scaling factor</em> <code>Fraction</code> part","seconds","seconds","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","Construct a <code>Generic</code> <code>Duration</code> from a <em>named</em> <code>Duration</code> (eg. …","","","","","","","","Convert to <em>named</em> <code>Rate</code>","","","","","","","","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","","See Converting between <code>Duration</code>s","","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from a <code>Generic</code> <code>Duration</code>","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","","See Converting between <code>Duration</code>s","See Converting between <code>Duration</code>s","See Converting from <code>core</code> types","See Converting between <code>Duration</code>s","","","","","","","","","","","","","","","Fixed-point value type","The fractional <em>scaling factor</em>","The <em>integer</em> (magnitude) type","Multiply with overflow checking","Multiply with overflow checking","Returns the integer part of the <code>FixedPoint</code> value","Returns the maximum integer value","Returns the minimum integer value","A fractional value","","","Checked <code>Fraction</code> / <code>Fraction</code> = <code>Fraction</code>","Checked <code>Fraction</code> × <code>Fraction</code> = <code>Fraction</code>","","","","","Return the denominator of the fraction","Panicky <code>Fraction</code> / <code>Fraction</code> = <code>Fraction</code>","","","Returns the argument unchanged.","Constructs a <code>Fraction</code> from an integer.","","Calls <code>U::from(self)</code>.","Panicky <code>Fraction</code> × <code>Fraction</code> = <code>Fraction</code>","Construct a new <code>Fraction</code>.","Construct a new <code>Fraction</code>.","Return the numerator of the fraction","","Returns the reciprocal of the fraction","Returns the value truncated to an integer","","","","","Baud","baud","baud","Bits/s","bytes per second","bytes per second","Bytes/s","Hertz / 100","Hertz / 10","Create rate-based extensions from primitive numeric types.","","The <code>Generic</code> <code>Rate</code> type allows an arbitrary <em>scaling factor</em> …","Hertz","hertz","hertz","kibibaud","kibibaud","kibibytes per second","kibibytes per second","kibihertz","kibihertz","Baud × 1,024","Bits/s × 1,024","Bytes/s × 1,024","Hertz × 1,024","kibibits per second","kibibits per second","Baud × 1,000","Bits/s × 1,000","Bytes/s × 1,000","Hertz × 1,000","megabaud","megabaud","megabytes per second","megabytes per second","megahertz","megahertz","megabits per second","megabits per second","Baud × 1,048,576","Bits/s × 1,048,576","Bytes/s × 1,048,576","Hertz × 1,048,576","Baud × 1,000,000","Bits/s × 1,000,000","Bytes/s × 1,000,000","Hertz × 1,000,000","mebibaud","mebibaud","mebibytes per second","mebibytes per second","mebihertz","mebihertz","mebibits per second","mebibits per second","Hertz / 1,000,000","Hertz / 1000","An unsigned, fixed-point rate type","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bits per second","bits per second","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","","","See Formatting","See Formatting","","","See Formatting","See Formatting","","","See Formatting","See Formatting","","","See Formatting","","See Formatting","See Formatting","","See Formatting","","","See Formatting","See Formatting","","See Formatting","","","See Formatting","","See Formatting","","See Formatting","See Formatting","","See Formatting","","See Formatting","","See Formatting","","See Formatting","","","See Formatting","","See Formatting","","See Formatting","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","Returns the argument unchanged.","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","See Converting to a <code>Generic</code> <code>Rate</code>","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","Returns the argument unchanged.","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <em>integer</em> part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","See Get the integer part","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","kilobaud","kilobaud","kiloBytes per second","kiloBytes per second","kilohertz","kilohertz","kilobits per second","kilobits per second","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","See Mul/Div","Constructs a new fixed-point <code>Generic</code> <code>Rate</code> value","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","See Constructing a rate","","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Comparisons","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","See Remainder","Returns the <em>scaling factor</em> <code>Fraction</code> part","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","See Add/Sub","Convert to <em>named</em> <code>Duration</code>","Construct a <code>Generic</code> <code>Rate</code> from a <em>named</em> <code>Rate</code> (eg. <code>Kilohertz</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting from a <code>Generic</code> <code>Rate</code>","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting from a <code>Generic</code> <code>Rate</code>","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","See Converting between <code>Rate</code>s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>Timer</code> counts toward an expiration, can be polled for …","","","Returns the <code>Duration</code> of time elapsed since it was started","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Change timer type to one-shot","Change timer type into periodic","Check whether the timer has expired","Construct a new, <code>OneShot</code> <code>Timer</code>","Timer type/state parameters","Check whether a <em>periodic</em> timer has elapsed","Returns the <code>Duration</code> until the expiration of the timer","Start the timer from this instant","","","","Block until the timer has expired","Block until the timer has expired","Timer is ready to start","Parameter not set","Timer will stop when it expires","Timer will automatically restart when it expires","Timer is running","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,7,0,7,8,7,8,0,7,8,7,8,0,0,0,7,8,2,2,7,8,2,7,8,2,19,19,2,2,19,19,2,0,2,2,2,7,8,0,2,2,7,8,0,2,7,8,0,2,7,7,7,8,2,7,8,2,7,8,2,2,0,2,2,0,2,2,7,8,2,7,8,2,7,8,0,0,13,1,1,13,13,13,13,13,13,13,13,13,1,13,13,1,13,0,0,0,0,0,0,0,0,0,0,20,20,21,21,22,22,23,23,24,24,25,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,20,21,22,23,24,25,5,20,20,20,20,20,20,21,21,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,23,24,24,24,24,24,24,25,25,25,25,25,25,5,20,20,21,21,22,22,23,23,24,24,25,25,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,5,20,21,22,23,24,25,65,65,5,20,21,22,23,24,25,5,20,21,22,23,24,25,65,65,65,65,65,65,20,21,22,23,24,25,65,65,5,20,21,22,23,24,25,5,20,20,20,20,20,20,21,21,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,23,24,24,24,24,24,24,25,25,25,25,25,25,20,21,22,23,24,25,5,65,65,20,21,22,23,24,25,62,5,20,21,22,23,24,25,62,20,21,22,23,24,25,5,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,5,20,21,22,23,24,25,5,20,21,22,23,24,25,0,66,66,66,66,66,66,66,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,67,67,0,67,67,0,0,0,0,0,0,0,67,67,67,67,67,67,67,67,0,0,0,0,67,67,0,0,0,0,67,67,67,67,67,67,67,67,0,0,0,0,0,0,0,0,67,67,67,67,67,67,67,67,0,0,0,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,67,67,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,47,47,43,43,43,39,39,39,49,49,49,36,36,36,36,36,36,36,36,36,50,50,51,51,52,52,53,53,46,46,46,46,46,46,42,42,42,42,42,42,38,38,38,38,38,38,54,54,54,54,54,54,35,35,35,35,35,35,35,35,35,35,48,48,48,48,48,48,44,44,44,44,44,44,40,40,40,40,40,40,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,45,45,45,41,41,41,37,37,37,57,57,57,34,34,34,34,34,58,47,47,43,43,39,39,49,49,36,36,50,50,51,51,52,52,53,53,46,46,42,42,38,38,54,54,35,35,48,48,44,44,40,40,55,55,56,56,45,45,41,41,37,37,57,57,34,34,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,47,47,47,47,47,47,43,43,43,43,43,43,39,39,39,39,39,49,49,49,49,49,36,36,36,36,36,36,36,36,36,36,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,46,46,46,46,46,46,46,46,46,46,46,46,42,42,42,42,42,42,42,42,42,42,42,42,38,38,38,38,38,38,38,38,38,38,54,54,54,54,54,54,54,54,54,54,35,35,35,35,35,35,35,35,35,35,35,35,48,48,48,48,48,48,48,48,48,48,48,44,44,44,44,44,44,44,44,44,44,44,40,40,40,40,40,40,40,40,40,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,45,45,45,45,45,45,41,41,41,41,41,41,37,37,37,37,37,57,57,57,57,57,34,34,34,34,34,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,67,67,67,67,67,67,67,67,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,47,47,43,43,43,39,39,39,49,49,49,36,36,36,36,36,36,36,36,36,50,50,51,51,52,52,53,53,46,46,46,46,46,46,42,42,42,42,42,42,38,38,38,38,38,38,54,54,54,54,54,54,35,35,35,35,35,35,35,35,35,35,48,48,48,48,48,48,44,44,44,44,44,44,40,40,40,40,40,40,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,45,45,45,41,41,41,37,37,37,57,57,57,34,34,34,34,34,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,68,68,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,47,47,47,47,43,43,43,43,43,39,39,39,39,39,39,49,49,49,49,49,49,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,46,46,46,46,46,46,46,46,42,42,42,42,42,42,42,42,38,38,38,38,38,38,38,38,38,38,54,54,54,54,54,54,54,54,54,54,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,48,48,48,48,48,48,48,48,48,44,44,44,44,44,44,44,44,44,40,40,40,40,40,40,40,40,40,40,40,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,45,45,45,45,45,41,41,41,41,41,37,37,37,37,37,37,57,57,57,57,57,57,34,34,34,34,34,34,34,34,34,34,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,58,47,43,39,49,36,50,51,52,53,46,42,38,54,35,48,44,40,55,56,45,41,37,57,34,0,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,18,0,0,0,0,0,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16,64,17,61,63,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[3,[[2,[1]]]]]],[4,3],[4,3],[[[2,[1]],[2,[1]]],[[3,[5]]]],[[[2,[1]],[2,[1]]],[[3,[5]]]],[4,3],[4,3],[[[2,[1]]],[[3,[[2,[1]]]]]],0,[[[2,[1]]],[[2,[1]]]],[[]],[[2,2],6],[[],7],[[],8],0,[[[2,[1]]],5],[[[2,[1]],[2,[1]]],9],[[7,7],9],[[8,8],9],0,[[[2,[[0,[10,1]]]],11],12],[[7,11],12],[[8,11],12],0,[[]],[13,7],[8,7],[[]],[[]],[[[2,[1]]]],[7],[8],[[]],[[]],[[]],[[],[[2,[1]]]],[[[2,[1]],[2,[1]]],[[3,[6]]]],0,[[[2,[1]],[2,[1]]]],[[[2,[1]]]],0,[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],0,0,0,0,0,0,[[]],[[]],[[],13],[[13,13],9],[[13,11],12],[[]],[13],[[]],[[],[[18,[16,17]]]],[[],14],[[],14],[[],[[14,[2,13]]]],[[],15],0,0,0,0,0,0,0,0,0,0,[[[20,[19]],[2,[1]]]],[[[20,[19]]]],[[[21,[19]]]],[[[21,[19]],[2,[1]]]],[[[22,[19]],[2,[1]]]],[[[22,[19]]]],[[[23,[19]]]],[[[23,[19]],[2,[1]]]],[[[24,[19]],[2,[1]]]],[[[24,[19]]]],[[[25,[19]],[2,[1]]]],[[[25,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[26]]],[[5,[26]]]],[[[20,[[0,[26,19]]]]],[[20,[[0,[26,19]]]]]],[[[21,[[0,[26,19]]]]],[[21,[[0,[26,19]]]]]],[[[22,[[0,[26,19]]]]],[[22,[[0,[26,19]]]]]],[[[23,[[0,[26,19]]]]],[[23,[[0,[26,19]]]]]],[[[24,[[0,[26,19]]]]],[[24,[[0,[26,19]]]]]],[[[25,[[0,[26,19]]]]],[[25,[[0,[26,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[19]],5],6],[[[20,[[0,[27,19]]]],20],6],[[[21,[[0,[27,19]]]],21],6],[[[22,[[0,[27,19]]]],22],6],[[[23,[[0,[27,19]]]],23],6],[[[24,[[0,[27,19]]]],24],6],[[[25,[[0,[27,19]]]],25],6],[[],[[5,[28]]]],[[],[[20,[[0,[28,19]]]]]],[[],[[21,[[0,[28,19]]]]]],[[],[[22,[[0,[28,19]]]]]],[[],[[23,[[0,[28,19]]]]]],[[],[[24,[[0,[28,19]]]]]],[[],[[25,[[0,[28,19]]]]]],[[[20,[19]],19]],[[[21,[19]],19]],[[[22,[19]],19]],[[[23,[19]],19]],[[[24,[19]],19]],[[[25,[19]],19]],[[[5,[19]],5],9],[[[20,[19]],22],9],[[[20,[19]],25],9],[[[20,[19]],21],9],[[20,20],9],[[[20,[19]],23],9],[[[20,[19]],24],9],[[21,21],9],[[[21,[19]],25],9],[[[21,[19]],20],9],[[[21,[19]],22],9],[[[21,[19]],23],9],[[[21,[19]],24],9],[[22,22],9],[[[22,[19]],25],9],[[[22,[19]],24],9],[[[22,[19]],23],9],[[[22,[19]],21],9],[[[22,[19]],20],9],[[23,23],9],[[[23,[19]],25],9],[[[23,[19]],24],9],[[[23,[19]],20],9],[[[23,[19]],21],9],[[[23,[19]],22],9],[[24,24],9],[[[24,[19]],23],9],[[[24,[19]],22],9],[[[24,[19]],21],9],[[[24,[19]],25],9],[[[24,[19]],20],9],[[[25,[19]],24],9],[[[25,[19]],20],9],[[[25,[19]],22],9],[[25,25],9],[[[25,[19]],21],9],[[[25,[19]],23],9],[[[5,[10]],11],12],[[[20,[[0,[10,19]]]],11],12],[[[20,[19]],11],12],[[[21,[19]],11],12],[[[21,[[0,[10,19]]]],11],12],[[[22,[[0,[10,19]]]],11],12],[[[22,[19]],11],12],[[[23,[[0,[10,19]]]],11],12],[[[23,[19]],11],12],[[[24,[[0,[10,19]]]],11],12],[[[24,[19]],11],12],[[[25,[19]],11],12],[[[25,[[0,[10,19]]]],11],12],[[[23,[19]]],[[5,[19]]]],[[[22,[19]]],[[5,[19]]]],[[[20,[19]]],[[5,[19]]]],[[]],[[[21,[19]]],[[5,[19]]]],[[[24,[19]]],[[5,[19]]]],[[[25,[19]]],[[5,[19]]]],[[[25,[29]]],[[20,[30]]]],[[[24,[29]]],[[20,[30]]]],[[[21,[19]]],[[20,[19]]]],[[[21,[29]]],[[20,[30]]]],[[[22,[19]]],[[20,[19]]]],[[[22,[29]]],[[20,[30]]]],[[[23,[19]]],[[20,[19]]]],[[]],[[[23,[29]]],[[20,[30]]]],[[[25,[19]]],[[20,[19]]]],[[[20,[29]]],[[20,[30]]]],[31,[[20,[30]]]],[[[24,[19]]],[[20,[19]]]],[[[25,[29]]],[[21,[30]]]],[[[20,[29]]],[[21,[30]]]],[[]],[[[24,[29]]],[[21,[30]]]],[[[21,[29]]],[[21,[30]]]],[31,[[21,[30]]]],[[[25,[19]]],[[21,[19]]]],[[[24,[19]]],[[21,[19]]]],[[[22,[19]]],[[21,[19]]]],[[[22,[29]]],[[21,[30]]]],[[[23,[19]]],[[21,[19]]]],[[[23,[29]]],[[21,[30]]]],[31,[[22,[30]]]],[[[23,[19]]],[[22,[19]]]],[[[21,[29]]],[[22,[30]]]],[[[25,[19]]],[[22,[19]]]],[[[23,[29]]],[[22,[30]]]],[[[25,[29]]],[[22,[30]]]],[[[20,[29]]],[[22,[30]]]],[[]],[[[22,[29]]],[[22,[30]]]],[[[24,[29]]],[[22,[30]]]],[[[24,[19]]],[[22,[19]]]],[[]],[[[23,[29]]],[[23,[30]]]],[[[24,[29]]],[[23,[30]]]],[[[24,[19]]],[[23,[19]]]],[[[25,[19]]],[[23,[19]]]],[[[25,[29]]],[[23,[30]]]],[[[22,[29]]],[[23,[30]]]],[[[21,[29]]],[[23,[30]]]],[[[20,[29]]],[[23,[30]]]],[[]],[[[25,[19]]],[[24,[19]]]],[[[23,[29]]],[[24,[30]]]],[[[24,[29]]],[[24,[30]]]],[[[25,[29]]],[[24,[30]]]],[[[22,[29]]],[[24,[30]]]],[[[21,[29]]],[[24,[30]]]],[[[20,[29]]],[[24,[30]]]],[[[22,[29]]],[[25,[30]]]],[[[25,[29]]],[[25,[30]]]],[[]],[[[20,[29]]],[[25,[30]]]],[[[21,[29]]],[[25,[30]]]],[[[24,[29]]],[[25,[30]]]],[[[23,[29]]],[[25,[30]]]],[[[5,[[0,[19,32]]]]]],[[[20,[[0,[32,19]]]]]],[[[21,[[0,[32,19]]]]]],[[[22,[[0,[32,19]]]]]],[[[23,[[0,[32,19]]]]]],[[[24,[[0,[32,19]]]]]],[[[25,[[0,[32,19]]]]]],[[],20],[[],20],[[[5,[19]]],19],[[[20,[19]]]],[[[21,[19]]]],[[[22,[19]]]],[[[23,[19]]]],[[[24,[19]]]],[[[25,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],23],[[],23],[[],21],[[],21],[[[20,[19]],19]],[[[21,[19]],19]],[[[22,[19]],19]],[[[23,[19]],19]],[[[24,[19]],19]],[[[25,[19]],19]],[[],25],[[],25],[[19,4],[[5,[19]]]],[19,[[20,[19]]]],[19,[[21,[19]]]],[19,[[22,[19]]]],[19,[[23,[19]]]],[19,[[24,[19]]]],[19,[[25,[19]]]],[[[5,[19]],5],[[3,[6]]]],[[[20,[19]],23],[[3,[6]]]],[[20,20],[[3,[6]]]],[[[20,[19]],21],[[3,[6]]]],[[[20,[19]],22],[[3,[6]]]],[[[20,[19]],25],[[3,[6]]]],[[[20,[19]],24],[[3,[6]]]],[[[21,[19]],23],[[3,[6]]]],[[[21,[19]],20],[[3,[6]]]],[[21,21],[[3,[6]]]],[[[21,[19]],24],[[3,[6]]]],[[[21,[19]],25],[[3,[6]]]],[[[21,[19]],22],[[3,[6]]]],[[[22,[19]],20],[[3,[6]]]],[[[22,[19]],21],[[3,[6]]]],[[22,22],[[3,[6]]]],[[[22,[19]],23],[[3,[6]]]],[[[22,[19]],24],[[3,[6]]]],[[[22,[19]],25],[[3,[6]]]],[[[23,[19]],21],[[3,[6]]]],[[23,23],[[3,[6]]]],[[[23,[19]],24],[[3,[6]]]],[[[23,[19]],25],[[3,[6]]]],[[[23,[19]],20],[[3,[6]]]],[[[23,[19]],22],[[3,[6]]]],[[[24,[19]],25],[[3,[6]]]],[[[24,[19]],23],[[3,[6]]]],[[[24,[19]],22],[[3,[6]]]],[[[24,[19]],21],[[3,[6]]]],[[[24,[19]],20],[[3,[6]]]],[[24,24],[[3,[6]]]],[[[25,[19]],22],[[3,[6]]]],[[[25,[19]],21],[[3,[6]]]],[[[25,[19]],20],[[3,[6]]]],[[[25,[19]],23],[[3,[6]]]],[[25,25],[[3,[6]]]],[[[25,[19]],24],[[3,[6]]]],[[[20,[19]]]],[[[21,[19]]]],[[[22,[19]]]],[[[23,[19]]]],[[[24,[19]]]],[[[25,[19]]]],[[[5,[19]]],4],[[],22],[[],22],[[[20,[19]]]],[[[21,[19]]]],[[[22,[19]]]],[[[23,[19]]]],[[[24,[19]]]],[[[25,[19]]]],[4,[[14,[5,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[8]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],14],[[[24,[30]]],[[14,[[20,[29]]]]]],[[[22,[30]]],[[14,[[20,[29]]]]]],[[[25,[30]]],[[14,[[20,[29]]]]]],[[[23,[30]]],[[14,[[20,[29]]]]]],[31,[[14,[[20,[29]]]]]],[[[5,[19]]],[[14,[20]]]],[[[21,[30]]],[[14,[[20,[29]]]]]],[[[20,[30]]],[[14,[[20,[29]]]]]],[[],14],[[[25,[30]]],[[14,[[21,[29]]]]]],[[[23,[30]]],[[14,[[21,[29]]]]]],[[[20,[19]]],[[14,[[21,[19]]]]]],[31,[[14,[[21,[29]]]]]],[[[21,[30]]],[[14,[[21,[29]]]]]],[[[5,[19]]],[[14,[21]]]],[[[20,[30]]],[[14,[[21,[29]]]]]],[[],14],[[[22,[30]]],[[14,[[21,[29]]]]]],[[[24,[30]]],[[14,[[21,[29]]]]]],[[],14],[[[5,[19]]],[[14,[22]]]],[[[23,[30]]],[[14,[[22,[29]]]]]],[[[21,[30]]],[[14,[[22,[29]]]]]],[[[20,[19]]],[[14,[[22,[19]]]]]],[[[21,[19]]],[[14,[[22,[19]]]]]],[[[24,[30]]],[[14,[[22,[29]]]]]],[[[20,[30]]],[[14,[[22,[29]]]]]],[[[22,[30]]],[[14,[[22,[29]]]]]],[31,[[14,[[22,[29]]]]]],[[[25,[30]]],[[14,[[22,[29]]]]]],[[[20,[19]]],[[14,[[23,[19]]]]]],[[[20,[30]]],[[14,[[23,[29]]]]]],[31,[[14,[23]]]],[[[23,[30]]],[[14,[[23,[29]]]]]],[[[22,[30]]],[[14,[[23,[29]]]]]],[[[5,[19]]],[[14,[23]]]],[[[24,[30]]],[[14,[[23,[29]]]]]],[[[22,[19]]],[[14,[[23,[19]]]]]],[[[25,[30]]],[[14,[[23,[29]]]]]],[[[21,[30]]],[[14,[[23,[29]]]]]],[[],14],[[[21,[19]]],[[14,[[23,[19]]]]]],[[],14],[[[20,[19]]],[[14,[[24,[19]]]]]],[[[22,[30]]],[[14,[[24,[29]]]]]],[[[24,[30]]],[[14,[[24,[29]]]]]],[[[22,[19]]],[[14,[[24,[19]]]]]],[[[20,[30]]],[[14,[[24,[29]]]]]],[[[21,[30]]],[[14,[[24,[29]]]]]],[[[23,[19]]],[[14,[[24,[19]]]]]],[[[21,[19]]],[[14,[[24,[19]]]]]],[31,[[14,[24]]]],[[[23,[30]]],[[14,[[24,[29]]]]]],[[[5,[19]]],[[14,[24]]]],[[[25,[30]]],[[14,[[24,[29]]]]]],[[[21,[19]]],[[14,[[25,[19]]]]]],[[[5,[19]]],[[14,[25]]]],[[[23,[30]]],[[14,[[25,[29]]]]]],[[[24,[19]]],[[14,[[25,[19]]]]]],[[[23,[19]]],[[14,[[25,[19]]]]]],[[[20,[30]]],[[14,[[25,[29]]]]]],[[[25,[30]]],[[14,[[25,[29]]]]]],[[[20,[19]]],[[14,[[25,[19]]]]]],[[[21,[30]]],[[14,[[25,[29]]]]]],[[],14],[[[22,[19]]],[[14,[[25,[19]]]]]],[[[24,[30]]],[[14,[[25,[29]]]]]],[31,[[14,[25]]]],[[[22,[30]]],[[14,[[25,[29]]]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,[[],3],[[],3],[[]],[[]],[[]],0,[[]],[[]],[[4,4],[[3,[4]]]],[[4,4],[[3,[4]]]],[4,4],[[]],[[4,4],6],[[],4],[4,29],[[4,4]],[[4,4],9],[[4,11],12],[[]],[29,4],[4],[[]],[[4,4]],[[29,29],4],[[29,29],[[14,[4,8]]]],[4,29],[[4,4],[[3,[6]]]],[4,4],[4,29],[[]],[[],14],[[],14],[[],15],0,[[],34],[[],34],0,[[],35],[[],35],0,0,0,0,0,0,0,[[],36],[[],36],[[],37],[[],37],[[],38],[[],38],[[],39],[[],39],0,0,0,0,[[],40],[[],40],0,0,0,0,[[],41],[[],41],[[],42],[[],42],[[],43],[[],43],[[],44],[[],44],0,0,0,0,0,0,0,0,[[],45],[[],45],[[],46],[[],46],[[],47],[[],47],[[],48],[[],48],0,0,0,[[[47,[19]]]],[[[43,[19]]]],[[[39,[19]]]],[[[49,[19]]]],[[[36,[19]]]],[[[50,[19]]]],[[[51,[19]]]],[[[52,[19]]]],[[[53,[19]]]],[[[46,[19]]]],[[[42,[19]]]],[[[38,[19]]]],[[[54,[19]]]],[[[35,[19]]]],[[[48,[19]]]],[[[44,[19]]]],[[[40,[19]]]],[[[55,[19]]]],[[[56,[19]]]],[[[45,[19]]]],[[[41,[19]]]],[[[37,[19]]]],[[[57,[19]]]],[[[34,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],56],[[],56],[[[58,[26]]],[[58,[26]]]],[[[47,[[0,[26,19]]]]],[[47,[[0,[26,19]]]]]],[[[43,[[0,[26,19]]]]],[[43,[[0,[26,19]]]]]],[[[39,[[0,[26,19]]]]],[[39,[[0,[26,19]]]]]],[[[49,[[0,[26,19]]]]],[[49,[[0,[26,19]]]]]],[[[36,[[0,[26,19]]]]],[[36,[[0,[26,19]]]]]],[[[50,[[0,[26,19]]]]],[[50,[[0,[26,19]]]]]],[[[51,[[0,[26,19]]]]],[[51,[[0,[26,19]]]]]],[[[52,[[0,[26,19]]]]],[[52,[[0,[26,19]]]]]],[[[53,[[0,[26,19]]]]],[[53,[[0,[26,19]]]]]],[[[46,[[0,[26,19]]]]],[[46,[[0,[26,19]]]]]],[[[42,[[0,[26,19]]]]],[[42,[[0,[26,19]]]]]],[[[38,[[0,[26,19]]]]],[[38,[[0,[26,19]]]]]],[[[54,[[0,[26,19]]]]],[[54,[[0,[26,19]]]]]],[[[35,[[0,[26,19]]]]],[[35,[[0,[26,19]]]]]],[[[48,[[0,[26,19]]]]],[[48,[[0,[26,19]]]]]],[[[44,[[0,[26,19]]]]],[[44,[[0,[26,19]]]]]],[[[40,[[0,[26,19]]]]],[[40,[[0,[26,19]]]]]],[[[55,[[0,[26,19]]]]],[[55,[[0,[26,19]]]]]],[[[56,[[0,[26,19]]]]],[[56,[[0,[26,19]]]]]],[[[45,[[0,[26,19]]]]],[[45,[[0,[26,19]]]]]],[[[41,[[0,[26,19]]]]],[[41,[[0,[26,19]]]]]],[[[37,[[0,[26,19]]]]],[[37,[[0,[26,19]]]]]],[[[57,[[0,[26,19]]]]],[[57,[[0,[26,19]]]]]],[[[34,[[0,[26,19]]]]],[[34,[[0,[26,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[58,[27]],58],6],[[[47,[[0,[27,19]]]],47],6],[[[43,[[0,[27,19]]]],43],6],[[[39,[[0,[27,19]]]],39],6],[[[49,[[0,[27,19]]]],49],6],[[[36,[[0,[27,19]]]],36],6],[[[50,[[0,[27,19]]]],50],6],[[[51,[[0,[27,19]]]],51],6],[[[52,[[0,[27,19]]]],52],6],[[[53,[[0,[27,19]]]],53],6],[[[46,[[0,[27,19]]]],46],6],[[[42,[[0,[27,19]]]],42],6],[[[38,[[0,[27,19]]]],38],6],[[[54,[[0,[27,19]]]],54],6],[[[35,[[0,[27,19]]]],35],6],[[[48,[[0,[27,19]]]],48],6],[[[44,[[0,[27,19]]]],44],6],[[[40,[[0,[27,19]]]],40],6],[[[55,[[0,[27,19]]]],55],6],[[[56,[[0,[27,19]]]],56],6],[[[45,[[0,[27,19]]]],45],6],[[[41,[[0,[27,19]]]],41],6],[[[37,[[0,[27,19]]]],37],6],[[[57,[[0,[27,19]]]],57],6],[[[34,[[0,[27,19]]]],34],6],[[],[[58,[28]]]],[[],[[47,[[0,[28,19]]]]]],[[],[[43,[[0,[28,19]]]]]],[[],[[39,[[0,[28,19]]]]]],[[],[[49,[[0,[28,19]]]]]],[[],[[36,[[0,[28,19]]]]]],[[],[[50,[[0,[28,19]]]]]],[[],[[51,[[0,[28,19]]]]]],[[],[[52,[[0,[28,19]]]]]],[[],[[53,[[0,[28,19]]]]]],[[],[[46,[[0,[28,19]]]]]],[[],[[42,[[0,[28,19]]]]]],[[],[[38,[[0,[28,19]]]]]],[[],[[54,[[0,[28,19]]]]]],[[],[[35,[[0,[28,19]]]]]],[[],[[48,[[0,[28,19]]]]]],[[],[[44,[[0,[28,19]]]]]],[[],[[40,[[0,[28,19]]]]]],[[],[[55,[[0,[28,19]]]]]],[[],[[56,[[0,[28,19]]]]]],[[],[[45,[[0,[28,19]]]]]],[[],[[41,[[0,[28,19]]]]]],[[],[[37,[[0,[28,19]]]]]],[[],[[57,[[0,[28,19]]]]]],[[],[[34,[[0,[28,19]]]]]],[[[47,[19]],19]],[[[43,[19]],19]],[[[39,[19]],19]],[[[49,[19]],19]],[[[36,[19]],19]],[[[50,[19]],19]],[[[51,[19]],19]],[[[52,[19]],19]],[[[53,[19]],19]],[[[46,[19]],19]],[[[42,[19]],19]],[[[38,[19]],19]],[[[54,[19]],19]],[[[35,[19]],19]],[[[48,[19]],19]],[[[44,[19]],19]],[[[40,[19]],19]],[[[55,[19]],19]],[[[56,[19]],19]],[[[45,[19]],19]],[[[41,[19]],19]],[[[37,[19]],19]],[[[57,[19]],19]],[[[34,[19]],19]],[[[58,[59]],58],9],[[[47,[19]],39],9],[[[47,[19]],36],9],[[47,47],9],[[[43,[19]],36],9],[[[43,[19]],49],9],[[43,43],9],[[[39,[19]],47],9],[[39,39],9],[[[39,[19]],36],9],[[49,49],9],[[[49,[19]],36],9],[[[49,[19]],43],9],[[[36,[19]],47],9],[[[36,[19]],43],9],[[[36,[19]],49],9],[[36,36],9],[[[36,[19]],39],9],[[[36,[19]],50],9],[[[36,[19]],51],9],[[[36,[19]],53],9],[[[36,[19]],52],9],[[50,50],9],[[[50,[19]],36],9],[[51,51],9],[[[51,[19]],36],9],[[[52,[19]],36],9],[[52,52],9],[[[53,[19]],36],9],[[53,53],9],[[[46,[19]],40],9],[[[46,[19]],48],9],[[[46,[19]],56],9],[[[46,[19]],35],9],[[[46,[19]],38],9],[[46,46],9],[[[42,[19]],44],9],[[[42,[19]],56],9],[[[42,[19]],35],9],[[42,42],9],[[[42,[19]],55],9],[[[42,[19]],54],9],[[38,38],9],[[[38,[19]],56],9],[[[38,[19]],35],9],[[[38,[19]],48],9],[[[38,[19]],46],9],[[[38,[19]],40],9],[[[54,[19]],44],9],[[[54,[19]],56],9],[[[54,[19]],42],9],[[54,54],9],[[[54,[19]],35],9],[[[54,[19]],55],9],[[[35,[19]],40],9],[[[35,[19]],48],9],[[[35,[19]],55],9],[[35,35],9],[[[35,[19]],46],9],[[[35,[19]],56],9],[[[35,[19]],42],9],[[[35,[19]],54],9],[[[35,[19]],44],9],[[[35,[19]],38],9],[[[48,[19]],40],9],[[[48,[19]],35],9],[[[48,[19]],56],9],[[[48,[19]],46],9],[[[48,[19]],38],9],[[48,48],9],[[[44,[19]],42],9],[[[44,[19]],56],9],[[44,44],9],[[[44,[19]],54],9],[[[44,[19]],35],9],[[[44,[19]],55],9],[[[40,[19]],38],9],[[40,40],9],[[[40,[19]],35],9],[[[40,[19]],56],9],[[[40,[19]],48],9],[[[40,[19]],46],9],[[[55,[19]],35],9],[[[55,[19]],44],9],[[55,55],9],[[[55,[19]],54],9],[[[55,[19]],42],9],[[[55,[19]],56],9],[[[56,[19]],38],9],[[[56,[19]],46],9],[[[56,[19]],54],9],[[[56,[19]],44],9],[[[56,[19]],42],9],[[[56,[19]],55],9],[[[56,[19]],48],9],[[[56,[19]],35],9],[[56,56],9],[[[56,[19]],40],9],[[[45,[19]],37],9],[[[45,[19]],34],9],[[45,45],9],[[[41,[19]],34],9],[[41,41],9],[[[41,[19]],57],9],[[[37,[19]],34],9],[[[37,[19]],45],9],[[37,37],9],[[[57,[19]],41],9],[[57,57],9],[[[57,[19]],34],9],[[34,34],9],[[[34,[19]],45],9],[[[34,[19]],37],9],[[[34,[19]],41],9],[[[34,[19]],57],9],[[[58,[10]],11],12],[[[47,[[0,[10,19]]]],11],12],[[[47,[19]],11],12],[[[43,[19]],11],12],[[[43,[[0,[10,19]]]],11],12],[[[39,[[0,[10,19]]]],11],12],[[[39,[19]],11],12],[[[49,[19]],11],12],[[[49,[[0,[10,19]]]],11],12],[[[36,[[0,[10,19]]]],11],12],[[[36,[19]],11],12],[[[50,[19]],11],12],[[[50,[[0,[10,19]]]],11],12],[[[51,[[0,[10,19]]]],11],12],[[[51,[19]],11],12],[[[52,[[0,[10,19]]]],11],12],[[[52,[19]],11],12],[[[53,[19]],11],12],[[[53,[[0,[10,19]]]],11],12],[[[46,[19]],11],12],[[[46,[[0,[10,19]]]],11],12],[[[42,[[0,[10,19]]]],11],12],[[[42,[19]],11],12],[[[38,[19]],11],12],[[[38,[[0,[10,19]]]],11],12],[[[54,[19]],11],12],[[[54,[[0,[10,19]]]],11],12],[[[35,[[0,[10,19]]]],11],12],[[[35,[19]],11],12],[[[48,[[0,[10,19]]]],11],12],[[[48,[19]],11],12],[[[44,[[0,[10,19]]]],11],12],[[[44,[19]],11],12],[[[40,[19]],11],12],[[[40,[[0,[10,19]]]],11],12],[[[55,[19]],11],12],[[[55,[[0,[10,19]]]],11],12],[[[56,[19]],11],12],[[[56,[[0,[10,19]]]],11],12],[[[45,[19]],11],12],[[[45,[[0,[10,19]]]],11],12],[[[41,[19]],11],12],[[[41,[[0,[10,19]]]],11],12],[[[37,[[0,[10,19]]]],11],12],[[[37,[19]],11],12],[[[57,[[0,[10,19]]]],11],12],[[[57,[19]],11],12],[[[34,[[0,[10,19]]]],11],12],[[[34,[19]],11],12],[[[44,[19]]],[[58,[19]]]],[[[37,[19]]],[[58,[19]]]],[[[40,[19]]],[[58,[19]]]],[[[50,[19]]],[[58,[19]]]],[[[47,[19]]],[[58,[19]]]],[[[39,[19]]],[[58,[19]]]],[[[41,[19]]],[[58,[19]]]],[[[43,[19]]],[[58,[19]]]],[[[38,[19]]],[[58,[19]]]],[[[49,[19]]],[[58,[19]]]],[[]],[[[34,[19]]],[[58,[19]]]],[[[57,[19]]],[[58,[19]]]],[[[46,[19]]],[[58,[19]]]],[[[51,[19]]],[[58,[19]]]],[[[56,[19]]],[[58,[19]]]],[[[52,[19]]],[[58,[19]]]],[[[35,[19]]],[[58,[19]]]],[[[48,[19]]],[[58,[19]]]],[[[42,[19]]],[[58,[19]]]],[[[45,[19]]],[[58,[19]]]],[[[55,[19]]],[[58,[19]]]],[[[36,[19]]],[[58,[19]]]],[[[53,[19]]],[[58,[19]]]],[[[54,[19]]],[[58,[19]]]],[[]],[[[36,[29]]],[[47,[30]]]],[[[36,[19]]],[[47,[19]]]],[[[47,[29]]],[[47,[30]]]],[[[39,[29]]],[[47,[30]]]],[[[39,[19]]],[[47,[19]]]],[[[43,[29]]],[[43,[30]]]],[[]],[[[36,[29]]],[[43,[30]]]],[[[36,[19]]],[[43,[19]]]],[[[49,[19]]],[[43,[19]]]],[[[49,[29]]],[[43,[30]]]],[[[47,[29]]],[[39,[30]]]],[[]],[[[36,[29]]],[[39,[30]]]],[[[36,[19]]],[[39,[19]]]],[[[39,[29]]],[[39,[30]]]],[[[36,[19]]],[[49,[19]]]],[[]],[[[43,[29]]],[[49,[30]]]],[[[36,[29]]],[[49,[30]]]],[[[49,[29]]],[[49,[30]]]],[[]],[[[36,[29]]],[[36,[30]]]],[[[51,[29]]],[[36,[30]]]],[[[49,[29]]],[[36,[30]]]],[[[52,[29]]],[[36,[30]]]],[[[47,[29]]],[[36,[30]]]],[[[50,[29]]],[[36,[30]]]],[[[53,[29]]],[[36,[30]]]],[[[39,[29]]],[[36,[30]]]],[[[43,[29]]],[[36,[30]]]],[[]],[[[50,[29]]],[[50,[30]]]],[[[36,[19]]],[[50,[19]]]],[[[36,[29]]],[[50,[30]]]],[[[51,[29]]],[[51,[30]]]],[[]],[[[36,[29]]],[[51,[30]]]],[[[36,[19]]],[[51,[19]]]],[[[36,[19]]],[[52,[19]]]],[[]],[[[52,[29]]],[[52,[30]]]],[[[36,[29]]],[[52,[30]]]],[[[36,[29]]],[[53,[30]]]],[[[36,[19]]],[[53,[19]]]],[[]],[[[53,[29]]],[[53,[30]]]],[[[56,[19]]],[[46,[19]]]],[[[48,[29]]],[[46,[30]]]],[[[40,[19]]],[[46,[19]]]],[[[38,[19]]],[[46,[19]]]],[[[56,[29]]],[[46,[30]]]],[[[35,[29]]],[[46,[30]]]],[[[38,[29]]],[[46,[30]]]],[[[40,[29]]],[[46,[30]]]],[[[46,[29]]],[[46,[30]]]],[[[48,[19]]],[[46,[19]]]],[[]],[[[35,[19]]],[[46,[19]]]],[[[56,[19]]],[[42,[19]]]],[[[55,[29]]],[[42,[30]]]],[[[55,[19]]],[[42,[19]]]],[[[35,[19]]],[[42,[19]]]],[[[42,[29]]],[[42,[30]]]],[[[54,[29]]],[[42,[30]]]],[[[44,[19]]],[[42,[19]]]],[[[44,[29]]],[[42,[30]]]],[[[56,[29]]],[[42,[30]]]],[[[35,[29]]],[[42,[30]]]],[[[54,[19]]],[[42,[19]]]],[[]],[[[35,[29]]],[[38,[30]]]],[[[56,[29]]],[[38,[30]]]],[[]],[[[46,[29]]],[[38,[30]]]],[[[38,[29]]],[[38,[30]]]],[[[40,[19]]],[[38,[19]]]],[[[40,[29]]],[[38,[30]]]],[[[35,[19]]],[[38,[19]]]],[[[48,[29]]],[[38,[30]]]],[[[56,[19]]],[[38,[19]]]],[[]],[[[42,[29]]],[[54,[30]]]],[[[44,[29]]],[[54,[30]]]],[[[54,[29]]],[[54,[30]]]],[[[55,[19]]],[[54,[19]]]],[[[55,[29]]],[[54,[30]]]],[[[56,[29]]],[[54,[30]]]],[[[35,[19]]],[[54,[19]]]],[[[35,[29]]],[[54,[30]]]],[[[56,[19]]],[[54,[19]]]],[[[44,[29]]],[[35,[30]]]],[[[35,[29]]],[[35,[30]]]],[[[38,[29]]],[[35,[30]]]],[[[42,[29]]],[[35,[30]]]],[[[40,[29]]],[[35,[30]]]],[[[54,[29]]],[[35,[30]]]],[[[55,[29]]],[[35,[30]]]],[[]],[[[46,[29]]],[[35,[30]]]],[[[56,[19]]],[[35,[19]]]],[[[56,[29]]],[[35,[30]]]],[[[48,[29]]],[[35,[30]]]],[[]],[[[56,[29]]],[[48,[30]]]],[[[40,[29]]],[[48,[30]]]],[[[38,[19]]],[[48,[19]]]],[[[38,[29]]],[[48,[30]]]],[[[48,[29]]],[[48,[30]]]],[[[46,[29]]],[[48,[30]]]],[[[35,[19]]],[[48,[19]]]],[[[40,[19]]],[[48,[19]]]],[[[35,[29]]],[[48,[30]]]],[[[56,[19]]],[[48,[19]]]],[[[56,[19]]],[[44,[19]]]],[[[35,[29]]],[[44,[30]]]],[[[35,[19]]],[[44,[19]]]],[[[55,[29]]],[[44,[30]]]],[[[55,[19]]],[[44,[19]]]],[[[42,[29]]],[[44,[30]]]],[[[54,[29]]],[[44,[30]]]],[[[54,[19]]],[[44,[19]]]],[[[44,[29]]],[[44,[30]]]],[[[56,[29]]],[[44,[30]]]],[[]],[[[46,[29]]],[[40,[30]]]],[[[38,[29]]],[[40,[30]]]],[[[56,[29]]],[[40,[30]]]],[[]],[[[56,[19]]],[[40,[19]]]],[[[35,[29]]],[[40,[30]]]],[[[48,[29]]],[[40,[30]]]],[[[35,[19]]],[[40,[19]]]],[[[40,[29]]],[[40,[30]]]],[[[44,[29]]],[[55,[30]]]],[[[56,[19]]],[[55,[19]]]],[[[56,[29]]],[[55,[30]]]],[[]],[[[42,[29]]],[[55,[30]]]],[[[55,[29]]],[[55,[30]]]],[[[35,[19]]],[[55,[19]]]],[[[54,[29]]],[[55,[30]]]],[[[35,[29]]],[[55,[30]]]],[[[42,[29]]],[[56,[30]]]],[[[44,[29]]],[[56,[30]]]],[[[48,[29]]],[[56,[30]]]],[[[40,[29]]],[[56,[30]]]],[[[54,[29]]],[[56,[30]]]],[[[56,[29]]],[[56,[30]]]],[[[55,[29]]],[[56,[30]]]],[[[46,[29]]],[[56,[30]]]],[[[38,[29]]],[[56,[30]]]],[[[35,[29]]],[[56,[30]]]],[[]],[[[37,[19]]],[[45,[19]]]],[[[45,[29]]],[[45,[30]]]],[[]],[[[34,[19]]],[[45,[19]]]],[[[34,[29]]],[[45,[30]]]],[[[37,[29]]],[[45,[30]]]],[[[57,[19]]],[[41,[19]]]],[[[57,[29]]],[[41,[30]]]],[[[41,[29]]],[[41,[30]]]],[[]],[[[34,[29]]],[[41,[30]]]],[[[34,[19]]],[[41,[19]]]],[[[45,[29]]],[[37,[30]]]],[[[34,[29]]],[[37,[30]]]],[[[34,[19]]],[[37,[19]]]],[[[37,[29]]],[[37,[30]]]],[[]],[[[41,[29]]],[[57,[30]]]],[[[34,[19]]],[[57,[19]]]],[[[34,[29]]],[[57,[30]]]],[[[57,[29]]],[[57,[30]]]],[[]],[[[41,[29]]],[[34,[30]]]],[[[45,[29]]],[[34,[30]]]],[[[37,[29]]],[[34,[30]]]],[[]],[[[57,[29]]],[[34,[30]]]],[[[34,[29]]],[[34,[30]]]],[[[58,[32]]]],[[[47,[[0,[32,19]]]]]],[[[43,[[0,[32,19]]]]]],[[[39,[[0,[32,19]]]]]],[[[49,[[0,[32,19]]]]]],[[[36,[[0,[32,19]]]]]],[[[50,[[0,[32,19]]]]]],[[[51,[[0,[32,19]]]]]],[[[52,[[0,[32,19]]]]]],[[[53,[[0,[32,19]]]]]],[[[46,[[0,[32,19]]]]]],[[[42,[[0,[32,19]]]]]],[[[38,[[0,[32,19]]]]]],[[[54,[[0,[32,19]]]]]],[[[35,[[0,[32,19]]]]]],[[[48,[[0,[32,19]]]]]],[[[44,[[0,[32,19]]]]]],[[[40,[[0,[32,19]]]]]],[[[55,[[0,[32,19]]]]]],[[[56,[[0,[32,19]]]]]],[[[45,[[0,[32,19]]]]]],[[[41,[[0,[32,19]]]]]],[[[37,[[0,[32,19]]]]]],[[[57,[[0,[32,19]]]]]],[[[34,[[0,[32,19]]]]]],[[[58,[19]]],19],[[[47,[19]]]],[[[43,[19]]]],[[[39,[19]]]],[[[49,[19]]]],[[[36,[19]]]],[[[50,[19]]]],[[[51,[19]]]],[[[52,[19]]]],[[[53,[19]]]],[[[46,[19]]]],[[[42,[19]]]],[[[38,[19]]]],[[[54,[19]]]],[[[35,[19]]]],[[[48,[19]]]],[[[44,[19]]]],[[[40,[19]]]],[[[55,[19]]]],[[[56,[19]]]],[[[45,[19]]]],[[[41,[19]]]],[[[37,[19]]]],[[[57,[19]]]],[[[34,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[[],57],[[],54],[[],54],[[],49],[[],49],[[],55],[[],55],[[[47,[19]],19]],[[[43,[19]],19]],[[[39,[19]],19]],[[[49,[19]],19]],[[[36,[19]],19]],[[[50,[19]],19]],[[[51,[19]],19]],[[[52,[19]],19]],[[[53,[19]],19]],[[[46,[19]],19]],[[[42,[19]],19]],[[[38,[19]],19]],[[[54,[19]],19]],[[[35,[19]],19]],[[[48,[19]],19]],[[[44,[19]],19]],[[[40,[19]],19]],[[[55,[19]],19]],[[[56,[19]],19]],[[[45,[19]],19]],[[[41,[19]],19]],[[[37,[19]],19]],[[[57,[19]],19]],[[[34,[19]],19]],[[19,4],[[58,[19]]]],[19,[[47,[19]]]],[19,[[43,[19]]]],[19,[[39,[19]]]],[19,[[49,[19]]]],[19,[[36,[19]]]],[19,[[50,[19]]]],[19,[[51,[19]]]],[19,[[52,[19]]]],[19,[[53,[19]]]],[19,[[46,[19]]]],[19,[[42,[19]]]],[19,[[38,[19]]]],[19,[[54,[19]]]],[19,[[35,[19]]]],[19,[[48,[19]]]],[19,[[44,[19]]]],[19,[[40,[19]]]],[19,[[55,[19]]]],[19,[[56,[19]]]],[19,[[45,[19]]]],[19,[[41,[19]]]],[19,[[37,[19]]]],[19,[[57,[19]]]],[19,[[34,[19]]]],[[[58,[60]],58],[[3,[6]]]],[[[47,[19]],39],[[3,[6]]]],[[[47,[19]],36],[[3,[6]]]],[[47,47],[[3,[6]]]],[[43,43],[[3,[6]]]],[[[43,[19]],36],[[3,[6]]]],[[[43,[19]],49],[[3,[6]]]],[[39,39],[[3,[6]]]],[[[39,[19]],47],[[3,[6]]]],[[[39,[19]],36],[[3,[6]]]],[[49,49],[[3,[6]]]],[[[49,[19]],43],[[3,[6]]]],[[[49,[19]],36],[[3,[6]]]],[[[36,[19]],53],[[3,[6]]]],[[[36,[19]],52],[[3,[6]]]],[[[36,[19]],43],[[3,[6]]]],[[[36,[19]],50],[[3,[6]]]],[[[36,[19]],39],[[3,[6]]]],[[36,36],[[3,[6]]]],[[[36,[19]],51],[[3,[6]]]],[[[36,[19]],49],[[3,[6]]]],[[[36,[19]],47],[[3,[6]]]],[[50,50],[[3,[6]]]],[[[50,[19]],36],[[3,[6]]]],[[[51,[19]],36],[[3,[6]]]],[[51,51],[[3,[6]]]],[[52,52],[[3,[6]]]],[[[52,[19]],36],[[3,[6]]]],[[53,53],[[3,[6]]]],[[[53,[19]],36],[[3,[6]]]],[[[46,[19]],40],[[3,[6]]]],[[[46,[19]],56],[[3,[6]]]],[[[46,[19]],35],[[3,[6]]]],[[[46,[19]],38],[[3,[6]]]],[[[46,[19]],48],[[3,[6]]]],[[46,46],[[3,[6]]]],[[42,42],[[3,[6]]]],[[[42,[19]],44],[[3,[6]]]],[[[42,[19]],54],[[3,[6]]]],[[[42,[19]],55],[[3,[6]]]],[[[42,[19]],35],[[3,[6]]]],[[[42,[19]],56],[[3,[6]]]],[[[38,[19]],40],[[3,[6]]]],[[38,38],[[3,[6]]]],[[[38,[19]],48],[[3,[6]]]],[[[38,[19]],35],[[3,[6]]]],[[[38,[19]],56],[[3,[6]]]],[[[38,[19]],46],[[3,[6]]]],[[[54,[19]],42],[[3,[6]]]],[[[54,[19]],44],[[3,[6]]]],[[[54,[19]],56],[[3,[6]]]],[[[54,[19]],35],[[3,[6]]]],[[[54,[19]],55],[[3,[6]]]],[[54,54],[[3,[6]]]],[[[35,[19]],55],[[3,[6]]]],[[35,35],[[3,[6]]]],[[[35,[19]],48],[[3,[6]]]],[[[35,[19]],46],[[3,[6]]]],[[[35,[19]],40],[[3,[6]]]],[[[35,[19]],42],[[3,[6]]]],[[[35,[19]],54],[[3,[6]]]],[[[35,[19]],56],[[3,[6]]]],[[[35,[19]],44],[[3,[6]]]],[[[35,[19]],38],[[3,[6]]]],[[[48,[19]],56],[[3,[6]]]],[[[48,[19]],35],[[3,[6]]]],[[[48,[19]],46],[[3,[6]]]],[[48,48],[[3,[6]]]],[[[48,[19]],40],[[3,[6]]]],[[[48,[19]],38],[[3,[6]]]],[[[44,[19]],42],[[3,[6]]]],[[[44,[19]],56],[[3,[6]]]],[[[44,[19]],54],[[3,[6]]]],[[44,44],[[3,[6]]]],[[[44,[19]],55],[[3,[6]]]],[[[44,[19]],35],[[3,[6]]]],[[[40,[19]],38],[[3,[6]]]],[[40,40],[[3,[6]]]],[[[40,[19]],48],[[3,[6]]]],[[[40,[19]],46],[[3,[6]]]],[[[40,[19]],56],[[3,[6]]]],[[[40,[19]],35],[[3,[6]]]],[[[55,[19]],56],[[3,[6]]]],[[[55,[19]],42],[[3,[6]]]],[[[55,[19]],44],[[3,[6]]]],[[[55,[19]],54],[[3,[6]]]],[[55,55],[[3,[6]]]],[[[55,[19]],35],[[3,[6]]]],[[[56,[19]],38],[[3,[6]]]],[[[56,[19]],42],[[3,[6]]]],[[[56,[19]],54],[[3,[6]]]],[[[56,[19]],44],[[3,[6]]]],[[[56,[19]],48],[[3,[6]]]],[[[56,[19]],55],[[3,[6]]]],[[[56,[19]],40],[[3,[6]]]],[[[56,[19]],35],[[3,[6]]]],[[[56,[19]],46],[[3,[6]]]],[[56,56],[[3,[6]]]],[[45,45],[[3,[6]]]],[[[45,[19]],37],[[3,[6]]]],[[[45,[19]],34],[[3,[6]]]],[[[41,[19]],57],[[3,[6]]]],[[[41,[19]],34],[[3,[6]]]],[[41,41],[[3,[6]]]],[[[37,[19]],45],[[3,[6]]]],[[37,37],[[3,[6]]]],[[[37,[19]],34],[[3,[6]]]],[[[57,[19]],41],[[3,[6]]]],[[[57,[19]],34],[[3,[6]]]],[[57,57],[[3,[6]]]],[[[34,[19]],37],[[3,[6]]]],[[[34,[19]],41],[[3,[6]]]],[[[34,[19]],57],[[3,[6]]]],[[34,34],[[3,[6]]]],[[[34,[19]],45],[[3,[6]]]],[[[47,[19]]]],[[[43,[19]]]],[[[39,[19]]]],[[[49,[19]]]],[[[36,[19]]]],[[[50,[19]]]],[[[51,[19]]]],[[[52,[19]]]],[[[53,[19]]]],[[[46,[19]]]],[[[42,[19]]]],[[[38,[19]]]],[[[54,[19]]]],[[[35,[19]]]],[[[48,[19]]]],[[[44,[19]]]],[[[40,[19]]]],[[[55,[19]]]],[[[56,[19]]]],[[[45,[19]]]],[[[41,[19]]]],[[[37,[19]]]],[[[57,[19]]]],[[[34,[19]]]],[[[58,[19]]],4],[[[47,[19]]]],[[[43,[19]]]],[[[39,[19]]]],[[[49,[19]]]],[[[36,[19]]]],[[[50,[19]]]],[[[51,[19]]]],[[[52,[19]]]],[[[53,[19]]]],[[[46,[19]]]],[[[42,[19]]]],[[[38,[19]]]],[[[54,[19]]]],[[[35,[19]]]],[[[48,[19]]]],[[[44,[19]]]],[[[40,[19]]]],[[[55,[19]]]],[[[56,[19]]]],[[[45,[19]]]],[[[41,[19]]]],[[[37,[19]]]],[[[57,[19]]]],[[[34,[19]]]],[[],[[14,[8]]]],[4,[[14,[58,8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],14],[[[36,[30]]],[[14,[[47,[29]]]]]],[[[39,[30]]],[[14,[[47,[29]]]]]],[[[47,[30]]],[[14,[[47,[29]]]]]],[[],14],[[[58,[19]]],[[14,[47]]]],[[],14],[[[43,[30]]],[[14,[[43,[29]]]]]],[[[49,[30]]],[[14,[[43,[29]]]]]],[[[58,[19]]],[[14,[43]]]],[[[36,[30]]],[[14,[[43,[29]]]]]],[[[39,[30]]],[[14,[[39,[29]]]]]],[[[36,[30]]],[[14,[[39,[29]]]]]],[[[47,[30]]],[[14,[[39,[29]]]]]],[[],14],[[[58,[19]]],[[14,[39]]]],[[[47,[19]]],[[14,[[39,[19]]]]]],[[],14],[[[58,[19]]],[[14,[49]]]],[[[36,[30]]],[[14,[[49,[29]]]]]],[[[43,[19]]],[[14,[[49,[19]]]]]],[[[49,[30]]],[[14,[[49,[29]]]]]],[[[43,[30]]],[[14,[[49,[29]]]]]],[[[58,[19]]],[[14,[36]]]],[[[47,[19]]],[[14,[[36,[19]]]]]],[[[50,[19]]],[[14,[[36,[19]]]]]],[[[49,[30]]],[[14,[[36,[29]]]]]],[[[52,[19]]],[[14,[[36,[19]]]]]],[[[43,[30]]],[[14,[[36,[29]]]]]],[[[47,[30]]],[[14,[[36,[29]]]]]],[[[43,[19]]],[[14,[[36,[19]]]]]],[[[49,[19]]],[[14,[[36,[19]]]]]],[[[39,[19]]],[[14,[[36,[19]]]]]],[[[51,[19]]],[[14,[[36,[19]]]]]],[[[50,[30]]],[[14,[[36,[29]]]]]],[[[39,[30]]],[[14,[[36,[29]]]]]],[[[36,[30]]],[[14,[[36,[29]]]]]],[[[53,[19]]],[[14,[[36,[19]]]]]],[[[53,[30]]],[[14,[[36,[29]]]]]],[[[52,[30]]],[[14,[[36,[29]]]]]],[[[51,[30]]],[[14,[[36,[29]]]]]],[[],14],[[[36,[30]]],[[14,[[50,[29]]]]]],[[[58,[19]]],[[14,[50]]]],[[[50,[30]]],[[14,[[50,[29]]]]]],[[],14],[[[36,[30]]],[[14,[[51,[29]]]]]],[[[51,[30]]],[[14,[[51,[29]]]]]],[[[58,[19]]],[[14,[51]]]],[[],14],[[[52,[30]]],[[14,[[52,[29]]]]]],[[],14],[[[36,[30]]],[[14,[[52,[29]]]]]],[[[58,[19]]],[[14,[52]]]],[[[36,[30]]],[[14,[[53,[29]]]]]],[[[58,[19]]],[[14,[53]]]],[[[53,[30]]],[[14,[[53,[29]]]]]],[[],14],[[[35,[30]]],[[14,[[46,[29]]]]]],[[[58,[19]]],[[14,[46]]]],[[[48,[30]]],[[14,[[46,[29]]]]]],[[[56,[30]]],[[14,[[46,[29]]]]]],[[[38,[30]]],[[14,[[46,[29]]]]]],[[[40,[30]]],[[14,[[46,[29]]]]]],[[[46,[30]]],[[14,[[46,[29]]]]]],[[],14],[[[35,[30]]],[[14,[[42,[29]]]]]],[[[42,[30]]],[[14,[[42,[29]]]]]],[[[44,[30]]],[[14,[[42,[29]]]]]],[[[55,[30]]],[[14,[[42,[29]]]]]],[[[56,[30]]],[[14,[[42,[29]]]]]],[[],14],[[[58,[19]]],[[14,[42]]]],[[[54,[30]]],[[14,[[42,[29]]]]]],[[[38,[30]]],[[14,[[38,[29]]]]]],[[[48,[19]]],[[14,[[38,[19]]]]]],[[[46,[19]]],[[14,[[38,[19]]]]]],[[],14],[[[40,[30]]],[[14,[[38,[29]]]]]],[[[48,[30]]],[[14,[[38,[29]]]]]],[[[35,[30]]],[[14,[[38,[29]]]]]],[[[58,[19]]],[[14,[38]]]],[[[46,[30]]],[[14,[[38,[29]]]]]],[[[56,[30]]],[[14,[[38,[29]]]]]],[[[35,[30]]],[[14,[[54,[29]]]]]],[[[55,[30]]],[[14,[[54,[29]]]]]],[[[42,[19]]],[[14,[[54,[19]]]]]],[[[56,[30]]],[[14,[[54,[29]]]]]],[[],14],[[[54,[30]]],[[14,[[54,[29]]]]]],[[[42,[30]]],[[14,[[54,[29]]]]]],[[[58,[19]]],[[14,[54]]]],[[[44,[19]]],[[14,[[54,[19]]]]]],[[[44,[30]]],[[14,[[54,[29]]]]]],[[[46,[19]]],[[14,[[35,[19]]]]]],[[[42,[30]]],[[14,[[35,[29]]]]]],[[[55,[30]]],[[14,[[35,[29]]]]]],[[[55,[19]]],[[14,[[35,[19]]]]]],[[[42,[19]]],[[14,[[35,[19]]]]]],[[[48,[19]]],[[14,[[35,[19]]]]]],[[[40,[30]]],[[14,[[35,[29]]]]]],[[[35,[30]]],[[14,[[35,[29]]]]]],[[[44,[19]]],[[14,[[35,[19]]]]]],[[[54,[19]]],[[14,[[35,[19]]]]]],[[[54,[30]]],[[14,[[35,[29]]]]]],[[[38,[30]]],[[14,[[35,[29]]]]]],[[[44,[30]]],[[14,[[35,[29]]]]]],[[[38,[19]]],[[14,[[35,[19]]]]]],[[[46,[30]]],[[14,[[35,[29]]]]]],[[],14],[[[56,[30]]],[[14,[[35,[29]]]]]],[[[40,[19]]],[[14,[[35,[19]]]]]],[[[58,[19]]],[[14,[35]]]],[[[48,[30]]],[[14,[[35,[29]]]]]],[[[46,[30]]],[[14,[[48,[29]]]]]],[[[56,[30]]],[[14,[[48,[29]]]]]],[[[48,[30]]],[[14,[[48,[29]]]]]],[[[38,[30]]],[[14,[[48,[29]]]]]],[[[46,[19]]],[[14,[[48,[19]]]]]],[[[40,[30]]],[[14,[[48,[29]]]]]],[[],14],[[[58,[19]]],[[14,[48]]]],[[[35,[30]]],[[14,[[48,[29]]]]]],[[[44,[30]]],[[14,[[44,[29]]]]]],[[[58,[19]]],[[14,[44]]]],[[[54,[30]]],[[14,[[44,[29]]]]]],[[[42,[30]]],[[14,[[44,[29]]]]]],[[[42,[19]]],[[14,[[44,[19]]]]]],[[[55,[30]]],[[14,[[44,[29]]]]]],[[],14],[[[56,[30]]],[[14,[[44,[29]]]]]],[[[35,[30]]],[[14,[[44,[29]]]]]],[[[48,[19]]],[[14,[[40,[19]]]]]],[[],14],[[[38,[19]]],[[14,[[40,[19]]]]]],[[[56,[30]]],[[14,[[40,[29]]]]]],[[[48,[30]]],[[14,[[40,[29]]]]]],[[[58,[19]]],[[14,[40]]]],[[[38,[30]]],[[14,[[40,[29]]]]]],[[[46,[30]]],[[14,[[40,[29]]]]]],[[[35,[30]]],[[14,[[40,[29]]]]]],[[[40,[30]]],[[14,[[40,[29]]]]]],[[[46,[19]]],[[14,[[40,[19]]]]]],[[[42,[30]]],[[14,[[55,[29]]]]]],[[],14],[[[54,[30]]],[[14,[[55,[29]]]]]],[[[55,[30]]],[[14,[[55,[29]]]]]],[[[56,[30]]],[[14,[[55,[29]]]]]],[[[44,[30]]],[[14,[[55,[29]]]]]],[[[54,[19]]],[[14,[[55,[19]]]]]],[[[58,[19]]],[[14,[55]]]],[[[42,[19]]],[[14,[[55,[19]]]]]],[[[35,[30]]],[[14,[[55,[29]]]]]],[[[44,[19]]],[[14,[[55,[19]]]]]],[[[46,[19]]],[[14,[[56,[19]]]]]],[[[42,[30]]],[[14,[[56,[29]]]]]],[[[35,[30]]],[[14,[[56,[29]]]]]],[[[40,[30]]],[[14,[[56,[29]]]]]],[[[38,[19]]],[[14,[[56,[19]]]]]],[[[38,[30]]],[[14,[[56,[29]]]]]],[[[56,[30]]],[[14,[[56,[29]]]]]],[[[48,[30]]],[[14,[[56,[29]]]]]],[[[54,[30]]],[[14,[[56,[29]]]]]],[[[40,[19]]],[[14,[[56,[19]]]]]],[[[48,[19]]],[[14,[[56,[19]]]]]],[[[54,[19]]],[[14,[[56,[19]]]]]],[[[55,[19]]],[[14,[[56,[19]]]]]],[[[42,[19]]],[[14,[[56,[19]]]]]],[[],14],[[[35,[19]]],[[14,[[56,[19]]]]]],[[[44,[19]]],[[14,[[56,[19]]]]]],[[[58,[19]]],[[14,[56]]]],[[[46,[30]]],[[14,[[56,[29]]]]]],[[[44,[30]]],[[14,[[56,[29]]]]]],[[[55,[30]]],[[14,[[56,[29]]]]]],[[[37,[30]]],[[14,[[45,[29]]]]]],[[[34,[30]]],[[14,[[45,[29]]]]]],[[[58,[19]]],[[14,[45]]]],[[[45,[30]]],[[14,[[45,[29]]]]]],[[],14],[[[34,[30]]],[[14,[[41,[29]]]]]],[[[41,[30]]],[[14,[[41,[29]]]]]],[[[58,[19]]],[[14,[41]]]],[[],14],[[[57,[30]]],[[14,[[41,[29]]]]]],[[],14],[[[45,[19]]],[[14,[[37,[19]]]]]],[[[45,[30]]],[[14,[[37,[29]]]]]],[[[58,[19]]],[[14,[37]]]],[[[37,[30]]],[[14,[[37,[29]]]]]],[[[34,[30]]],[[14,[[37,[29]]]]]],[[[57,[30]]],[[14,[[57,[29]]]]]],[[[34,[30]]],[[14,[[57,[29]]]]]],[[[58,[19]]],[[14,[57]]]],[[],14],[[[41,[30]]],[[14,[[57,[29]]]]]],[[[41,[19]]],[[14,[[57,[19]]]]]],[[],14],[[[57,[30]]],[[14,[[34,[29]]]]]],[[[37,[30]]],[[14,[[34,[29]]]]]],[[[41,[19]]],[[14,[[34,[19]]]]]],[[[45,[19]]],[[14,[[34,[19]]]]]],[[[58,[19]]],[[14,[34]]]],[[[41,[30]]],[[14,[[34,[29]]]]]],[[[37,[19]]],[[14,[[34,[19]]]]]],[[[45,[30]]],[[14,[[34,[29]]]]]],[[[34,[30]]],[[14,[[34,[29]]]]]],[[[57,[19]]],[[14,[[34,[19]]]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[]],[[]],[[[18,[61,1,62]]],[[14,[62,7]]]],[[[18,[10,10,[0,[10,1]],[0,[10,62]]]],11],12],[[]],[[[18,[32,32,[0,[32,1]],[0,[32,62]]]]]],[[]],[[[18,[1,62]]],[[18,[16,1,62]]]],[[[18,[1,62]]],[[18,[63,1,62]]]],[[[18,[16,61,1,62]]],[[14,[9,7]]]],[62,[[18,[16,17,1,62]]]],0,[[[18,[63,61,1,62]]],[[14,[9,7]]]],[[[18,[61,1,62]]],[[14,[62,7]]]],[[[18,[17,1,62]]],[[14,[[18,[61,1,62]],7]]]],[[],14],[[],14],[[],15],[[[18,[63,61,1,62]]],[[14,[[18,[63,61,1,62]],7]]]],[[[18,[16,61,1,62]]],[[14,[[18,[16,17,1,62]],7]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,11],12],[[17,11],12],[[61,11],12],[[63,11],12],[[16,11],12],[[]],[[]],[[]],[[]],[[]],[64],[17],[61],[63],[16],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15]],"p":[[8,"Clock"],[3,"Instant"],[4,"Option"],[3,"Fraction"],[3,"Generic"],[4,"Ordering"],[4,"TimeError"],[4,"ConversionError"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Result"],[3,"TypeId"],[3,"OneShot"],[3,"Armed"],[3,"Timer"],[8,"TimeInt"],[3,"Hours"],[3,"Minutes"],[3,"Seconds"],[3,"Milliseconds"],[3,"Microseconds"],[3,"Nanoseconds"],[8,"Clone"],[8,"Ord"],[8,"Default"],[15,"u32"],[15,"u64"],[3,"Duration"],[8,"Hash"],[3,"String"],[3,"Baud"],[3,"BytesPerSecond"],[3,"Hertz"],[3,"Kibibaud"],[3,"KibibytesPerSecond"],[3,"Kibihertz"],[3,"KibibitsPerSecond"],[3,"Megabaud"],[3,"MegabytesPerSecond"],[3,"Megahertz"],[3,"MegabitsPerSecond"],[3,"Mebibaud"],[3,"MebibytesPerSecond"],[3,"Mebihertz"],[3,"MebibitsPerSecond"],[3,"Kilohertz"],[3,"Decihertz"],[3,"Centihertz"],[3,"Millihertz"],[3,"Microhertz"],[3,"KilobytesPerSecond"],[3,"KilobitsPerSecond"],[3,"BitsPerSecond"],[3,"Kilobaud"],[3,"Generic"],[8,"PartialEq"],[8,"PartialOrd"],[3,"Running"],[8,"Duration"],[3,"Periodic"],[3,"None"],[8,"Extensions"],[8,"FixedPoint"],[8,"Extensions"],[8,"Rate"]]},\
"float_cmp":{"doc":"float-cmp","t":[8,8,8,3,3,16,16,16,8,10,14,11,11,10,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,10,11,11,12,12,11,11],"n":["ApproxEq","ApproxEqRatio","ApproxEqUlps","F32Margin","F64Margin","Flt","Margin","U","Ulps","approx_eq","approx_eq","approx_eq_ratio","approx_eq_ratio","approx_eq_ulps","approx_ne","approx_ne","approx_ne_ratio","approx_ne_ratio","approx_ne_ulps","approx_ne_ulps","assert_approx_eq","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","epsilon","epsilon","epsilon","epsilon","fmt","fmt","from","from","from","from","into","into","next","prev","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulps","ulps","ulps","ulps","ulps","zero","zero"],"q":["float_cmp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A trait for approximate equality comparisons.","ApproxEqRatio is a trait for approximate equality …","ApproxEqUlps is a trait for approximate equality …","This type defines a margin within two <code>f32</code> values might be …","This type defines a margin within two <code>f64</code> values might be …","","This type type defines a margin within which two values …","","","This method tests that the <code>self</code> and <code>other</code> values are equal …","","This method tests if <code>self</code> and <code>other</code> are nearly equal by …","This method tests if <code>self</code> and <code>other</code> are nearly equal by …","This method tests for <code>self</code> and <code>other</code> values to be …","This method tests that the <code>self</code> and <code>other</code> values are not …","This method tests that the <code>self</code> and <code>other</code> values are not …","This method tests if <code>self</code> and <code>other</code> are not nearly equal …","This method tests if <code>self</code> and <code>other</code> are not nearly equal …","This method tests for <code>self</code> and <code>other</code> values to be not …","This method tests for <code>self</code> and <code>other</code> values to be not …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The next representable number above this one","The previous representable number below this one","","","","","","","","","The number of representable values or ULPs (Units of Least …","","","","","",""],"i":[0,0,0,0,0,13,14,15,0,14,0,16,16,13,14,14,16,16,13,13,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,4,3,4,15,15,3,4,3,4,3,4,3,4,15,3,4,3,4,3,4],"f":[0,0,0,0,0,0,0,0,0,[1,2],0,[[],2],[[],2],[[],2],[1,2],[1,2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[[],3],[[],4],[[3,5],3],[[4,6],4],0,0,[[3,7],8],[[4,7],8],[[],3],[[]],[[]],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[]],[[3,11],3],[[4,12],4],0,0,[[],3],[[],4]],"p":[[8,"Into"],[15,"bool"],[3,"F32Margin"],[3,"F64Margin"],[15,"f32"],[15,"f64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[15,"i32"],[15,"i64"],[8,"ApproxEqUlps"],[8,"ApproxEq"],[8,"Ulps"],[8,"ApproxEqRatio"]]},\
"genio":{"doc":"This crate provides more generic alternatives to <code>std::io::*</code>…","t":[16,8,8,16,8,16,8,8,16,11,0,11,11,0,0,10,10,10,10,11,11,10,0,11,0,10,11,8,8,16,16,8,8,8,16,8,3,10,11,11,10,10,10,11,11,11,10,11,10,11,10,10,11,10,11,11,11,11,11,11,11,4,13,3,4,13,13,4,13,4,13,8,4,16,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,8,4,11,11,11,11,10,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ExtendError","ExtendFromReader","ExtendFromReaderSlow","FlushError","Read","ReadError","ReadOverwrite","Write","WriteError","available_bytes","bufio","by_ref","chain","error","ext","extend_from_reader","extend_from_reader_slow","flush","read","read_exact","read_to_end","size_hint","std_impls","uses_size_hint","util","write","write_all","AsRawBuf","BufRead","BufReadError","BufReadError","BufReadProgress","BufReadRequire","BufWrite","BufWriteError","BufWriteRequire","BufWriter","as_raw_buf","borrow","borrow_mut","consume","fill_buf","fill_progress","flush","from","into","len","new","request_buffer","request_buffer","require_buffer","require_bytes","size_hint","submit_buffer","submit_buffer","try_from","try_into","type_id","uses_size_hint","write","write_byte","BufError","BufferErr","BufferOverflow","ChainError","End","ExtendErr","ExtendError","First","IOError","Interrupted","IntoIntrError","IntrError","NonIntr","Other","Other","OtherErr","Read","ReadErr","ReadExactError","Second","UnexpectedEnd","Write","as_ref","as_ref","as_ref_mut","as_ref_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_intr_error","into_intr_error","merge","merge","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Bytes","End","ReadExt","ReadResult","borrow","borrow_mut","from","into","read_ext","require_bytes","try_from","try_into","type_id","GenioIo","GenioRead","GenioWrite","StdIo","StdRead","StdWrite","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","flush","flush","flush","flush","from","from","from","from","from","from","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","new","new","new","new","new","new","read","read","read","read","read_ext","read_ext","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write","write","Bytes","Chain","Empty","Repeat","RepeatBytes","Restarting","Sink","WriteTrunc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","copy","flush","flush","flush","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_inner","into_iter","new","new","new","new","next","read","read","read","read","read","read_ext","read_ext","read_ext","read_ext","read_ext","remaining_bytes","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uses_size_hint","uses_size_hint","write","write","write","write_all"],"q":["genio","","","","","","","","","","","","","","","","","","","","","","","","","","","genio::bufio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","genio::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","genio::ext","","","","","","","","","","","","","genio::std_impls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","genio::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This type is returned when extending fails. For example, …","This trait is similar to slow one. The difference is that …","Some types can be extended by reading from reader. The …","Value of this type is returned when <code>flush()</code> fails. In case …","The Read trait allows for reading bytes from a source.","Value of this type is returned when <code>read()</code> fails.","This marker trait declares that the Read trait is …","A trait for objects which are byte-oriented sinks.","Value of this type is returned when <code>write()</code> fails.","Hints whether there are at least <code>at_least</code> bytes available.","Contains traits and impls for buffering.","Creates a “by reference” adaptor for this instance of …","Chains another reader after <code>self</code>. When self ends (returns …","Error types and various operations on them.","This module contains various extension traits.","This method performs extending from reader - that means …","This method performs extending from reader - that means …","Flush this output stream, ensuring that all intermediately …","Pull some bytes from this source into the specified …","Read the exact number of bytes required to fill <code>buf</code>.","Reads all bytes into any type that can be extended by a …","Hints the writer how much bytes will be written after call …","This module contains glue <code>for std::io</code> and other <code>std</code> types.","Reports to the caller whether size hint is actually used. …","This module contains various generic utilities related to …","Write a buffer into this object, returning how many bytes …","Attempts to write an entire buffer into this <code>Write</code>.","Represents type that can serve as (possibly uninitialized) …","A <code>BufRead</code> is a type of <code>Read</code>er which has an internal …","Error that occurs in buffer itself. Most often if buffer …","Error that occurs in buffer itself. Most often if buffer …","When reading from reader, sometimes it’s beneficial to …","When reading from reader, sometimes it’s beneficial to …","When writing, it might be better to serialize directly …","Indicates error in buffer. Most often caused by size being …","This trait allows requiring buffer of specified size.","Wrapper that provides buffering for a writer.","Returns a pointer to the buffer. It may point to …","","","Tells this buffer that <code>amount</code> bytes have been consumed …","Fills the internal buffer of this object, returning the …","Fills the internal buffer guaranteeing that successive …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the length of the buffer.","Creates buffered writer.","Requests buffer for writing. The buffer is represented as …","","Require buffer with minimum <code>size</code> bytes. It is an error to …","Fill the buffer until at least <code>amount</code> bytes are available.","","Tells the buf writer that <code>size</code> bytes were written into …","","","","","","","Writes single byte. Since this is buffered, the operation …","Error that might occur when interacting with buf reader.","Buffer itself failed.","Error indicating that provided buffer was too small","Error returned when chained readers fail. It allows …","The underlying stream reached the end.","The type being extended failed.","Error that might occur when doing operation on …","First reader failed.","Specifies an error that happened during I/O operation. …","An operation was interrupted. This variant means that …","Trait for custom error types that can also represent …","This error type indicates that operation might fail in …","Type representing other error (non-interrupt).","Low-level error happened.","The error wasn’t interruption.","The underlying stream failed.","Read operation failed.","Reader failed","Error that might occur when reading exact amount of bytes.","Second reader failed.","Reader reached end unexpectedly.","Write operation failed.","Get <code>IOError</code> containing references to errors.","Get <code>ChainError</code> containing references to errors.","Get <code>IOError</code> containing mutable references to errors.","Get ChainError containing mutable references to errors.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs the conversion.","","Merges the variants into common type.","If the two errors can be converted to same type, they can …","","","","","","","","","","","","","","","","","","","","","","","Some bytes were read. The slice will always contain at …","No bytes available (End reached).","After reading to buffer, it’s often useful to adjust the …","Result of successful read operation.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Reads from the reader and converts the result.","Helps mapping <code>ReadResult</code> to <code>ReadExactError</code>","","","","Wrapper providing <code>genio::Read + genio::Write</code> traits for …","Wrapper providing <code>genio::Read</code> trait for <code>std::io::Read</code> …","Wrapper providing <code>genio::Write</code> trait for <code>std::io::Write</code> …","Wrapper providing <code>std::io::Read + std::io::Write</code> traits …","Wrapper providing <code>std::io::Read</code> trait for <code>genio::Read</code> …","Wrapper providing <code>std::io::Write</code> trait for <code>genio::Write</code> …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps inner reader.","Unwraps inner writer.","Unwraps inner io.","Unwraps <code>std</code> reader <code>genio</code> reader.","Unwraps <code>std</code> writer into <code>genio</code> writer.","Unwraps <code>std</code> reader+writer into <code>genio</code> reader+writer.","Wraps <code>genio</code> reader into <code>std</code> reader.","Wraps <code>genio</code> writer into <code>std</code> writer.","Wraps <code>genio</code> reader+writer into <code>std</code> reader+writer.","Wraps <code>std</code> readerinto <code>genio</code> reader.","Wraps <code>std</code> writer into <code>genio</code> writer.","Wraps <code>std</code> reader+writer into <code>genio</code> reader+writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents reader as iterator over bytes.","Chains two readers.","This reader is empty - always returns 0 from read method.","Reader that infinitely repeats single byte.","Reader repeating a sequence of bytes infinitely.","Restarts all interrupted operations.","Silently drops everything that is written to it.","Truncates writing so that at most <code>n</code> bytes in total are …","","","","","","","","","","","","","","","","","Copies the entire contents of a reader into a writer.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts to lower-level reader.","","Creates chain of readers.","Initializes truncate.","Creates restarting IO.","Creates the iterator.","","","","","","","","","","","","Returns how many bytes remain until they will be truncated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[44,0,0,9,0,3,0,0,9,3,0,3,3,0,0,45,44,9,3,3,3,9,0,9,0,9,9,0,0,46,47,0,0,0,48,0,0,10,11,11,49,49,46,11,11,11,10,11,50,11,48,47,11,50,11,11,11,11,11,11,50,0,8,0,0,8,5,0,15,0,19,0,0,51,7,19,8,14,5,0,15,7,14,14,15,14,15,14,7,15,19,8,5,20,14,7,15,19,8,5,20,14,7,15,19,8,5,20,20,14,7,7,7,15,19,19,8,5,20,14,7,15,19,8,5,20,51,19,14,15,20,14,7,15,19,8,5,20,14,7,15,19,8,5,20,14,7,15,19,8,5,20,24,24,0,0,24,24,24,24,52,24,24,24,24,0,0,0,0,0,0,31,25,27,33,29,30,31,25,27,33,29,30,25,27,29,30,31,25,27,33,29,30,31,25,27,33,29,30,31,25,27,33,29,30,31,25,27,33,29,30,31,27,33,30,33,30,29,30,31,25,27,33,29,30,31,25,27,33,29,30,31,25,27,33,29,30,25,27,29,30,0,0,0,0,0,0,0,0,4,35,36,37,40,41,43,38,4,35,36,37,40,41,43,38,0,35,36,37,4,35,36,37,40,41,43,38,4,35,36,37,40,41,43,38,36,38,4,35,36,38,38,4,36,40,41,43,4,36,40,41,43,35,35,36,37,4,35,36,37,40,41,43,38,4,35,36,37,40,41,43,38,4,35,36,37,40,41,43,38,35,36,35,36,37,35],"f":[0,0,0,0,0,0,0,0,0,[1,2],0,[[]],[3,[[4,[3]]]],0,0,[[],[[6,[1,5]]]],[[],[[6,[1,5]]]],[[],6],[[],[[6,[1]]]],[[],[[6,[7]]]],[[],[[6,[1,5]]]],[1],0,[[],2],0,[[],[[6,[1]]]],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[1],[[],6],[[],[[6,[8]]]],[[[11,[9,10]]],6],[[]],[[]],[[],1],[[9,10],[[11,[9,10]]]],[[],6],[[[11,[9,10]]],6],[1,6],[1,[[6,[8]]]],[[[11,[9,10]],1]],[1],[[[11,[9,10]],1]],[[],6],[[],6],[[],12],[[[11,[9,10]]],2],[[[11,[9,10]]],[[6,[1]]]],[13,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,14],[15,15],[14,14],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[16,16]],17],18],[[[7,[16]],17],18],[[[15,[16,16]],17],18],[[[19,[16]],17],18],[[[8,[16,16]],17],18],[[[5,[16,16]],17],18],[[20,17],18],[[20,17],18],[[]],[[]],[21],[[],7],[[]],[22,19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[19,19],[14],[15],[[],23],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,[[]],[[]],[[]],[[]],[[],[[6,[24]]]],[24,[[6,[7]]]],[[],6],[[],6],[[],12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[9]]],[[6,[26]]]],[[[27,[9]]],[[6,[26]]]],[[[29,[28]]],[[6,[26]]]],[[[30,[28]]],[[6,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[3]]],3],[[[25,[9]]],9],[[[27,[[0,[3,9]]]]],[[0,[3,9]]]],[[[33,[32]]],32],[[[29,[28]]],28],[[[30,[[0,[32,28]]]]],[[0,[32,28]]]],[3,[[31,[3]]]],[9,[[25,[9]]]],[[[0,[3,9]]],[[27,[[0,[3,9]]]]]],[32,[[33,[32]]]],[28,[[29,[28]]]],[[[0,[32,28]]],[[30,[[0,[32,28]]]]]],[[[31,[3]]],[[6,[1,26]]]],[[[27,[3]]],[[6,[1,26]]]],[[[33,[32]]],[[6,[1,26]]]],[[[30,[32]]],[[6,[1,26]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[[29,[28]],1]],[[[30,[28]],1]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[25,[9]]],[[6,[1,26]]]],[[[27,[9]]],[[6,[1,26]]]],[[[29,[28]]],[[6,[1,26]]]],[[[30,[28]]],[[6,[1,26]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[34,14]]]],[[[35,[9]]],6],[36,6],[37,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36],[[]],[[3,3],[[4,[3,3]]]],[[9,34],[[35,[9]]]],[[],36],[3,[[38,[3]]]],[[[38,[3]]],39],[[[4,[3,3]]],[[6,[1]]]],[36,[[6,[1]]]],[40,[[6,[1]]]],[41,[[6,[1]]]],[[[43,[42]]],[[6,[1]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[],[[6,[24]]]],[[[35,[9]]],34],[[[35,[9]],1]],[[36,1]],[[37,1]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[35,[9]]],2],[36,2],[[[35,[9]]],[[6,[1]]]],[36,[[6,[1]]]],[37,[[6,[1]]]],[[[35,[9]]],6]],"p":[[15,"usize"],[15,"bool"],[8,"Read"],[3,"Chain"],[4,"ExtendError"],[4,"Result"],[4,"ReadExactError"],[4,"BufError"],[8,"Write"],[8,"AsRawBuf"],[3,"BufWriter"],[3,"TypeId"],[15,"u8"],[4,"IOError"],[4,"ChainError"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"IntrError"],[3,"BufferOverflow"],[15,"never"],[4,"Void"],[3,"String"],[4,"ReadResult"],[3,"StdWrite"],[3,"Error"],[3,"StdIo"],[8,"Write"],[3,"GenioWrite"],[3,"GenioIo"],[3,"StdRead"],[8,"Read"],[3,"GenioRead"],[15,"u64"],[3,"WriteTrunc"],[3,"Restarting"],[3,"Sink"],[3,"Bytes"],[4,"Option"],[3,"Empty"],[3,"Repeat"],[8,"AsRef"],[3,"RepeatBytes"],[8,"ExtendFromReaderSlow"],[8,"ExtendFromReader"],[8,"BufReadProgress"],[8,"BufReadRequire"],[8,"BufWriteRequire"],[8,"BufRead"],[8,"BufWrite"],[8,"IntoIntrError"],[8,"ReadExt"]]},\
"gif":{"doc":"GIF en- and decoding library Build Status","t":[13,3,13,13,13,4,13,13,4,13,13,13,13,13,3,4,3,4,3,4,3,4,4,13,4,4,13,13,13,3,13,13,13,13,13,13,13,13,3,18,13,13,13,4,13,13,13,3,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12],"n":["Any","AnyExtension","Application","Background","BackgroundColor","Block","BlockFinished","BlockStart","ColorOutput","Comment","Control","Control","Data","DataEnd","DecodeOptions","Decoded","Decoder","DecodingError","DecodingFormatError","DisposalMethod","Encoder","EncodingError","Extension","Extension","ExtensionData","Extensions","Finite","Format","Format","Frame","Frame","GlobalPalette","Image","Indexed","Infinite","Io","Io","Keep","MemoryLimit","NONE","Nothing","Previous","RGBA","Repeat","Repetitions","Save","Skip","StreamingDecoder","SubBlockFinished","Text","Trailer","Trailer","V87a","V89a","Version","allow_unknown_blocks","bg_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer_size","build","check_frame_consistency","check_lzw_end_code","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_frame","current_frame_mut","default","delay","dispose","drop","eq","eq","eq","eq","eq","eq","eq","fill_buffer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_indexed_pixels","from_palette_pixels","from_rgb","from_rgb_speed","from_rgba","from_rgba_speed","from_u8","from_u8","from_u8","get_mut","get_ref","global_palette","hash","hash","height","height","height","interlaced","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_known","last_ext","left","line_length","needs_user_input","new","new","new","new","new_control_ext","next_frame_info","palette","palette","provide","provide","provide","read_info","read_into_buffer","read_next_frame","set_color_output","set_extensions","set_memory_limit","set_repeat","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","top","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","version","width","width","width","write_extension","write_frame","write_global_palette","write_raw_extension","delay","flags","trns"],"q":["gifgif::ExtensionData","",""],"d":["StreamingDecoder is not required to take any action.","A newtype wrapper around an arbitrary extension ID.","Application extension.","Restore to background color.","Index of the background color in the global palette.","Known GIF block labels.","Decoded the last (or only) sub-block of a block.","The start of a block.","StreamingDecoder configuration parameters Output mode for …","Comment extension.","Control extension. Use <code>ExtensionData::new_control_ext</code> to …","Control extension.","Decoded some data of the current frame.","No more data available the current frame.","Options for opening a GIF decoder.","Indicates whether a certain object has been decoded","GIF decoder","Decoding error.","An error returned in the case of the image not being …","Disposal method","GIF encoder.","Encoding error.","Known GIF extension labels.","Extension block.","Extension data.","StreamingDecoder configuration parameters Configures how …","Finite number of repetitions","Returned if the image is found to be malformed.","Returned if the to image is not encodable as a gif.","A GIF frame","Decoded all information of the next frame.","Global palette.","Image block.","The decoder returns the raw indexed data.","Infinite number of repetitions","Wraps <code>std::io::Error</code>.","Wraps <code>std::io::Error</code>.","Do not dispose.","StreamingDecoder configuration parameters Memory limit in …","Enforce no memory limit.","Decoded nothing.","Restore to previous.","The decoder expands the image data to 32bit RGBA. This …","Number of repetitions","Sets the number of repetitions","Saves all extention data","Skips the data of unknown extensions and extracts the data …","GIF decoder which supports streaming","Decoded a sub-block. More sub-block are available.","Plain Text extension.","Image trailer.","Decoded the image trailer.","Version 87a, from May 1987.","Version 89a, from July 1989.","One version number of the GIF standard.","Configure if unknown blocks are allowed to be decoded.","Index of the background color in the global palette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffer containing the image data. Only indices unless …","Output buffer size","Return a builder that allows configuring limits etc.","Configure if frames must be within the screen descriptor.","Configure if LZW encoded blocks must end with a marker end …","","","","","","","","","","","","","","","","","","","","","Current frame info as a ref.","Current frame info as a mutable ref.","","Frame delay in units of 10 ms.","Disposal method.","","","","","","","","","Reads data of the current frame into a pre-allocated …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a frame from indexed pixels in the global palette.","Creates a frame from a palette and indexed pixels.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGB format.","Creates a frame from pixels in RGBA format.","Creates a frame from pixels in RGBA format.","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Converts <code>u8</code> to <code>Option&lt;Self&gt;</code>","Converts <code>u8</code> to a <code>Extension</code> if it is known.","Gets a mutable reference to the writer instance used by …","Gets a reference to the writer instance used by this …","The global color palette","","","Height of the image","Height of the image","Height of the frame.","True if the image is interlaced.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns writer instance used by this encoder","Decode the label as a known extension.","Returns the data of the last extension that has been …","Offset from the left border of the canvas.","Line length of the current frame","True if the frame needs user input to be displayed.","Creates a new streaming decoder","Create a new decoder with default options.","Creates a new encoder.","Creates a new decoder builder","Constructor for control extension data.","Returns the next frame info","Returns the color palette relevant for the current (next) …","Frame local color palette if available.","","","","Reads the logical screen descriptor including the global …","Reads the data of the current frame into a pre-allocated …","Reads the next frame from the image.","Configure how color data is decoded.","Configure whether extensions are saved or skipped.","Configure a memory limit for decoding.","Write an extension block that signals a repeat behaviour.","","","","","","","","","","","","","","","","","Offset from the top border of the canvas.","Transparent index (if available).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the internal state of the decoder. ","The version number of the GIF standard used in this image.","Width of the image","Width of the image","Width of the frame.","Writes an extension to the image.","Writes a frame to the image.","Writes the global color palette.","Writes a raw extension to the image.","Frame delay.","Flags.","Transparent index."],"i":[6,0,9,6,24,0,24,24,0,9,31,9,24,24,0,0,0,0,0,0,0,0,0,7,0,0,14,19,25,0,24,24,7,12,14,19,25,6,0,13,24,6,12,0,31,18,18,0,24,9,7,24,11,11,0,1,3,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,10,3,3,1,1,6,7,8,9,10,11,12,13,1,14,6,7,8,9,10,11,12,13,1,14,15,15,10,10,10,17,6,7,8,9,18,11,12,3,6,7,8,9,10,23,23,19,19,18,24,11,12,13,1,25,25,14,15,3,31,17,6,7,8,8,9,10,23,19,19,19,18,24,11,12,13,1,25,25,14,10,10,10,10,10,10,6,7,9,17,17,3,8,11,15,3,10,10,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,17,8,15,10,3,10,15,3,17,1,31,3,3,10,23,19,25,1,3,3,1,15,1,17,23,19,25,6,7,8,9,10,11,12,13,1,14,23,19,25,10,10,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,15,3,31,17,6,7,8,9,10,23,19,18,24,11,12,13,1,25,14,15,15,15,3,10,17,17,17,17,37,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[3,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,4],[[],1],[[1,2]],[[1,2]],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[1,1],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,10],[15,10],[[],10],0,0,[[[17,[16]]]],[[6,6],2],[[7,7],2],[[8,8],2],[[9,9],2],[[18,18],2],[[11,11],2],[[12,12],2],[3,[[20,[2,19]]]],[[6,21],22],[[7,21],22],[[8,21],22],[[9,21],22],[[10,21],22],[[23,21],22],[[23,21],22],[[19,21],22],[[19,21],22],[[18,21],22],[[24,21],22],[[11,21],22],[[12,21],22],[[13,21],22],[[1,21],22],[[25,21],22],[[25,21],22],[[14,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[9,8],[[]],[[]],[[]],[[]],[[]],[23,19],[26,19],[[]],[[]],[[]],[[]],[[]],[[]],[26,25],[[]],[[]],[[27,27,[5,[28]]],10],[[27,27,[5,[28]]],10],[[27,27],10],[[27,27,29],10],[[27,27],10],[[27,27,29],10],[28,[[5,[6]]]],[28,[[5,[7]]]],[28,[[5,[9]]]],[[[17,[16]]]],[[[17,[16]]]],[3,5],[8],[11],[15,27],[3,27],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[16]]],[[30,[16]]]],[8,[[5,[9]]]],[15],0,[3,4],0,[[],15],[[],[[20,[3,19]]]],[[16,27,27],[[20,[[17,[16]],25]]]],[[],1],[[27,6,2,[5,[28]]],31],[3,[[20,[[5,[10]],19]]]],[3,[[20,[19]]]],0,[32],[32],[32],[[1,33],[[20,[[3,[33]],19]]]],[3,[[20,[19]]]],[3,[[20,[[5,[10]],19]]]],[[1,12]],[[15,18]],[[1,13]],[[[17,[16]],14],[[20,[25]]]],[23,[[5,[34]]]],[19,[[5,[34]]]],[25,[[5,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[15,[[20,[19]]]],[15,11],[15,27],[3,27],0,[[[17,[16]],31],[[20,[25]]]],[[[17,[16]],10],[[20,[25]]]],[[[17,[16]]],[[20,[[17,[16]],25]]]],[[[17,[16]],8],30],0,0,0],"p":[[3,"DecodeOptions"],[15,"bool"],[3,"Decoder"],[15,"usize"],[4,"Option"],[4,"DisposalMethod"],[4,"Block"],[3,"AnyExtension"],[4,"Extension"],[3,"Frame"],[4,"Version"],[4,"ColorOutput"],[3,"MemoryLimit"],[4,"Repeat"],[3,"StreamingDecoder"],[8,"Write"],[3,"Encoder"],[4,"Extensions"],[4,"DecodingError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"DecodingFormatError"],[4,"Decoded"],[4,"EncodingError"],[3,"Error"],[15,"u16"],[15,"u8"],[15,"i32"],[6,"Result"],[4,"ExtensionData"],[3,"Demand"],[8,"Read"],[8,"Error"],[3,"String"],[3,"TypeId"],[13,"Control"]]},\
"hash32":{"doc":"32-bit hashing machinery","t":[8,3,3,8,8,16,3,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["BuildHasher","BuildHasherDefault","FnvHasher","Hash","Hasher","Hasher","Murmur3Hasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_hasher","build_hasher","clone","clone_into","default","default","default","eq","finish","finish","finish","fmt","from","from","from","hash","hash_slice","into","into","into","new","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write"],"q":["hash32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["See <code>core::hash::BuildHasher</code> for details","See <code>core::hash::BuildHasherDefault</code> for details","32-bit Fowler-Noll-Vo hasher","See <code>core::hash::Hash</code> for details","See <code>core::hash::Hasher</code> for details","See <code>core::hash::BuildHasher::Hasher</code>","32-bit MurmurHash3 hasher","","","","","","","See <code>core::hash::BuildHasher.build_hasher</code>","","","","","","","","See <code>core::hash::Hasher.finish</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given <code>Hasher</code>.","Feeds a slice of this type into the given <code>Hasher</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>const</code> constructor","","","","","","","","","","","See <code>core::hash::Hasher.write</code>","",""],"i":[0,0,0,0,0,12,0,2,3,1,2,3,1,12,1,1,1,2,3,1,1,7,2,3,1,2,3,1,13,13,2,3,1,1,1,2,3,1,2,3,1,2,3,1,7,2,3],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,1],[[]],[[],2],[[],3],[[],1],[[1,1],4],[[],5],[2,5],[3,5],[[[1,[[0,[6,7]]]],8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[]],[2],[3]],"p":[[3,"BuildHasherDefault"],[3,"FnvHasher"],[3,"Murmur3Hasher"],[15,"bool"],[15,"u32"],[8,"Default"],[8,"Hasher"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"BuildHasher"],[8,"Hash"]]},\
"heapless":{"doc":"<code>static</code> friendly data structures that don’t require …","t":[2,2,3,4,6,6,3,3,3,3,13,3,3,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,4,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,3,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,16,8,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,16,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,8,3,3,3,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Arc","BinaryHeap","Deque","Entry","FnvIndexMap","FnvIndexSet","HistoryBuffer","IndexMap","IndexSet","LinearMap","Occupied","OccupiedEntry","OldestOrdered","String","Vacant","VacantEntry","Vec","as_mut","as_mut","as_mut_ptr","as_mut_slices","as_mut_str","as_mut_vec","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slices","as_str","back","back_mut","binary_heap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","capacity","capacity","capacity","clear","clear","clear","clear","clear","clear","clear","clear_with","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","contains_key","contains_key","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","difference","drop","drop","drop","drop","ends_with","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_slice","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_slice","from_str","front","front_mut","get","get","get","get_mut","get_mut","get_mut","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","insert","insert","insert","insert","insert","intersection","into","into","into","into","into","into","into","into","into","into","into","into_array","into_bytes","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_subset","is_superset","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","key","key","keys","keys","last","last","last_mut","len","len","len","len","len","mpmc","ne","ne","ne","new","new","new","new","new","new","new","new_with","next","oldest_ordered","partial_cmp","partial_cmp","pool","pop","pop","pop_back","pop_back_unchecked","pop_front","pop_front_unchecked","pop_unchecked","push","push","push_back","push_back_unchecked","push_front","push_front_unchecked","push_str","push_unchecked","recent","remove","remove","remove","remove","remove","remove_entry","resize","resize_default","retain","retain_mut","set_len","sorted_linked_list","spsc","starts_with","swap_remove","swap_remove","swap_remove_unchecked","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","values","values","values_mut","values_mut","write","write_char","write_str","write_str","BinaryHeap","Kind","Max","Min","PeekMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from","from","from","into","into","into","into","into_iter","into_vec","is_empty","iter","iter_mut","len","new","peek","peek_mut","pop","pop","pop_unchecked","push","push_unchecked","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","MpMcQueue","Q16","Q2","Q32","Q4","Q64","Q8","borrow","borrow_mut","default","dequeue","enqueue","from","into","new","try_from","try_into","type_id","Box","Init","Node","Pool","Uninit","alloc","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","deref","deref_mut","eq","fmt","fmt","free","from","from","from","from","from","grow","grow_exact","hash","init","into","into","into","into","into","new","partial_cmp","singleton","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Box","Data","Pool","alloc","arc","as_mut","as_ref","borrow","borrow_mut","cmp","deref","deref_mut","drop","eq","fmt","fmt","forget","freeze","from","grow","grow_exact","hash","init","into","partial_cmp","to_string","try_from","try_into","type_id","Arc","ArcInner","Data","Pool","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","drop","eq","fmt","fmt","from","from","hash","into","into","new","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FindMut","Iter","Kind","LinkedIndexU16","LinkedIndexU8","LinkedIndexUsize","Max","Min","Node","SortedLinkedList","SortedLinkedListIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref_mut","drop","drop","eq","eq","eq","find_mut","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","is_empty","is_full","iter","new_u16","new_u8","new_usize","next","partial_cmp","partial_cmp","partial_cmp","peek","pop","pop","pop_unchecked","push","push_unchecked","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Consumer","Iter","IterMut","Producer","Queue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clone","clone","clone_into","clone_into","default","dequeue","dequeue","dequeue_unchecked","dequeue_unchecked","drop","enqueue","enqueue","enqueue_unchecked","enqueue_unchecked","eq","fmt","from","from","from","from","from","hash","hash","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_full","iter","iter_mut","len","len","len","new","next","next","next_back","next_back","peek","peek","ready","ready","split","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["heapless","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::binary_heap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::mpmc","","","","","","","","","","","","","","","","","","heapless::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::pool::singleton","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::pool::singleton::arc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::sorted_linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","heapless::spsc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A fixed capacity double-ended queue.","A view into an entry in the map","A <code>heapless::IndexMap</code> using the default FNV hasher","A <code>heapless::IndexSet</code> using the default FNV hasher. A list …","A “history buffer”, similar to a write-only ring …","Fixed capacity <code>IndexMap</code>","Fixed capacity <code>IndexSet</code>.","A fixed capacity map / dictionary that performs lookups …","The entry corresponding to the key <code>K</code> exists in the map","An occupied entry which can be manipulated","An iterator on the underlying buffer ordered from oldest …","A fixed capacity <code>String</code>","The entry corresponding to the key <code>K</code> does not exist in the …","A view into an empty slot in the underlying map","A fixed capacity <code>Vec</code>","","","Returns a raw pointer to the vector’s buffer, which may …","Returns a pair of mutable slices which contain, in order, …","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","Returns a raw pointer to the vector’s buffer.","","","","","","Returns the array slice backing the buffer, without …","Extracts a slice containing the entire vector.","Returns a pair of slices which contain, in order, the …","Extracts a string slice containing the entire string.","Provides a reference to the back element, or None if the …","Provides a mutable reference to the back element, or None …","A priority queue implemented with a binary heap.","","","","","","","","","","","","","","","","","","","","","","","Returns the maximum number of elements the deque can hold.","Returns the capacity of the buffer, which is the length of …","Returns the number of elements the map can hold","Returns the number of elements the set can hold","Returns the number of elements that the map can hold","Returns the maximum number of elements the String can hold","Returns the maximum number of elements the vector can hold.","Clears the deque, removing all values.","Clears the buffer, replacing every element with the …","Remove all key-value pairs in the map, while preserving …","Clears the set, removing all values.","Clears the map, removing all key-value pairs","Truncates this <code>String</code>, removing all contents.","Clears the vector, removing all values.","Clears the buffer, replacing every element with the given …","","","","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns true if the map contains a value for the specified …","Returns true if the map contains a value for the specified …","","","","","","","","","","","","","Visits the values representing the difference, i.e. the …","","","","","Returns <code>true</code> if <code>needle</code> is a suffix of the Vec.","Returns an entry for the corresponding key","","","","","","","","","","","","","","","","","","","","","Extends the vec from an iterator.","Clones and writes all elements in a slice to the buffer.","Clones and appends all elements in a slice to the <code>Vec</code>.","Get the first key-value pair","Get the first value","Get the first key-value pair, with mutable access to the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Constructs a new vector with a fixed capacity of <code>N</code> and …","","Provides a reference to the front element, or None if the …","Provides a mutable reference to the front element, or None …","Gets a reference to the value associated with this entry","Returns a reference to the value corresponding to the key.","Returns a reference to the value corresponding to the key","Gets a mutable reference to the value associated with this …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value corresponding to …","","","","","","","","","Overwrites the underlying map’s value with this entry’…","Inserts this entry into to underlying map, yields a …","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts a key-value pair into the map.","Inserts an element at position <code>index</code> within the vector, …","Visits the values representing the intersection, i.e. the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the contents of the vector as an array of length <code>M</code> …","Converts a <code>String</code> into a byte vector.","","","","","","","","","","","","","Consumes this entry to yield to key associated with it","Consumes this entry and yields a reference to the …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns whether the deque is empty.","Returns true if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns true if the map contains no elements","Returns true if the vec is empty","Returns whether the deque is full (i.e. if …","Returns true if the vec is full","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Examples","Returns an iterator over the deque.","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the values of the set, in their …","An iterator visiting all key-value pairs in arbitrary …","Returns an iterator that allows modifying each value.","Return an iterator over the key-value pairs of the map, in …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key that this entity corresponds to","Get the key associated with this entry","Return an iterator over the keys of the map, in their order","An iterator visiting all keys in arbitrary order","Get the last key-value pair","Get the last value","Get the last key-value pair, with mutable access to the …","Returns the number of elements currently in the deque.","Returns the current fill level of the buffer.","Return the number of key-value pairs in the map.","Returns the number of elements in the set.","Returns the number of elements in this map","A fixed capacity Multiple-Producer Multiple-Consumer …","","","","Constructs a new, empty deque with a fixed capacity of <code>N</code>","Constructs a new history buffer.","Creates an empty <code>IndexMap</code>.","Creates an empty <code>IndexSet</code>","Creates an empty <code>LinearMap</code>","Constructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> …","Constructs a new, empty vector with a fixed capacity of <code>N</code>","Constructs a new history buffer, where every element is …","","Returns an iterator for iterating over the buffer from …","","","A heap-less, interrupt-safe, lock-free memory pool (*)","Removes the last character from the string buffer and …","Removes the last element from a vector and returns it, or …","Removes the item from the back of the deque and returns …","Removes an item from the back of the deque and returns it, …","Removes the item from the front of the deque and returns …","Removes an item from the front of the deque and returns …","Removes the last element from a vector and returns it","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the front of the deque","Appends an <code>item</code> to the front of the deque","Appends a given string slice onto the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Returns a reference to the most recently written value.","Removes this entry from the map and yields its value","Same as <code>swap_remove</code>","Removes a value from the set. Returns <code>true</code> if the value …","Removes a key from the map, returning the value at the key …","Removes and returns the element at position <code>index</code> within …","Removes this entry from the map and yields its …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","A fixed sorted priority linked list, similar to <code>BinaryHeap</code> …","Fixed capacity Single Producer Single Consumer (SPSC) queue","Returns <code>true</code> if <code>needle</code> is a prefix of the Vec.","Remove the key-value pair equivalent to <code>key</code> and return its …","Removes an element from the vector and returns it.","Removes an element from the vector and returns it.","Visits the values representing the symmetric difference, …","","","","","","","","","Shortens this <code>String</code> to the specified length.","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visits the values representing the union, i.e. all the …","Return an iterator over the values of the map, in their …","An iterator visiting all values in arbitrary order","Return an iterator over mutable references to the the …","An iterator visiting all values mutably in arbitrary order","Writes an element to the buffer, overwriting the oldest …","","","","A priority queue implemented with a binary heap.","The binary heap kind: min-heap or max-heap","Max-heap","Min-heap","Structure wrapping a mutable reference to the greatest …","","","","","","","","","Returns the capacity of the binary heap.","Drops all items from the binary heap.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and …","Checks if the binary heap is empty.","Returns an iterator visiting all values in the underlying …","Returns a mutable iterator visiting all values in the …","Returns the length of the binary heap.","Creates an empty BinaryHeap as a $K-heap.","Returns the <em>top</em> (greatest if max-heap, smallest if …","Returns a mutable reference to the greatest item in the …","Removes the <em>top</em> (greatest if max-heap, smallest if …","Removes the peeked value from the heap and returns it.","Removes the <em>top</em> (greatest if max-heap, smallest if …","Pushes an item onto the binary heap.","Pushes an item onto the binary heap without first checking …","","","","","","","","","","","","","","MPMC queue with a capacity for N elements N must be a …","MPMC queue with a capability for 16 elements.","MPMC queue with a capability for 2 elements.","MPMC queue with a capability for 32 elements.","MPMC queue with a capability for 4 elements.","MPMC queue with a capability for 64 elements.","MPMC queue with a capability for 8 elements.","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Adds an <code>item</code> to the end of the queue","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates an empty queue","","","","A memory block","Initialized type state","Unfortunate implementation detail required to use the …","A lock-free memory pool","Uninitialized type state","Claims a memory block from the pool","","","","","","","","","","","","","","","","","","","Returns a memory block to the pool","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty pool","","<code>Pool</code> as a global singleton","","","","","","","","","","","","","","","","","A memory block that belongs to the global memory pool, <code>POOL</code>","The type of data that can be allocated on this pool","A global singleton memory pool","Claims a memory block from the pool","Like <code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather …","","","","","","","","","","","","Forgets the contents of this memory block without running …","(DO NOT USE, SEE DEPRECATION) Freezes the contents of this …","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","","","","","","<code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather than …","Unfortunate implementation detail required to use the …","The data behind the Arc pointer","Pool of Arc pointers","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Arc</code>","","","","","","","","","","Comes from <code>SortedLinkedList::find_mut</code>.","Iterator for the linked list.","The linked list kind: min-list or max-list","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Marker for Max sorted <code>SortedLinkedList</code>.","Marker for Min sorted <code>SortedLinkedList</code>.","A node in the <code>SortedLinkedList</code>.","The linked list.","Trait for defining an index for the linked list, never …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find an element in the list that can be changed and …","This will resort the element into the correct position in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the linked list is empty.","Checks if the linked list is full.","Get an iterator over the sorted list.","Create a new linked list.","Create a new linked list.","Create a new linked list.","","","","","Peek at the first element.","Pops the first element in the list.","This will pop the element from the list.","Pop an element from the list without checking so the list …","Pushes an element to the linked list and sorts it into …","Pushes a value onto the list without checking if the list …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A queue “consumer”; it can dequeue items from the queue","An iterator over the items of a queue","A mutable iterator over the items of a queue","A queue “producer”; it can enqueue items into the queue","A statically allocated single producer single consumer …","","","","","","","","","","","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","","","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, without …","Returns the item in the front of the queue, without …","","Adds an <code>item</code> to the end of the queue","Adds an <code>item</code> to the end of the queue, returns back the <code>item</code>…","Adds an <code>item</code> to the end of the queue, without checking if …","Adds an <code>item</code> to the end of the queue, without checking if …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if the queue is empty","Returns <code>true</code> if the queue is full","Iterates from the front of the queue to the back","Returns an iterator that allows modifying each value","Returns the number of elements in the queue","Returns the number of elements in the queue","Returns the number of elements in the queue","Creates an empty queue with a fixed capacity of <code>N - 1</code>","","","","","Returns a reference to the item in the front of the queue …","Returns the item in the front of the queue without …","Returns if there are any items to dequeue. When this …","Returns if there is any space to enqueue a new item. When …","Splits a queue into producer and consumer endpoints","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,15,0,0,0,15,0,0,1,1,1,2,3,3,1,5,3,3,1,1,5,1,2,3,2,2,0,2,5,15,29,30,8,9,10,3,1,12,2,5,15,29,30,8,9,10,3,1,12,2,5,8,9,10,3,1,2,5,8,9,10,3,1,5,2,8,9,10,3,1,12,2,8,9,10,3,1,12,3,1,9,8,10,2,5,8,9,10,3,1,5,3,1,3,1,9,2,5,10,1,1,8,8,9,10,3,3,3,1,1,1,1,1,1,5,5,8,8,9,9,1,1,1,5,1,8,9,8,2,5,8,9,10,3,3,1,2,5,15,29,30,8,9,10,3,3,3,3,3,3,3,3,3,3,1,12,8,9,10,3,3,3,1,1,3,2,2,29,8,10,29,8,10,3,3,1,1,8,10,8,10,29,30,8,9,10,1,9,2,5,15,29,30,8,9,10,3,1,12,1,3,2,2,2,8,8,8,9,10,1,1,1,12,30,29,9,2,8,9,10,1,2,1,9,9,2,8,9,10,2,8,10,29,30,8,10,8,9,8,2,5,8,9,10,0,3,3,3,2,5,8,9,10,3,1,5,12,5,3,1,0,3,1,2,2,2,2,1,3,1,2,2,2,2,3,1,5,29,8,9,10,1,29,1,1,1,1,1,0,0,1,8,1,1,9,2,8,9,10,3,1,12,3,3,1,2,5,15,29,30,8,9,10,3,1,1,12,2,5,15,29,30,8,9,10,3,1,12,2,5,15,29,30,8,9,10,3,1,12,9,8,10,8,10,5,3,3,1,0,0,0,0,0,60,61,37,38,60,61,37,38,37,37,37,37,37,38,38,38,37,60,61,37,38,60,61,37,38,37,37,37,37,37,37,37,37,37,37,38,37,37,37,37,60,61,37,38,60,61,37,38,60,61,37,38,0,0,0,0,0,0,0,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,42,44,44,62,42,44,43,46,62,42,44,43,46,44,44,44,44,44,44,42,62,42,44,43,46,42,42,44,44,62,42,44,43,46,42,44,0,44,62,42,44,43,46,62,42,44,43,46,62,42,44,43,46,0,63,0,63,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,63,63,47,47,47,47,47,47,47,47,0,0,64,0,48,48,65,48,65,48,48,48,48,48,48,48,48,48,65,48,48,65,48,48,48,48,48,65,48,65,48,65,0,0,0,0,0,0,0,0,0,0,0,66,67,68,53,54,52,49,50,51,66,67,68,53,54,52,49,50,51,49,50,51,49,50,51,49,50,51,52,52,53,52,49,50,51,53,52,53,49,50,51,66,67,68,53,54,52,49,50,51,66,67,68,53,54,52,49,50,51,54,53,53,53,53,53,53,54,49,50,51,53,53,52,53,53,53,49,50,51,66,67,68,53,54,52,49,50,51,66,67,68,53,54,52,49,50,51,66,67,68,53,54,52,49,50,51,0,0,0,0,0,55,58,59,56,57,55,58,59,56,57,55,56,57,55,58,55,58,55,55,56,55,56,55,55,57,55,57,55,55,55,58,59,56,57,55,55,55,58,59,56,57,55,55,58,59,55,55,55,55,55,56,57,55,58,59,58,59,55,56,56,57,55,55,58,55,58,59,56,57,55,58,59,56,57,55,58,59,56,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1,1],[1],[2],[3,4],[3,1],[1],[5],[3,4],[3],[1,1],[1],[5],[1],[2],[3,4],[2,6],[2,6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,7],[5,7],[8,7],[9,7],[10,7],[3,7],[1,7],[2],[5],[8],[9],[10],[3],[1],[5],[2,2],[8,8],[9,9],[10,10],[3,3],[1,1],[[[12,[11]]],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,3],13],[[1,1],13],[9,14],[8,14],[10,14],[[],2],[[],5],[[],8],[[],9],[[],10],[[],3],[[],1],[5],[3,4],[1],[3,4],[1],0,[2],[5],[10],[1],[1,14],[8,15],[[8,8],14],[[9,9],14],[[10,10],14],[[3,3],14],[[3,4],14],[[3,4],14],[1,14],[[1,1],14],[1,14],[1,14],[1,14],[1,14],[5],[5],[8],[8],[9],[9],[1],[1],[1],[5],[1,16],[8,6],[9,6],[8,6],[[[2,[17]],18],19],[[5,18],19],[[8,18],19],[[9,18],19],[[10,18],19],[[3,18],19],[[3,18],19],[[1,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,3],[21,3],[22,3],[23,3],[24,3],[[]],[25,3],[4,3],[26,3],[27,3],[[]],[[]],[[],8],[[],9],[[],10],[28,3],[28,3],[28,3],[[],1],[[],[[16,[1]]]],[4,[[16,[3]]]],[2,6],[2,6],[29],[8,6],[10,6],[29],[8,6],[10,6],[3],[3],[1],[1],[8],[10],[8],[10],[29],[30,16],[8,[[16,[6]]]],[9,[[16,[14]]]],[10,[[16,[6]]]],[[1,7],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[16,[1]]]],[3,[[1,[25]]]],[2],[2],[2],[8],[8],[8],[9],[10],[1],[1],[1],[[]],[30],[29],[[9,9],14],[2,14],[8,14],[9,14],[10,14],[1,14],[2,14],[1,14],[[9,9],14],[[9,9],14],0,0,0,0,0,0,0,[29],[30],[8,31],[10,31],[8,6],[9,6],[8,6],[2,7],[5,7],[8,7],[9,7],[10,7],0,[[3,4],14],[[3,3],14],[[3,4],14],[[],2],[[],5],[[],[[8,[32]]]],[[],[[9,[32]]]],[[],10],[[],3],[[],1],[[],5],[12,6],[5,12],[[3,3],[[6,[13]]]],[[1,1],[[6,[13]]]],0,[3,[[6,[33]]]],[1,6],[2,6],[2],[2,6],[2],[1],[[3,33],16],[1,16],[2,16],[2],[2,16],[2],[[3,4],16],[1],[5,6],[29],[8,6],[9,14],[10,6],[[1,7]],[29],[[1,7],16],[[1,7],16],[1],[1],[[1,7]],0,0,[1,14],[8,6],[[1,7]],[[1,7]],[[9,9],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[3,7]],[[1,7]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],[[16,[[1,[11]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[9,9],31],[8,31],[10,31],[8,31],[10,31],[5],[[3,33],[[16,[36]]]],[[3,4],[[16,[36]]]],[[[1,[25]],4],19],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,7],[37],[37,37],[[]],[[],37],[38],[38],[38],[[37,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37],[37,1],[37,14],[37,39],[37,40],[37,7],[[],37],[37,6],[37,[[6,[38]]]],[37,6],[38],[37],[37,16],[37],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,0,0,[[]],[[]],[[],41],[41,6],[41,16],[[]],[[]],[[],41],[[],16],[[],16],[[],35],0,0,0,0,0,[42,[[6,[[44,[43]]]]]],[44],[44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],13],[44],[44],[[44,44],14],[[44,18],19],[[44,18],19],[[42,44]],[[]],[[]],[[]],[[]],[[]],[42,7],[[42,45],7],[44],[[[44,[43]]],[[44,[46]]]],[[]],[[]],[[]],[[]],[[]],[[],42],[[44,44],[[6,[13]]]],0,[[],34],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,[[],[[6,[[47,[43]]]]]],0,[47],[47],[[]],[[]],[[47,47],13],[47],[47],[47],[[47,47],14],[[47,18],19],[[47,18],19],[[[47,[46]]],[[47,[43]]]],[[[47,[43]]],[[47,[46]]]],[[]],[[],7],[45,7],[47],[[[47,[43]]],[[47,[46]]]],[[]],[[47,47],[[6,[13]]]],[[],34],[[],16],[[],16],[[],35],0,0,0,0,[48],[[]],[[]],[[]],[[]],[48,48],[[]],[[48,48],13],[48],[48],[[48,48],14],[[48,18],19],[[48,18],19],[[]],[[]],[48],[[]],[[]],[[],[[16,[48]]]],[[48,48],[[6,[13]]]],[[]],[[],34],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[50,50],[51,51],[[]],[[]],[[]],[[49,49],13],[[50,50],13],[[51,51],13],[52],[52],[53],[52],[[49,49],14],[[50,50],14],[[51,51],14],[53,[[6,[52]]]],[52],[[53,18],19],[[49,18],19],[[50,18],19],[[51,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53,14],[53,14],[53,54],[[],[[53,[50]]]],[[],[[53,[49]]]],[[],[[53,[51]]]],[54,6],[[49,49],[[6,[13]]]],[[50,50],[[6,[13]]]],[[51,51],[[6,[13]]]],[53,6],[53,16],[52],[53],[53,16],[53],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,7],[56,7],[57,7],[55,55],[58,58],[[]],[[]],[[],55],[55,6],[56,6],[55],[56],[55],[55,16],[57,16],[55],[57],[[55,55],14],[[55,18],19],[[]],[[]],[[]],[[]],[[]],[55],[55],[[]],[[]],[[]],[[]],[[]],[55],[55],[[]],[[]],[55,14],[55,14],[55,58],[55,59],[55,7],[56,7],[57,7],[[],55],[58,6],[59,6],[58,6],[59,6],[55,6],[56,6],[56,14],[57,14],[55],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],35],[[],35],[[],35],[[],35],[[],35]],"p":[[3,"Vec"],[3,"Deque"],[3,"String"],[15,"str"],[3,"HistoryBuffer"],[4,"Option"],[15,"usize"],[3,"IndexMap"],[3,"IndexSet"],[3,"LinearMap"],[8,"Clone"],[3,"OldestOrdered"],[4,"Ordering"],[15,"bool"],[4,"Entry"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"i8"],[15,"u16"],[15,"i64"],[15,"u32"],[15,"u64"],[15,"u8"],[15,"i32"],[15,"i16"],[8,"IntoIterator"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Iterator"],[3,"BuildHasherDefault"],[15,"char"],[3,"String"],[3,"TypeId"],[3,"Error"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Iter"],[3,"IterMut"],[3,"MpMcQueue"],[3,"Pool"],[4,"Uninit"],[3,"Box"],[19,"MaybeUninit"],[4,"Init"],[3,"Box"],[3,"Arc"],[3,"LinkedIndexU8"],[3,"LinkedIndexU16"],[3,"LinkedIndexUsize"],[3,"FindMut"],[3,"SortedLinkedList"],[3,"Iter"],[3,"Queue"],[3,"Consumer"],[3,"Producer"],[3,"Iter"],[3,"IterMut"],[4,"Min"],[4,"Max"],[3,"Node"],[8,"Pool"],[8,"Pool"],[3,"ArcInner"],[3,"Min"],[3,"Max"],[3,"Node"]]},\
"image":{"doc":"Overview","t":[13,8,13,3,13,13,3,13,13,13,13,18,18,18,4,13,3,4,8,4,13,13,2,3,3,8,8,13,13,6,6,13,13,13,13,13,3,8,8,8,2,4,13,13,13,13,4,2,13,13,13,13,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,8,16,3,13,13,13,13,8,3,16,3,13,13,13,13,13,13,13,6,3,13,13,13,13,13,13,13,6,3,16,13,13,13,13,13,13,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,0,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,0,0,11,5,5,5,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,0,0,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,0,11,11,0,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,10,11,6,3,3,8,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,6,6,4,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,13,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,3,3,3,3,3,3,6,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,3,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,3,13,13,4,13,13,4,13,13,6,6,13,3,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,13,13,3,13,13,13,13,3,13,13,6,6,4,13,3,3,3,3,6,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,2,2,2,2,2,2,2,2,13,13,3,13,13,13,3,13,13,13,13,13,4,4,6,13,13,3,4,13,13,13,13,3,4,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,13,4,3,13,4,13,13,13,3,13,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,2,2,2,2,2,6,6,6,6,3,3,3,3,3,3,6,3,17,12,12,12,12,12,12,12,12,5,5,5,12,6,3,3,2,2,13,2,4,2,13,2,13,2,13,2,13,5,11,11,2,11,11,0,2,5,5,11,11,2,11,11,5,5,5,5,5,5,5,11,11,2,5,2,2,11,11,2,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,5,5,3,16,8,11,11,5,5,11,11,5,5,11,11,5,11,11,5,11,11,5,5,5,10,11,11,11,5,11,11,10,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,3,3,13,3,4,12,12,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,0,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,2,2,2,2,2,2,2,2,3,13,4,13,13,13,3,13,13,13,13,3,13,13,6,6,4,13,3,3,3,3,6,13,13,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,2,2,2,3,2],"n":["A8","AnimationDecoder","Avif","Bgr","Bgr8","Bgr8","Bgra","Bgra8","Bgra8","Bmp","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","Dds","Delay","DynamicImage","EncodableLayout","ExtendedColorType","Farbfeld","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","Ico","ImageBgr8","ImageBgra8","ImageBuffer","ImageDecoder","ImageDecoderExt","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb8","ImageRgba16","ImageRgba8","InnerImage","InnerImageView","Jpeg","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Luma","LumaA","Pixel","Pixel","Pixels","Png","Png","Pnm","Pnm","Primitive","Progress","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tga","Tiff","Unknown","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","apply_without_alpha","as_bgr8","as_bgra8","as_bytes","as_bytes","as_flat_samples","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut_bgr8","as_mut_bgra8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb8","as_mut_rgba16","as_mut_rgba8","as_raw","as_rgb16","as_rgb8","as_rgba16","as_rgba8","bits_per_pixel","blend","blend","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blend_pixel","blur","bmp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channel_count","channel_count","channels","channels","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_model","color_model","color_type","color_type","color_type","convert","copy_from","copy_from","copy_within","copy_within","copy_within","crop","crop_imm","current","dds","default","delay","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dxt","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","expand_palette","expand_palette","extensions_str","farbfeld","filter3x3","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","gif","grayscale","guess_format","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr","height","height","height","huerotate","ico","image_dimensions","imageops","in_bounds","in_bounds","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bgr","into_bgr8","into_bgra","into_bgra8","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma","into_luma16","into_luma8","into_luma_alpha","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb","into_rgb16","into_rgb8","into_rgba","into_rgba16","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","invert","invert","io","jpeg","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map","map","map2","map2","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","map_without_alpha","math","new","new","new","new","new_bgr8","new_bgra8","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb8","new_rgba16","new_rgba8","next","next","numer_denom_ms","open","original_color_type","original_color_type","partial_cmp","pixels","pixels","pixels","pixels_mut","png","pnm","put_pixel","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image","read_image_with_progress","read_image_with_progress","read_rect","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","scanline_bytes","sub_image","sub_image","sub_image","tga","thumbnail","thumbnail_exact","tiff","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr8","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra8","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba8","top","total","total_bytes","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","view","webp","width","width","width","write_image","write_to","BMPEncoder","BmpDecoder","BmpEncoder","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bmp","dds","dxt","farbfeld","gif","hdr","ico","jpeg","png","pnm","tga","tiff","webp","BMPEncoder","BmpDecoder","BmpEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","read_image","read_rect_with_progress","try_from","try_from","try_into","try_into","type_id","type_id","write_image","DdsDecoder","borrow","borrow_mut","color_type","deref","deref_mut","dimensions","drop","from","init","into","into_reader","new","read_image","scanline_bytes","try_from","try_into","type_id","DXT1","DXT3","DXT5","DXTEncoder","DXTReader","DXTVariant","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","eq","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","new","new","read","read_image","read_rect_with_progress","scanline_bytes","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","FarbfeldDecoder","FarbfeldEncoder","FarbfeldReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","init","init","init","into","into","into","into_reader","new","new","read","read_rect_with_progress","scanline_bytes","seek","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","Encoder","Finite","GifDecoder","GifEncoder","GifReader","Infinite","Repeat","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","color_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","encode","encode_frame","encode_frames","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_frames","into_reader","new","new","new_with_speed","read","read_image","read_to_end","set_repeat","to_owned","try_encode_frames","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","HDRAdapter","HDREncoder","HDRImageDecoderIterator","HDRMetadata","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","RGBE8Pixel","Rgbe8Pixel","SIGNATURE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","color_correction","color_type","custom_attributes","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","e","encode","eq","exposure","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","height","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","into_reader","metadata","new","new","new","new_nonstrict","next","orientation","pixel_aspect_ratio","read","read_image","read_image_hdr","read_image_ldr","read_image_native","read_image_transform","read_raw_file","read_rect_with_progress","read_to_end","rgbe8","size_hint","to_hdr","to_ldr","to_ldr_scale_gamma","to_owned","to_owned","to_rgbe8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","with_strictness","ICOEncoder","IcoDecoder","IcoEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","read_image","try_from","try_from","try_into","try_into","type_id","type_id","write_image","Centimeters","Inches","JPEGEncoder","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","density","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dpi","drop","drop","drop","drop","encode","encode_image","eq","eq","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_reader","new","new","new_with_quality","read_image","scale","set_pixel_density","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","write_image","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","PNGEncoder","PNGReader","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","encode","eq","eq","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_image","ArbitraryHeader","ArbitraryMap","ArbitraryTuplType","Ascii","Binary","Bitmap","BitmapHeader","BlackAndWhite","BlackAndWhiteAlpha","Custom","Graymap","GraymapHeader","Grayscale","GrayscaleAlpha","PNMEncoder","PNMHeader","PNMSubtype","Pixmap","PixmapHeader","PnmDecoder","PnmEncoder","PnmHeader","PnmSubtype","RGB","RGBAlpha","SampleEncoding","as_arbitrary","as_bitmap","as_graymap","as_pixmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_type","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encoding","encoding","encoding","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","height","height","height","height","height","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","into_reader","magic_constant","maximal_sample","maxval","maxval","maxwhite","new","new","original_color_type","read_image","sample_encoding","subtype","subtype","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tupltype","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","width","width","with_dynamic_header","with_header","with_subtype","write","write_image","TgaDecoder","TgaEncoder","borrow","borrow","borrow_mut","borrow_mut","color_type","deref","deref","deref_mut","deref_mut","dimensions","drop","drop","encode","from","from","init","init","into","into","into_reader","new","new","original_color_type","read_image","scanline_bytes","try_from","try_from","try_into","try_into","type_id","type_id","write_image","TiffDecoder","TiffEncoder","TiffReader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","encode","from","from","from","init","init","init","into","into","into","into_reader","new","new","read","read_image","read_to_end","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_image","WebPDecoder","borrow","borrow_mut","color_type","deref","deref_mut","dimensions","drop","from","init","into","into_reader","new","read_image","try_from","try_into","type_id","vp8","Frame","Vp8Decoder","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decode_frame","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","for_display","from","from","height","init","init","into","into","keyframe","new","pixel_type","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","ybuf","DdsDecoder","DXTEncoder","DXTReader","DXTVariant","DxtDecoder","DxtEncoder","DxtReader","DxtVariant","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","UnsupportedError","UnsupportedErrorKind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","provide","provide","provide","provide","provide","provide","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FarbfeldDecoder","FarbfeldEncoder","FarbfeldReader","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_mut","as_mut_slice","as_ref","as_slice","as_view","as_view_mut","as_view_with_mut_samples","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","dimensions","drop","drop","drop","drop","drop","drop","eq","eq","eq","extents","extents","fits","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_mut_sample","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","get_sample","has_aliased_samples","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_mut_slice","image_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds","in_bounds_index","in_bounds_index","index","index","index","index_ignoring_bounds","index_ignoring_bounds","index_mut","init","init","init","init","init","init","inner","inner","inner_mut","into","into","into","into","into","into","into_inner","into_inner","is_normal","is_normal","layout","min_length","min_length","min_length","min_length","partial_cmp","provide","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","shrink_to","strides_cwh","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","width","width_stride","with_monocolor","Encoder","GifDecoder","GifEncoder","GifReader","Repeat","HDRAdapter","HDREncoder","HDRImageDecoderIterator","HDRMetadata","HdrAdapter","HdrDecoder","HdrEncoder","HdrImageDecoderIterator","HdrMetadata","HdrReader","RGBE8Pixel","Rgbe8Pixel","SIGNATURE","c","color_correction","custom_attributes","e","exposure","height","orientation","pixel_aspect_ratio","read_raw_file","rgbe8","to_rgbe8","width","ICOEncoder","IcoDecoder","IcoEncoder","BiLevel","CatmullRom","CatmullRom","ColorMap","FilterType","Gaussian","Gaussian","Lanczos3","Lanczos3","Nearest","Nearest","Triangle","Triangle","blur","borrow","borrow_mut","brighten","clone","clone_into","colorops","contrast","crop","crop_imm","deref","deref_mut","dither","drop","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","grayscale","horizontal_gradient","huerotate","index_colors","init","into","invert","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","thumbnail","tile","to_owned","try_from","try_into","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","borrow","borrow_mut","brighten","brighten_in_place","clone","clone_into","contrast","contrast_in_place","deref","deref_mut","dither","drop","from","grayscale","has_lookup","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","index_of","init","into","invert","lookup","lookup","map_color","map_color","to_owned","try_from","try_into","type_id","Reader","borrow","borrow_mut","clear_format","decode","deref","deref_mut","drop","format","from","init","into","into_dimensions","into_inner","new","open","set_format","try_from","try_into","type_id","with_format","with_guessed_format","Centimeters","Inches","JPEGEncoder","JpegDecoder","JpegEncoder","PixelAspectRatio","PixelDensity","PixelDensityUnit","density","unit","Rect","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","hash","height","init","into","nq","to_owned","try_from","try_into","type_id","utils","width","x","y","NeuQuant","borrow","borrow_mut","deref","deref_mut","drop","from","from","has_lookup","index_of","index_of","init","init","into","lookup","lookup","map_color","map_pixel","new","try_from","try_into","type_id","clamp","ApngDecoder","CompressionType","FilterType","PNGEncoder","PNGReader","PngDecoder","PngEncoder","PngReader","ArbitraryHeader","ArbitraryMap","ArbitraryTuplType","Ascii","Binary","Bitmap","BitmapHeader","BlackAndWhite","BlackAndWhiteAlpha","Custom","Graymap","GraymapHeader","Grayscale","GrayscaleAlpha","PNMEncoder","PNMHeader","PNMSubtype","Pixmap","PixmapHeader","PnmDecoder","PnmEncoder","PnmHeader","PnmSubtype","RGB","RGBAlpha","SampleEncoding","depth","encoding","encoding","encoding","height","height","height","height","maxval","maxval","maxwhite","tupltype","width","width","width","width","TgaDecoder","TgaEncoder","TiffDecoder","TiffEncoder","TiffReader","WebPDecoder","vp8"],"q":["imageimage::bmp","","","image::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs","","","","","","","","","","","","","image::codecs::bmp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::dds","","","","","","","","","","","","","","","","","","image::codecs::dxt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::farbfeld","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::gif","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::hdr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::ico","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::jpeg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::png","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::pnmimage::codecs::tga","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::codecs::webp","","","","","","","","","","","","","","","","","","image::codecs::webp::vp8","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::dds","image::dxt","","","","","","","image::errorimage::farbfeld","","","image::flatimage::gif","","","","","image::hdr","","","","","","","","","","","","","","","","","","","","","","","","","image::ico","","","image::imageops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::imageops::colorops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::io","","","","","","","","","","","","","","","","","","","","","","image::jpeg","","","","","","","","","","image::math","","","","","","","","","","","","","","","","","","","","","","","","image::math::nq","","","","","","","","","","","","","","","","","","","","","","image::math::utils","image::png","","","","","","","","image::pnm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","image::tga","","image::tiff","","","image::webp",""],"d":["Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","BGR colors","Pixel contains 8-bit B, G and R channels","Pixel contains 8-bit B, G and R channels","BGR colors + alpha channel","Pixel is 8-bit BGR with an alpha channel","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","ColorType for this pixel format","An enumeration over supported color types and bit depths","An Image in DDS Format","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","An Image in farbfeld Format","","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","An Image in ICO Format","Each pixel in this image is 8-bit Bgr","Each pixel in this image is 8-bit Bgr with alpha","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","Underlying image type. This is mainly used by SubImages in …","Underlying image type. This is mainly used by SubImages in …","An Image in JPEG Format","An Image in JPEG Format with specified quality","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Grayscale colors","Grayscale colors + alpha channel","A generalized pixel.","The type of pixel.","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","An Image in one of the PNM Formats","Primitive trait from old stdlib","Represents the progress of an image operation.","The type of reader produced by <code>into_reader</code>.","RGB colors","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The underlying subpixel type.","An Image in TGA Format","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Return a reference to an 8bit BGR image","Return a reference to an 8bit BGRA image","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Return a mutable reference to an 8bit BGR image","Return a mutable reference to an 8bit RGBA image","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","Returns the underlying raw buffer","Return a reference to an 16bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 8bit RGBA image","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","","","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: This method will be removed. Blend the pixel …","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","Decoding and Encoding of BMP Images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of channels of this pixel type.","Returns the number of channels of this pixel type.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Returns a string that can help to interpret the meaning …","Returns a string that can help to interpret the meaning …","Returns the color type of the image data produced by this …","Returns the ColorType for this pixel format","Returns the ColorType for this pixel format","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","Decoding of DDS images","","Delay of this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","","The width and height of this image.","","","","","","","","","","","","","","","","","","","","Decoding of DXT (S3TC) compression","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Decoding of farbfeld images","Filters this image with the specified 3x3 kernel.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Create a delay from a ratio of milliseconds.","Contructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Contructs a buffer from a generic container (for example a …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","","","Returns mutable view into a mutable slice.","","","","","","","Creates an image buffer out of an existing buffer. Returns …","Returns the pixel located at (x, y). Indexed from top left.","","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","","DEPRECATED: Do not use is function: It is unimplemented!","Decoding of GIF Images","Return a grayscale version of this image.","Guess image format from memory block","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","","","","Decoding of Radiance HDR Images","The height of this image.","The height of this image.","The height of this image.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Decoding and Encoding of ICO files","Read the dimensions of the image located at the specified …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Returns true if this x, y coordinate is contained inside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the underlying image.","","","","Returns a mutable reference to the underlying image.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume the image and returns a BGR image.","Consume the image and returns a BGR image.","Consume the image and returns a BGRA image.","Consume the image and returns a BGRA image.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Decoding and Encoding of JPEG Images","Returns the x offset","Create a new image from a Reader","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Creates a new <code>Frames</code> from an implementation specific …","Construct a new subimage The coordinates set the position …","Contructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Creates a dynamic image backed by a buffer of BGR pixels.","Creates a dynamic image backed by a buffer of BGRA pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Retuns the color type of the image file before decoding","Retuns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Decoding and Encoding of PNG Images","Decoding and Encoding of netpbm image formats (pbm, pgm, …","Put a pixel at location (x, y). Indexed from top left.","","Puts a pixel at location <code>(x, y)</code>","","","Returns all the bytes in the image.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Returns the minimum number of bytes that can be …","Returns a mutable subimage that is a view into this image. …","Returns a mutable subimage that is a view into this image. …","","Decoding and Encoding of TGA Images","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Decoding and Encoding of TIFF Images","Convert this pixel to BGR","","","","","","","Returns a copy of this image as an BGR image.","Returns a copy of this image as an BGR image.","Convert this pixel to BGR with an alpha channel","","","","","","","Returns a copy of this image as an BGRA image.","Returns a copy of this image as an BGRA image.","Return a copy of this image’s pixels as a byte vector.","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns an subimage that is an immutable view into this …","Returns an subimage that is an immutable view into this …","","Decoding of WebP Images","The width of this image.","The width of this image.","The width of this image.","Writes all the bytes in an image to the encoder.","Encode this image and write it to <code>w</code>","BMP Encoder","A bmp decoder","The representation of a BMP encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of BMP Images","Decoding of DDS images","Decoding of DXT (S3TC) compression","Decoding of farbfeld images","Decoding of GIF Images","Decoding of Radiance HDR Images","Decoding and Encoding of ICO files","Decoding and Encoding of JPEG Images","Decoding and Encoding of PNG Images","Decoding of netpbm image formats (pbm, pgm, ppm and pam).","Decoding of TGA Images","Decoding and Encoding of TIFF Images","Decoding of WebP Images","BMP Encoder","A bmp decoder","The representation of a BMP encoder.","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","The representation of a DDS decoder","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","","","","","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel …","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel …","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel …","DXT encoder","DXT reader","What version of DXT compression are we using? Note that …","DXT decoder","DXT encoder","DXT reader","DXT compression version.","","","","","","","","","","","","Returns the color type that is stored in this DXT variant","","","","","","","","","","","","","","Encodes the image data <code>data</code> that has dimensions <code>width</code> and …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new DXT decoder that decodes from the stream <code>r</code>. …","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","","","","farbfeld decoder","farbfeld encoder","farbfeld Reader","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> (native endian) that has dimensions …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","","GIF encoder","Finite number of repetitions","GIF decoder","GIF encoder.","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Looping GIF","Number of repetitions for a GIF animation","","","","","","","","","","","","","","","","","","","","","","","","","Encode a single image.","Encode one frame of animation.","Encodes Frames. Consider using <code>try_encode_frames</code> instead …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new decoder that decodes the input steam <code>r</code>","Creates a new GIF encoder.","Create a new GIF encoder, and has the speed parameter <code>speed</code>…","","","","Set the repeat behaviour of the encoded GIF","","Try to encode a collection of <code>ImageResult&lt;animation::Frame&gt;</code>…","","","","","","","","","","","","","HDR Adapter","HDR Encoder","Scanline buffered pixel by pixel iterator","HDR MetaData","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Refer to wikipedia","Radiance HDR file signature","","","","","","","","","","","","","","","Color components","","","","","Divide color values by corresponding tuple member (r, g, …","","All lines contained in image header are put here. Ordering …","","","","","","","","","","","","","","","","","","","","","","","","Exponent","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>","","Divide color values by exposure to get to get physical …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Height of decoded image. It depends on orientation too.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns file metadata. Refer to <code>HDRMetadata</code> for details.","Creates encoder","Creates adapter","Reads Radiance HDR image header from stream <code>r</code> if the …","Allows reading old Radiance HDR images","","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","","","Consumes decoder and returns a vector of Rgb pixels.","Consumes decoder and returns a vector of Rgb pixels. scale …","Consumes decoder and returns a vector of RGBE8 pixels","Consumes decoder and returns a vector of transformed pixels","Helper function for reading raw 3-channel f32 images","","","Creates <code>RGBE8Pixel</code> from components","","Converts <code>RGBE8Pixel</code> into <code>Rgb&lt;f32&gt;</code> linearly","Converts <code>RGBE8Pixel</code> into <code>Rgb&lt;T&gt;</code> with scale=1 and gamma=2.2","Converts RGBE8Pixel into Rgb using provided scale and gamma","","","Converts <code>Rgb&lt;f32&gt;</code> into <code>RGBE8Pixel</code>","","","","","","","","","","","","","","","","","","","","","","Width of decoded image. It could be either scanline length,","Reads Radiance HDR image header from stream <code>reader</code>, if the …","ICO encoder","An ico decoder","ICO encoder","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG Encoder","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","","","","","","","","","","","","","","Returns a pixel density with a pixel aspect ratio of 1","A couple of values for (Xdensity, Ydensity)","","","","","","","","","","Creates the most common pixel density type: the horizontal …","","","","","Encodes the image stored in the raw byte buffer <code>image</code> that …","Encodes the given image.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code>, and has …","","Configure the decoder to scale the image during decoding.","Set the pixel density of the images the encoder will …","","","","","","","","","","","","","","","The unit in which the density is measured","","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth greyscale …","PNG Encoder","PNG Reader","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","Header produced by a <code>pam</code> file (“Portable Arbitrary Map”…","Magic number P7","Standardized tuple type specifiers in the header of a <code>pam</code>.","Samples are encoded as decimal ascii strings separated by …","Samples are unsigned binary integers in big endian","Magic numbers P1 and P4","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","An image format which is not standardized","Magic numbers P2 and P5","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Pixels represent the amount of white","Grayscale with an additional alpha channel","PNM Encoder","PNM Header","Denotes the category of the magic number","Magic numbers P3 and P6","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Stores the complete header data of a file.","PNM Subtype","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","The kind of encoding used to store sample values","Retrieve the underlying arbitrary header if any","Retrieve the underlying bitmap header if any","Retrieve the underlying graymap header if any","Retrieve the underlying pixmap header if any","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of color channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode an image whose samples are represented as <code>u8</code>.","Binary or Ascii encoded file","Binary or Ascii encoded file","Binary or Ascii encoded file","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The height of the image this header is for.","Height of the image file","Height of the image file","Height of the image file","Height of the image file","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the reader and header after an image has been read.","","Get the two magic constant bytes corresponding to this …","The biggest value a sample can have. In other words, the …","Maximum sample value within the image","Maximum sample value within the image","Maximum sample value within the image","Create a new decoder that decodes from the stream <code>read</code>","Create new PNMEncoder from the <code>writer</code>.","","","Whether samples are stored as binary or as decimal ascii","Get the pnm subtype, depending on the magic constant …","Retrieve the format subtype from which the header was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color interpretation of image pixels","","","","","","","","","","","The width of the image this header is for.","Width of the image file","Width of the image file","Width of the image file","Width of the image file","Create the header dynamically for each image.","Enforce the use of a chosen header.","Encode a specific pnm subtype image.","Write the header back into a binary stream","","A decoder for TGA images","TGA encoder.","","","","","","","","","","","","","Encodes the image <code>buf</code> that has dimensions <code>width</code> and <code>height</code> …","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>.","","","","","","","","","","","Decoder for TIFF images.","Encoder for tiff images","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","","","","","","","","","","","","","","","","","","Encodes the image <code>image</code> that has dimensions <code>width</code> and …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new TiffDecoder.","Create a new encoder that writes its output to <code>w</code>","","","","","","","","","","","","","","WebP Image format decoder. Currently only supportes the …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Create a new WebPDecoder from the Reader <code>r</code>. This function …","","","","","An implementation of the VP8 Video Codec","A Representation of the last decoded video frame","VP8 Decoder","","","","","","","Decodes the current frame and returns a reference to it","","","","","","","","","Indicates whether this frame is intended for display","Returns the argument unchanged.","Returns the argument unchanged.","The height of the luma plane","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether this frame is a keyframe","Create a new decoder. The reader must present a raw vp8 …","The pixel type of the frame as defined by Section 9.2 of …","","","","","","","","The width of the luma plane","The luma plane of the frame","","","","","","","","","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","The color format did not match the channel count.","Get a mutable reference based version.","View the samples as a slice.","Get a reference based version.","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","","","","","","","","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a single sample.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a single sample.","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Mutable portion of the buffer that holds sample values.","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","Resolve the index of a particular sample.","Get the theoretical position of sample (x, y, channel).","Get the theoretical position of sample (channel, x, y).","Return a mutable reference to a single sample at specified …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","Copy the data into an owned vector.","","","","","","","","","","","","","Move the data into an image buffer.","Try to convert this into an image with mutable pixels.","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","Create a monocolor image from a single pixel.","","","","","","HDR Adapter","HDR Encoder","Scanline buffered pixel by pixel iterator","HDR MetaData","Adapter to conform to <code>ImageDecoder</code> trait","An Radiance HDR decoder","Radiance HDR encoder","Scanline buffered pixel by pixel iterator","Metadata for Radiance HDR image","Wrapper struct around a <code>Cursor&lt;Vec&lt;u8&gt;&gt;</code>","Refer to wikipedia","Refer to wikipedia","Radiance HDR file signature","Color components","Divide color values by corresponding tuple member (r, g, …","All lines contained in image header are put here. Ordering …","Exponent","Divide color values by exposure to get to get physical …","Height of decoded image. It depends on orientation too.","Orientation matrix. For standard orientation it is …","Pixel height divided by pixel width","Helper function for reading raw 3-channel f32 images","Creates <code>RGBE8Pixel</code> from components","Converts <code>Rgb&lt;f32&gt;</code> into <code>RGBE8Pixel</code>","Width of decoded image. It could be either scanline length,","ICO encoder","An ico decoder","ICO encoder","Color operations","","Cubic Filter","Color operations","Available Sampling Filters.","","Gaussian Filter","","Lanczos with window 3","","Nearest Neighbor","","Linear Filter","Image sampling Performs a Gaussian blur on the supplied …","","","Color operations","","","Functions for altering and converting the color of …","Color operations","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","","","Color operations","","","Image sampling Perform a 3x3 box filter on the supplied …","Affine transformations Flip an image horizontally","Affine transformations Flip an image horizontally and put …","Affine transformations Flip an image horizontally in place.","Affine transformations Flip an image vertically","Affine transformations Flip an image vertically and put …","Affine transformations Flip an image vertically in place.","","Returns the argument unchanged.","Color operations","Fill the image with a linear horizontal gradient","Color operations","Color operations","","Calls <code>U::from(self)</code>.","Color operations","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Image sampling Resize the supplied image to the specified …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 180 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 270 degrees …","Affine transformations Rotate an image 90 degrees …","Affine transformations Rotate an image 90 degrees …","Image sampling Resize the supplied image to the specific …","Tile an image by repeating it multiple times","","","","","Image sampling Performs an unsharpen mask on the supplied …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","","","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","","","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","","","Reduces the colors of the image using the supplied …","","Returns the argument unchanged.","Convert the supplied image to grayscale","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","","","","","A multi-format image reader.","","","Remove the current information on the image format.","Read the image (replaces <code>load</code>).","","","","Get the currently determined format.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Create a new image reader without a preset format.","Open a file to read, format will be guessed from path.","Supply the format as which to interpret the read image.","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","Pixels per centimeter","Pixels per inch (2.54 cm)","JPEG Encoder","JPEG decoder","The representation of a JPEG encoder","Represents the absence of a unit, the values indicate only …","Represents the pixel density of an image","Represents a unit in which the density of an image is …","A couple of values for (Xdensity, Ydensity)","The unit in which the density is measured","A Rectangle defined by its top left corner, width and …","","","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","","Calls <code>U::from(self)</code>.","NEUQUANT Neural-Net quantization algorithm by Anthony …","","","","","Shared mathematical utility functions.","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Neural network color quantizer","","","","","","","Returns the argument unchanged.","Indicate NeuQuant implements <code>lookup</code>.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Cut value to be inside given range","","","","","","","","","Header produced by a <code>pam</code> file (“Portable Arbitrary Map”…","Magic number P7","Standardized tuple type specifiers in the header of a <code>pam</code>.","Samples are encoded as decimal ascii strings separated by …","Samples are unsigned binary integers in big endian","Magic numbers P1 and P4","Header produced by a <code>pbm</code> file (“Portable Bit Map”)","Pixels are either black (0) or white (1)","Pixels are either black (0) or white (1) and a second …","An image format which is not standardized","Magic numbers P2 and P5","Header produced by a <code>pgm</code> file (“Portable Gray Map”)","Pixels represent the amount of white","Grayscale with an additional alpha channel","PNM Encoder","PNM Header","Denotes the category of the magic number","Magic numbers P3 and P6","Header produced by a <code>ppm</code> file (“Portable Pixel Map”)","PNM decoder","Encodes images to any of the <code>pnm</code> image formats.","Stores the complete header data of a file.","PNM Subtype","Three channels: Red, Green, Blue","Four channels: Red, Green, Blue, Alpha","The kind of encoding used to store sample values","Number of color channels","Binary or Ascii encoded file","Binary or Ascii encoded file","Binary or Ascii encoded file","Height of the image file","Height of the image file","Height of the image file","Height of the image file","Maximum sample value within the image","Maximum sample value within the image","Maximum sample value within the image","Color interpretation of image pixels","Width of the image file","Width of the image file","Width of the image file","Width of the image file","A decoder for TGA images","TGA encoder.","","","","WebP Image format decoder. Currently only supportes the …",""],"i":[26,0,24,0,17,26,0,17,26,24,29,37,37,37,0,24,0,0,0,0,24,29,0,0,0,0,0,24,29,0,0,24,24,29,1,1,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,154,57,24,29,26,17,26,26,26,17,26,26,17,26,26,26,17,26,0,0,0,57,0,24,29,24,29,0,0,50,0,26,17,26,26,26,17,26,0,0,26,17,26,26,26,17,26,0,0,37,24,29,24,26,29,24,1,37,4,5,6,7,8,9,37,4,5,6,7,8,9,37,4,5,6,7,8,9,37,37,1,1,155,1,10,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,1,1,1,17,37,4,5,6,7,8,9,154,20,10,1,1,0,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,57,20,10,1,1,0,23,23,17,24,24,20,37,37,17,26,37,4,5,6,7,8,9,37,4,5,6,7,8,9,37,4,5,6,7,8,9,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,0,33,1,37,37,50,37,37,10,154,154,154,154,10,1,1,30,0,10,23,33,20,23,27,10,10,17,26,4,5,6,7,8,9,1,24,29,30,32,33,20,23,27,10,10,17,26,4,5,6,7,8,9,1,24,29,30,32,50,57,20,10,10,1,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,0,10,10,10,10,27,10,17,26,4,5,6,7,8,9,1,24,29,30,0,13,10,24,0,1,0,1,1,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,33,20,23,27,10,17,26,26,4,4,5,5,6,6,7,7,8,8,9,9,1,24,29,29,30,32,37,4,5,6,7,8,9,1,24,10,27,23,24,10,10,27,37,4,5,6,7,8,9,37,4,5,6,7,8,9,10,57,20,10,10,1,154,20,10,10,1,0,1,0,17,17,10,17,26,4,5,6,7,8,9,1,24,0,57,57,10,1,0,0,0,57,57,10,4,5,6,7,8,9,10,4,5,6,7,8,9,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,57,20,10,1,154,20,10,1,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,1,1,1,1,23,1,10,156,33,32,1,1,1,1,1,1,10,50,1,1,1,1,1,1,10,37,4,5,6,7,8,9,1,0,0,23,0,0,0,37,4,5,6,7,8,9,37,4,5,6,7,8,9,37,4,5,6,7,8,9,37,37,0,33,20,23,10,1,1,1,1,1,1,1,1,1,1,33,32,27,0,50,50,27,57,57,10,10,0,0,154,20,10,10,1,50,50,50,50,157,157,157,30,1,1,1,1,1,1,10,10,10,10,1,0,0,10,1,50,50,154,154,20,0,1,1,0,37,4,5,6,7,8,9,1,1,37,4,5,6,7,8,9,1,1,1,20,37,4,5,6,7,8,9,1,1,1,37,4,5,6,7,8,9,1,1,1,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,37,4,5,6,7,8,9,1,1,1,37,4,5,6,7,8,9,1,1,1,23,30,50,50,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,33,20,23,27,10,17,26,4,5,6,7,8,9,1,24,29,30,32,57,57,10,154,154,10,1,57,57,20,0,57,57,10,158,1,0,0,0,0,0,0,0,0,0,0,0,0,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,63,41,43,59,63,41,43,159,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,59,63,41,43,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,59,60,63,64,41,43,42,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,72,70,72,70,70,72,70,72,70,70,72,72,70,72,70,72,70,72,70,70,72,70,70,70,72,70,72,70,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,0,0,0,0,0,0,0,75,78,76,74,75,78,76,74,74,74,75,74,75,78,76,74,75,78,76,74,75,75,78,76,74,76,74,74,75,78,76,74,75,78,76,74,75,78,76,74,75,75,76,78,75,75,75,74,75,78,76,74,75,78,76,74,75,78,76,74,0,0,0,82,80,81,82,80,81,80,82,80,81,82,80,81,80,82,80,81,81,82,80,81,82,80,81,82,80,81,80,80,81,82,80,80,82,82,80,81,82,80,81,82,80,81,81,0,84,0,0,0,84,0,85,87,86,84,85,87,86,84,84,84,85,85,87,86,84,85,87,86,84,85,85,87,86,84,86,86,86,84,85,87,86,84,85,87,86,84,85,87,86,84,85,85,85,86,86,87,85,87,86,84,86,85,87,86,84,85,87,86,84,85,87,86,84,0,0,0,0,0,0,0,0,0,0,0,0,0,94,93,91,90,92,88,89,94,93,91,90,92,88,89,88,88,89,88,89,89,90,89,88,94,93,91,90,92,88,89,94,93,91,90,92,88,89,90,94,93,91,90,92,88,89,88,91,88,89,90,92,88,89,94,93,91,90,92,88,89,89,94,93,91,90,92,88,89,94,93,91,90,92,88,89,93,92,90,92,91,90,92,90,93,89,89,94,90,92,92,92,92,0,90,94,0,93,88,88,88,88,89,0,94,93,91,90,92,88,89,94,93,91,90,92,88,89,94,93,91,90,92,88,89,89,92,0,0,0,100,101,100,101,100,100,101,100,101,100,100,101,101,100,101,100,101,100,101,100,100,101,100,100,101,100,101,100,101,101,102,102,0,0,0,102,0,0,104,105,102,103,104,105,102,103,102,103,102,103,104,103,103,104,105,102,103,104,105,102,103,104,103,104,105,102,103,105,105,102,103,102,103,104,105,102,103,104,105,102,103,104,105,102,103,104,104,105,105,104,104,105,102,103,104,105,102,103,104,105,102,103,104,105,102,103,103,105,0,109,108,0,108,108,0,108,109,0,0,109,0,0,0,108,109,109,106,111,106,107,110,108,109,111,106,107,110,108,109,108,109,108,109,106,108,109,111,106,107,110,108,109,111,106,107,110,108,109,106,111,106,107,110,108,109,110,108,109,108,109,111,106,107,110,108,109,111,106,107,110,108,109,111,106,107,110,108,109,107,106,106,106,110,110,111,106,111,106,108,109,111,106,107,110,108,109,111,106,107,110,108,109,111,106,107,110,108,109,110,0,118,0,117,117,118,0,119,119,119,118,0,119,119,0,0,0,118,0,0,0,0,0,119,119,0,112,112,112,112,120,121,112,117,118,114,115,116,113,119,120,121,112,117,118,114,115,116,113,119,117,118,114,115,116,113,119,117,118,114,115,116,113,119,120,113,120,121,112,117,118,114,115,116,113,119,120,121,112,117,118,114,115,116,113,119,120,120,121,112,117,118,114,115,116,113,119,121,114,115,116,117,118,117,118,114,115,116,113,119,120,121,112,112,112,112,112,117,118,114,115,116,113,119,112,114,115,116,113,120,121,112,117,118,114,115,116,113,119,120,121,112,117,118,114,115,116,113,119,120,120,118,112,116,113,115,120,121,120,120,118,120,112,117,118,114,115,116,113,119,120,121,112,117,118,114,115,116,113,119,120,121,112,117,118,114,115,116,113,119,113,120,121,112,117,118,114,115,116,113,119,112,114,115,116,113,121,121,121,112,121,0,0,122,123,122,123,122,122,123,122,123,122,122,123,123,122,123,122,123,122,123,122,122,123,122,122,122,122,123,122,123,122,123,123,0,0,0,124,126,125,124,126,125,124,124,126,125,124,126,125,124,124,126,125,125,124,126,125,124,126,125,124,126,125,124,124,125,126,124,126,124,126,125,124,126,125,124,126,125,125,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,0,129,128,129,128,128,128,129,128,129,128,129,128,129,128,128,128,129,128,128,129,128,129,128,128,129,128,128,129,128,129,128,129,128,128,128,0,0,0,0,0,0,0,0,130,77,0,132,131,77,0,133,131,130,131,130,0,0,0,132,77,0,0,77,133,131,77,0,0,133,133,77,0,0,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,130,131,132,133,130,131,132,133,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,130,131,132,133,77,77,135,135,130,136,136,137,137,131,138,138,139,139,132,133,133,135,136,138,77,77,77,135,135,130,136,137,131,138,139,132,133,133,133,135,136,138,137,139,130,131,132,133,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,135,137,139,136,138,77,135,136,137,138,139,77,136,137,138,130,131,132,133,77,135,136,137,138,139,133,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,77,135,130,136,137,131,138,139,132,133,0,0,0,147,0,0,147,0,141,147,147,0,141,147,0,0,141,12,12,12,12,12,12,12,146,12,65,145,146,141,147,12,65,145,146,141,147,12,65,145,146,65,65,12,65,145,146,141,147,12,65,145,146,141,147,12,65,12,65,145,146,141,147,12,65,145,146,141,147,145,146,12,65,145,146,141,147,65,141,147,12,65,12,65,145,146,12,65,145,146,141,141,147,12,65,145,146,141,147,12,145,146,145,146,146,12,145,146,12,65,65,141,147,65,65,12,145,146,12,145,146,12,65,145,146,12,65,12,12,65,12,65,12,12,65,145,146,141,147,145,146,146,12,65,145,146,141,147,145,146,12,65,12,12,65,145,146,147,141,146,65,145,146,12,12,65,145,146,12,65,12,65,145,146,141,147,141,12,12,65,145,146,141,147,12,65,145,146,141,147,12,145,12,65,145,146,141,147,65,65,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,89,89,88,89,89,89,89,0,0,0,89,0,0,0,0,0,62,0,0,0,62,0,62,0,62,0,62,0,62,62,0,62,62,0,0,0,0,62,62,0,62,62,0,0,0,0,0,0,0,62,62,0,0,0,0,62,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,0,0,0,160,0,148,148,0,0,148,148,0,0,148,148,0,148,148,0,160,148,0,0,0,160,148,148,148,0,160,148,160,148,148,148,148,148,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,102,102,0,0,0,102,0,0,103,103,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,38,38,38,38,0,38,38,38,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,0,0,0,0,0,0,0,0,0,118,0,117,117,118,0,119,119,119,118,0,119,119,0,0,0,118,0,0,0,0,0,119,119,0,113,114,115,116,114,115,116,113,116,113,115,113,114,115,116,113,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[[]],[[[4,[3]],4]],[[[5,[3]],5]],[[[6,[3]],6]],[[[7,[3]],7]],[[[8,[3]],8]],[[[9,[3]],9]],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[[]],[[]],[1,[[11,[10]]]],[1,[[11,[10]]]],[[]],[1],[10,12],[10,12],[1,[[11,[12]]]],[1,[[11,[12]]]],[1,[[11,[10]]]],[1,[[11,[13]]]],[1,[[11,[10]]]],[1,[[11,[14]]]],[1,[[11,[10]]]],[1,[[11,[10]]]],[1,[[11,[10]]]],[1,[[11,[13]]]],[1,[[11,[10]]]],[1,[[11,[14]]]],[1,[[11,[10]]]],[1,[[11,[15]]]],[1,[[11,[10]]]],[1,[[11,[16]]]],[10],[1,[[11,[10]]]],[1,[[11,[15]]]],[1,[[11,[10]]]],[1,[[11,[16]]]],[17,18],[[]],[[[4,[3]],4]],[[[5,[3]],5]],[[[6,[3]],6]],[[[7,[3]],7]],[[[8,[3]],8]],[[[9,[3]],9]],[[19,19]],[[20,19,19]],[[10,19,19]],[[1,19,19,[7,[21]]]],[[1,2],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[10],[1],[[1,22],1],0,[23,16],[23,16],[17,21],[24,25],[24,25],[[20,19,19,19,19]],[[],21],[[],21],[17,21],[26,21],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[23,23],[27,27],[10,10],[17,17],[26,26],[[[4,[[0,[28,3]]]]],[[4,[[0,[28,3]]]]]],[[[5,[[0,[28,3]]]]],[[5,[[0,[28,3]]]]]],[[[6,[[0,[28,3]]]]],[[6,[[0,[28,3]]]]]],[[[7,[[0,[28,3]]]]],[[7,[[0,[28,3]]]]]],[[[8,[[0,[28,3]]]]],[[8,[[0,[28,3]]]]]],[[[9,[[0,[28,3]]]]],[[9,[[0,[28,3]]]]]],[1,1],[24,24],[29,29],[30,30],[[[32,[31]]],[[32,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[33,[[35,[[34,[23]]]]]],[1,17],[[],36],[[],36],[[],17],[[],17],[[],17],[[[10,[37]]],[[10,[34]]]],[[19,19],35],[[19,19],35],[[38,19,19],25],[[38,19,19],25],[[10,38,19,19],25],[[1,19,19,19,19],1],[[1,19,19,19,19],1],[30,39],0,[[],10],[23,27],[40],[40],[40],[40],[40],[10],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[10],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[]],[[]],[20],[10],[10],[1],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],0,[10,41],[10,42],[10,43],[10,44],[[27,27],25],[[[10,[[0,[45,37]],45]],10],25],[[17,17],25],[[26,26],25],[[[4,[[0,[45,3]]]],4],25],[[[5,[[0,[45,3]]]],5],25],[[[6,[[0,[45,3]]]],6],25],[[[7,[[0,[45,3]]]],7],25],[[[8,[[0,[45,3]]]],8],25],[[[9,[[0,[45,3]]]],9],25],[[1,1],25],[[24,24],25],[[29,29],25],[[30,30],25],0,[[13,[11,[21]]],16],[[[10,[[6,[21]],[34,[21,46]]]],[11,[21]]],16],[24],0,[1,1],0,[1,1],[1,1],[[27,47],48],[[[10,[[0,[49,37]],49]],47],48],[[17,47],48],[[26,47],48],[[[4,[[0,[49,3]]]],47],48],[[[5,[[0,[49,3]]]],47],48],[[[6,[[0,[49,3]]]],47],48],[[[7,[[0,[49,3]]]],47],48],[[[8,[[0,[49,3]]]],47],48],[[[9,[[0,[49,3]]]],47],48],[[1,47],48],[[24,47],48],[[29,47],48],[[30,47],48],[[[32,[[0,[49,31]]]],47],48],[[]],[[]],[[]],[[]],[[]],[[]],[17,26],[[]],[[],[[4,[3]]]],[[]],[[],[[5,[3]]]],[[]],[[]],[[],[[6,[3]]]],[[],[[7,[3]]]],[[]],[[],[[8,[3]]]],[[]],[[],[[9,[3]]]],[[]],[[]],[[]],[[]],[24,29],[[]],[[]],[[]],[[3,3,3,3],[[4,[3]]]],[[3,3,3,3],[[5,[3]]]],[[3,3,3,3],[[6,[3]]]],[[3,3,3,3],[[7,[3]]]],[[3,3,3,3],[[8,[3]]]],[[3,3,3,3],[[9,[3]]]],[50,[[35,[1]]]],[[],[[11,[24]]]],[[19,19],[[10,[37,34]]]],[[19,19],27],[[16,19,19,27],23],[[],[[35,[24]]]],[[19,19,37],[[10,[37,34]]]],[[19,19],[[11,[10]]]],[51,27],[[]],[[],4],[[],5],[[],6],[[],7],[[],8],[[],9],[[]],[[],4],[[],5],[[],6],[[],7],[[],8],[[],9],[[19,19,34],[[11,[[10,[37,34]]]]]],[[19,19]],[[20,19,19]],[[10,19,19]],[[10,19,19]],[[1,19,19],[[7,[21]]]],[[19,19]],[[20,19,19]],[[10,19,19]],[[10,19,19]],[[1,19,19],7],0,[1,1],[[],[[35,[24]]]],[17,25],[17,25],[[[10,[[0,[52,37]],52]]]],[17],[26],[[[4,[[0,[52,3]]]]]],[[[5,[[0,[52,3]]]]]],[[[6,[[0,[52,3]]]]]],[[[7,[[0,[52,3]]]]]],[[[8,[[0,[52,3]]]]]],[[[9,[[0,[52,3]]]]]],[1],[24],0,[[],19],[[],19],[10,19],[[1,22],1],0,[[],35],0,[[19,19],25],[[19,19],25],[10],[[[4,[3]],40]],[[[5,[3]],40]],[[[6,[3]],40]],[[[7,[3]],40]],[[[8,[3]],40]],[[[9,[3]],40]],[10],[[[4,[3]],40]],[[[5,[3]],40]],[[[6,[3]],40]],[[[7,[3]],40]],[[[8,[3]],40]],[[[9,[3]],40]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[20],[10],[1],[[]],[20],[10],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[10,[[5,[21]],[34,[21]]]]]],[1,[[10,[[5,[21]],[34,[21]]]]]],[1,[[10,[[8,[21]],[34,[21]]]]]],[1,[[10,[[8,[21]],[34,[21]]]]]],[23,16],[1,[[34,[21]]]],[10,12],[[],33],[[]],[[]],[1,13],[1,[[10,[[6,[18]],[34,[18]]]]]],[1,13],[1,14],[1,[[10,[[9,[18]],[34,[18]]]]]],[1,14],[10],[[],35],[1,15],[1,[[10,[[4,[18]],[34,[18]]]]]],[1,15],[1,16],[1,[[10,[[7,[18]],[34,[18]]]]]],[1,16],[[[10,[37,34]]],34],[[]],[[[4,[3]]]],[[[5,[3]]]],[[[6,[3]]]],[[[7,[3]]]],[[[8,[3]]]],[[[9,[3]]]],[1],0,0,[23,19],[[[0,[53,54]],24],[[35,[1]]]],[[],[[35,[1]]]],[24,[[35,[1]]]],[[]],[[[4,[3]]],[[4,[3]]]],[[[5,[3]]],[[5,[3]]]],[[[6,[3]]],[[6,[3]]]],[[[7,[3]]],[[7,[3]]]],[[[8,[3]]],[[8,[3]]]],[[[9,[3]]],[[9,[3]]]],[[]],[[[4,[3]],[4,[3]]],[[4,[3]]]],[[[5,[3]],[5,[3]]],[[5,[3]]]],[[[6,[3]],[6,[3]]],[[6,[3]]]],[[[7,[3]],[7,[3]]],[[7,[3]]]],[[[8,[3]],[8,[3]]],[[8,[3]]]],[[[9,[3]],[9,[3]]],[[9,[3]]]],[[]],[[[4,[3]]],[[4,[3]]]],[[[5,[3]]],[[5,[3]]]],[[[6,[3]]],[[6,[3]]]],[[[7,[3]]],[[7,[3]]]],[[[8,[3]]],[[8,[3]]]],[[[9,[3]]],[[9,[3]]]],[[]],[[]],0,[[[56,[55]]],33],[[19,19,19,19],20],[16,23],[[19,19],[[10,[37,34]]]],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[[19,19],1],[33,[[11,[[35,[23]]]]]],[[[32,[57]]],11],[27],[[],[[35,[1]]]],[[],26],[[],26],[[27,27],[[11,[58]]]],[[],32],[[],32],[10,59],[10,60],0,0,[[19,19]],[[20,19,19]],[[10,19,19]],[[10,19,19]],[[1,19,19,[7,[21]]]],[[],35],[[],35],[61,35],[61,35],[[19,19,19,19],35],[[19,19,19,19],35],[[19,19,19,19,61],35],[30,39],[[1,19,19,62],1],[[1,19,19,62],1],[[1,19,19,62],1],[1,1],[1,1],[1,1],[10,63],[10,64],[10,65],[10,35],[1,35],[[19,19,17],35],[[19,19,17,24],35],[[10,24],35],[[1,24],35],[[],39],[[],39],[[19,19,19,19],20],[[19,19,19,19],20],[[20,19,19,19,19],20],0,[[1,19,19],1],[[1,19,19],1],0,[[],5],[[[4,[3]]],[[5,[3]]]],[[[5,[3]]],[[5,[3]]]],[[[6,[3]]],[[5,[3]]]],[[[7,[3]]],[[5,[3]]]],[[[8,[3]]],[[5,[3]]]],[[[9,[3]]],[[5,[3]]]],[1,[[10,[[5,[21]],[34,[21]]]]]],[1,[[10,[[5,[21]],[34,[21]]]]]],[[],8],[[[4,[3]]],[[8,[3]]]],[[[5,[3]]],[[8,[3]]]],[[[6,[3]]],[[8,[3]]]],[[[7,[3]]],[[8,[3]]]],[[[8,[3]]],[[8,[3]]]],[[[9,[3]]],[[8,[3]]]],[1,[[10,[[8,[21]],[34,[21]]]]]],[1,[[10,[[8,[21]],[34,[21]]]]]],[1,[[34,[21]]]],[20,[[10,[34]]]],[[],6],[[[4,[3]]],[[6,[3]]]],[[[5,[3]]],[[6,[3]]]],[[[6,[3]]],[[6,[3]]]],[[[7,[3]]],[[6,[3]]]],[[[8,[3]]],[[6,[3]]]],[[[9,[3]]],[[6,[3]]]],[1,13],[1,[[10,[[6,[18]],[34,[18]]]]]],[1,13],[[],9],[[[4,[3]]],[[9,[3]]]],[[[5,[3]]],[[9,[3]]]],[[[6,[3]]],[[9,[3]]]],[[[7,[3]]],[[9,[3]]]],[[[8,[3]]],[[9,[3]]]],[[[9,[3]]],[[9,[3]]]],[1,14],[1,[[10,[[9,[18]],[34,[18]]]]]],[1,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[[4,[3]]],[[4,[3]]]],[[[5,[3]]],[[4,[3]]]],[[[6,[3]]],[[4,[3]]]],[[[7,[3]]],[[4,[3]]]],[[[8,[3]]],[[4,[3]]]],[[[9,[3]]],[[4,[3]]]],[1,15],[1,[[10,[[4,[18]],[34,[18]]]]]],[1,15],[[],7],[[[4,[3]]],[[7,[3]]]],[[[5,[3]]],[[7,[3]]]],[[[6,[3]]],[[7,[3]]]],[[[7,[3]]],[[7,[3]]]],[[[8,[3]]],[[7,[3]]]],[[[9,[3]]],[[7,[3]]]],[1,16],[1,[[10,[[7,[18]],[34,[18]]]]]],[1,16],[23,19],[30,39],[[],39],[[],39],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[19,19]],[[19,19]],[[10,19,19]],[[19,19]],[[19,19]],[[10,19,19]],[[1,2,22],1],[[19,19,19,19],20],[[19,19,19,19],20],[[20,19,19,19,19],20],0,[[],19],[[],19],[10,19],[[19,19,17],35],[[1,[68,[29]]],35],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[37]]],[[59,[37]]]],[[[63,[37]]],[[63,[37]]]],[[[41,[37]]],[[41,[37]]]],[[[43,[37]]],[[43,[37]]]],[[]],[[]],[[]],[[]],[[]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[59,[37]],47],48],[[[60,[37]],47],48],[[[63,[37]],47],48],[[[64,[37]],47],48],[[[41,[37]],47],48],[[[43,[37]],47],48],[[[42,[37]],47],48],[[[44,[37]],47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[59,[37]]],40],[[[60,[37]]],40],[[[63,[37]]],40],[[[64,[37]]],40],[[[41,[37]]],40],[[[43,[37]]],40],[[[42,[37]]],40],[[[44,[37]]],40],[[[59,[37]]],11],[[[60,[37]]],11],[[[63,[37]]],[[11,[[59,[37]]]]]],[[[64,[37]]],[[11,[[60,[37]]]]]],[[[41,[37]]],11],[[[43,[37]]],11],[[[42,[37]]],11],[[[44,[37]]],11],[[[59,[37]]],11],[[[60,[37]]],11],[[[63,[37]]],[[11,[[59,[37]]]]]],[[[64,[37]]],[[11,[[60,[37]]]]]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[70,[[0,[69,54]]]]],17],[40],[40],[40],[40],[[[70,[[0,[69,54]]]]]],[40],[40],[[[72,[71]],19,19,17],35],[[]],[[]],[[],40],[[],40],[[]],[[]],[[[70,[[0,[69,54]]]]],35],[[[0,[69,54]]],[[35,[[70,[[0,[69,54]]]]]]]],[[],[[72,[71]]]],[[[70,[[0,[69,54]]]]],35],[[[70,[[0,[69,54]]]],19,19,19,19,61],35],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[[72,[71]],19,19,17],35],0,[[]],[[]],[[[73,[69]]],17],[40],[40],[[[73,[69]]]],[40],[[]],[[],40],[[]],[[[73,[69]]],35],[69,[[35,[[73,[69]]]]]],[[[73,[69]]],35],[[[73,[69]]],39],[[],66],[[],66],[[],67],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[[]],[[[75,[69]]],17],[74,17],[40],[40],[40],[40],[40],[40],[40],[40],[[[75,[69]]]],[40],[40],[40],[40],[[[76,[71]],19,19,74],35],[[74,74],25],[[74,47],48],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[[75,[69]]],35],[[69,19,19,74],[[66,[[75,[69]],77]]]],[71,[[76,[71]]]],[[[78,[69]]],[[79,[40]]]],[[[75,[69]]],35],[[[75,[[0,[69,54]]]],19,19,19,19,61],35],[[[75,[69]]],39],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[80,[69]]],17],[40],[40],[40],[40],[40],[40],[[[80,[69]]]],[40],[40],[40],[[[81,[71]],19,19],35],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[[80,[69]]],35],[69,[[35,[[80,[69]]]]]],[71,[[81,[71]]]],[[[82,[69]]],[[79,[40]]]],[[[80,[[0,[69,54]]]],19,19,19,19,61],35],[[[80,[69]]],39],[[[82,[[0,[69,54]]]],83],[[79,[39]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[[81,[71]],19,19,17],35],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[[]],[[[85,[69]]],17],[40],[40],[40],[40],[40],[40],[40],[40],[[[85,[69]]]],[40],[40],[40],[40],[[[86,[71]],19,19,17],35],[[[86,[71]],23],35],[[[86,[71]]],35],[[84,47],48],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[[85,[69]]],33],[[[85,[69]]],35],[69,[[35,[[85,[69]]]]]],[71,[[86,[71]]]],[[71,22],[[86,[71]]]],[87,[[79,[40]]]],[[[85,[69]]],35],[[87,34],[[79,[40]]]],[[[86,[71]],84],35],[[]],[[[86,[71]]],35],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[88,88],[89,89],[[]],[[]],0,[[[90,[53]]],17],0,[[],88],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[90,[53]]]],[40],[40],[40],[40],[40],[40],[40],0,[[[91,[71]],40,40],35],[[88,88],25],0,[[[90,[[0,[49,53]]]],47],48],[[[92,[49]],47],48],[[88,47],48],[[89,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[53]]]],[[[90,[53]]],35],[[[92,[53]]],89],[71,[[91,[71]]]],[53,[[35,[[90,[53]]]]]],[53,[[35,[[92,[53]]]]]],[53,[[35,[[90,[53]]]]]],[[[93,[53]]],11],0,0,[94,[[79,[40]]]],[[[90,[53]]],35],[[[92,[53]]],[[35,[[34,[[4,[2]]]]]]]],[[[92,[53]]],[[35,[[34,[[4,[21]]]]]]]],[[[92,[53]]],[[35,[[34,[88]]]]]],[[[92,[53]],[0,[95,96,61]]],35],[[[98,[97]]],[[79,[[34,[[4,[2]]]]]]]],[[[90,[[0,[53,54]]]],19,19,19,19,61],35],[[94,34],[[79,[40]]]],[[21,21,21,21],88],[[[93,[53]]]],[88,[[4,[2]]]],[88,[[4,[[0,[3,99]]]]]],[[88,2,2],[[4,[[0,[3,99]]]]]],[[]],[[]],[[[4,[2]]],88],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,[[53,25],[[35,[[92,[53]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[[100,[[0,[69,54]]]]],17],[40],[40],[40],[40],[[[100,[[0,[69,54]]]]]],[40],[40],[[[101,[71]],19,19,17],35],[[]],[[]],[[],40],[[],40],[[]],[[]],[[[100,[[0,[69,54]]]]],35],[[[0,[69,54]]],[[35,[[100,[[0,[69,54]]]]]]]],[71,[[101,[71]]]],[[[100,[[0,[69,54]]]]],35],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[[101,[71]],19,19,17],35],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[103,103],[[]],[[]],[[[104,[69]]],17],[[],103],0,[40],[40],[40],[40],[40],[40],[40],[40],[[[104,[69]]]],[18,103],[40],[40],[40],[40],[[[105,[71]],19,19,17],35],[[[105,[71]]],35],[[102,102],25],[[103,103],25],[[102,47],48],[[103,47],48],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[[104,[69]]],35],[69,[[35,[[104,[69]]]]]],[[],[[105,[71]]]],[21,[[105,[71]]]],[[[104,[69]]],35],[[[104,[69]],18,18],35],[[[105,[71]],103]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],0,[[[105,[71]],19,19,17],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[106,[69]]],[[107,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[109,109],[[]],[[]],[[[106,[69]]],17],[[],108],[[],109],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[106,[69]]]],[40],[40],[40],[40],[40],[40],[[[110,[71]],19,19,17],35],[[108,108],25],[[109,109],25],[[108,47],48],[[109,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[[107,[69]]],33],[[[106,[69]]],35],[[[106,[69]]],25],[69,[[35,[[106,[69]]]]]],[71,[[110,[71]]]],[[71,108,109],[[110,[71]]]],[[[111,[69]]],[[79,[40]]]],[[[106,[69]]],35],[[[111,[69]],34],[[79,[40]]]],[[[106,[69]]],39],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[[110,[71]],19,19,17],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[112,[[11,[113]]]],[112,[[11,[114]]]],[112,[[11,[115]]]],[112,[[11,[116]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[118,118],[114,114],[115,115],[116,116],[113,113],[119,119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[120,[69]]],17],0,[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[120,[69]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[121,[71]],19,19,17],35],0,0,0,[[117,117],25],[[118,118],25],[[117,47],48],[[118,47],48],[[114,47],48],[[115,47],48],[[116,47],48],[[113,47],48],[[119,47],48],[[]],[[]],[115,112],[[]],[114,112],[116,112],[113,112],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,19],0,0,0,0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[120,[69]]]],[[[120,[69]]],35],[118],[112,19],0,0,0,[69,[[35,[[120,[69]]]]]],[71,[[121,[71]]]],[[[120,[69]]],26],[[[120,[69]]],35],[118,117],[[[120,[69]]],118],[112,118],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],0,[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[112,19],0,0,0,0,[[[121,[71]]],[[121,[71]]]],[[[121,[71]],112],[[121,[71]]]],[[[121,[71]],118],[[121,[71]]]],[[112,71],79],[[[121,[71]],19,19,17],35],0,0,[[]],[[]],[[]],[[]],[[[122,[[0,[69,54]]]]],17],[40],[40],[40],[40],[[[122,[[0,[69,54]]]]]],[40],[40],[[[123,[71]],19,19,17],35],[[]],[[]],[[],40],[[],40],[[]],[[]],[[[122,[[0,[69,54]]]]],35],[[[0,[69,54]]],[[35,[[122,[[0,[69,54]]]]]]]],[71,[[123,[71]]]],[[[122,[[0,[69,54]]]]],26],[[[122,[[0,[69,54]]]]],35],[[[122,[[0,[69,54]]]]],39],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[[123,[71]],19,19,17],35],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[124,[[0,[69,54]]]]],17],[40],[40],[40],[40],[40],[40],[[[124,[[0,[69,54]]]]]],[40],[40],[40],[[[125,[[0,[71,54]]]],19,19,17],35],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[[124,[[0,[69,54]]]]],35],[[],[[66,[124,77]]]],[[[0,[71,54]]],[[125,[[0,[71,54]]]]]],[126,[[79,[40]]]],[[[124,[[0,[69,54]]]]],35],[[126,34],[[79,[40]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[[125,[[0,[71,54]]]],19,19,17],35],0,[[]],[[]],[[[127,[69]]],17],[40],[40],[[[127,[69]]]],[40],[[]],[[],40],[[]],[[[127,[69]]],35],[69,[[35,[[127,[69]]]]]],[[[127,[69]]],35],[[],66],[[],66],[[],67],0,0,0,[[]],[[]],[[]],[[]],[128,128],[[]],[[[129,[69]]],[[35,[128]]]],[[],128],[40],[40],[40],[40],[40],[40],[[128,47],48],0,[[]],[[]],0,[[],40],[[],40],[[]],[[]],0,[69,[[129,[69]]]],0,[[]],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[131,131],[132,132],[133,133],[[]],[[]],[[]],[[]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[130,130],25],[[131,131],25],[[132,132],25],[[133,133],25],[[77,47],48],[[77,47],[[66,[134]]]],[[135,47],[[66,[134]]]],[[135,47],48],[[130,47],48],[[136,47],[[66,[134]]]],[[136,47],48],[[137,47],[[66,[134]]]],[[137,47],48],[[131,47],48],[[138,47],[[66,[134]]]],[[138,47],48],[[139,47],48],[[139,47],[[66,[134]]]],[[132,47],48],[[133,47],48],[[133,47],[[66,[134]]]],[135,133],[136,133],[138,133],[140,77],[[]],[141,77],[[]],[133,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,133],[24,133],[[133,130],135],[133,136],[133,138],[131,137],[132,139],[130],[131],[132],[133],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,130],[137,131],[139,132],[[133,[68,[[56,[142]]]]],136],[[133,[68,[[56,[142]]]]],138],[143],[143],[143],[143],[143],[143],[77,[[11,[142]]]],[136,[[11,[142]]]],[137,[[11,[142]]]],[138,[[11,[142]]]],[[]],[[]],[[]],[[]],[[],144],[[],144],[[],144],[[],144],[[],144],[[],144],[[],144],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[12,12],[12],[12,12],[12],[12,[[66,[145,141]]]],[12,[[66,[146,141]]]],[12,[[66,[145,141]]]],[[[146,[37]],19,19]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[65],[[[145,[37]]]],[[[146,[37]]]],0,0,[[[12,[28]]],[[12,[28]]]],[65,65],[[[145,[[0,[28,37]]]]],[[145,[[0,[28,37]]]]]],[[[146,[[0,[28,37]]]]],[[146,[[0,[28,37]]]]]],[141,141],[147,147],[[]],[[]],[[]],[[]],[[]],[[]],0,[[21,19,19],65],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[145,[37]]]],[[[146,[37]]]],[40],[40],[40],[40],[40],[40],[[65,65],25],[[141,141],25],[[147,147],25],[12],[65],[[12,40],25],[[65,40],25],[[[145,[37]]],12],[[[146,[37]]],12],[[[12,[49]],47],48],[[65,47],48],[[[145,[[0,[49,37]]]],47],48],[[[146,[[0,[49,37]]]],47],48],[[141,47],48],[[141,47],48],[[147,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[12,21,19,19],11],[[[145,[37]],21,19,19],11],[[[146,[37]],21,19,19],11],[[[145,[37]],19,19]],[[[146,[37]],19,19]],[[[146,[37]],19,19]],[[12,21,19,19],11],[[[145,[37]],21,19,19],11],[[[146,[37]],21,19,19],11],[12,25],[65,25],[65],[141],[147],0,0,[12,11],[[[145,[37]]]],[[[146,[37]]]],[12,11],[[[145,[37]]]],[[[146,[37]]]],[[12,21,19,19],25],[[65,21,19,19],25],[[[145,[37]],19,19],25],[[[146,[37]],19,19],25],[[12,21,19,19],40],[[65,21,19,19],40],[12],[[12,21,19,19],[[11,[40]]]],[[65,21,19,19],[[11,[40]]]],[[12,40,40,40],[[11,[40]]]],[[65,40,40,40],[[11,[40]]]],[12],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[145,[37]]],[[145,[37]]]],[[[146,[37]]],[[146,[37]]]],[[[146,[37]]],[[146,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[145,[37]]],12],[[[146,[37]]],12],[[12,147],25],[[65,147],25],0,[12,[[11,[40]]]],[65,[[11,[40]]]],[[[145,[37]]],40],[[[146,[37]]],40],[[147,147],[[11,[58]]]],[143],[[[146,[37]],19,19]],[[21,19,19],65],[[[145,[37]]]],[[[146,[37]]]],0,[[12,21,19,19]],[[65,21,19,19]],[[[145,[37]],19,19]],[[[146,[37]],19,19]],[12],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[],144],[12,[[12,[34]]]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[12,[[66,[10]]]],[[[145,[37]]],[[66,[[146,[37]]]]]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],0,0,[[19,19],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[98,[97]]],[[79,[[34,[[4,[2]]]]]]]],[[21,21,21,21],88],[[[4,[2]]],88],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[10,[34]]]],[[]],[[]],0,[62,62],[[]],0,0,[[19,19,19,19],20],[[19,19,19,19],20],[40],[40],0,[40],[[62,62],25],[[],[[10,[34]]]],[[],[[10,[34]]]],[10,35],[[]],[[],[[10,[34]]]],[10,35],[[]],[[62,47],48],[[]],0,[[]],0,0,[[],40],[[]],0,[[19,19]],[[19,19]],[[19,19]],[[19,19,62],[[10,[34]]]],[[],[[10,[34]]]],[10,35],[[]],[[],[[10,[34]]]],[10,35],[[],[[10,[34]]]],[10,35],[[19,19],[[10,[34]]]],[[]],[[]],[[],66],[[],66],[[],67],[[2,22],[[10,[34]]]],[[]],0,0,0,[[]],[[]],[22,[[10,[34]]]],[22],[148,148],[[]],[2,[[10,[34]]]],[2],[40],[40],[10],[40],[[]],[[],[[10,[6,34]]]],[[],25],[148,25],[22,[[10,[34]]]],[22],[10,[[10,[[6,[21]],[34,[21]]]]]],[[],40],[[148,6],40],[[],40],[[]],[[]],[40,11],[[148,40],11],[[]],[[148,6]],[[]],[[],66],[[],66],[[],67],0,[[]],[[]],[[[149,[69]]]],[[[149,[[0,[53,54]]]]],[[35,[1]]]],[40],[40],[40],[[[149,[69]]],[[11,[24]]]],[[]],[[],40],[[]],[[[149,[[0,[53,54]]]]],35],[[[149,[69]]],69],[69,[[149,[69]]]],[[],[[79,[[149,[[151,[150]]]]]]]],[[[149,[69]],24]],[[],66],[[],66],[[],67],[[69,24],[[149,[69]]]],[[[149,[[0,[53,54]]]]],[[79,[[149,[[0,[53,54]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[38,38],[[]],[40],[40],[40],[[38,38],25],[[38,47],48],[[]],[38],0,[[],40],[[]],0,[[]],[[],66],[[],66],[[],67],0,0,0,0,0,[[]],[[]],[40],[40],[40],[152,153],[[]],[153,25],[[153,7],40],[153,40],[[],40],[153],[[]],[[153,40],11],[[153,40],11],[[153,7]],[153],[[22,40],153],[[],66],[[],66],[[],67],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[4,"DynamicImage"],[15,"f32"],[8,"Primitive"],[3,"Rgb"],[3,"Bgr"],[3,"Luma"],[3,"Rgba"],[3,"Bgra"],[3,"LumaA"],[3,"ImageBuffer"],[4,"Option"],[3,"FlatSamples"],[6,"GrayImage"],[6,"GrayAlphaImage"],[6,"RgbImage"],[6,"RgbaImage"],[4,"ColorType"],[15,"u16"],[15,"u32"],[3,"SubImage"],[15,"u8"],[15,"i32"],[3,"Frame"],[4,"ImageFormat"],[15,"bool"],[4,"ExtendedColorType"],[3,"Delay"],[8,"Clone"],[4,"ImageOutputFormat"],[3,"Progress"],[8,"Sized"],[3,"Pixels"],[3,"Frames"],[3,"Vec"],[6,"ImageResult"],[15,"str"],[8,"Pixel"],[3,"Rect"],[15,"u64"],[15,"usize"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[8,"PartialEq"],[3,"Global"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"ImageDecoder"],[3,"Duration"],[8,"Hash"],[8,"BufRead"],[8,"Seek"],[8,"Iterator"],[3,"Box"],[8,"GenericImageView"],[4,"Ordering"],[3,"Pixels"],[3,"PixelsMut"],[8,"Fn"],[4,"FilterType"],[3,"Rows"],[3,"RowsMut"],[3,"SampleLayout"],[4,"Result"],[3,"TypeId"],[8,"Into"],[8,"Read"],[3,"BmpDecoder"],[8,"Write"],[3,"BmpEncoder"],[3,"DdsDecoder"],[4,"DXTVariant"],[3,"DxtDecoder"],[3,"DxtEncoder"],[4,"ImageError"],[3,"DxtReader"],[6,"Result"],[3,"FarbfeldDecoder"],[3,"FarbfeldEncoder"],[3,"FarbfeldReader"],[4,"SeekFrom"],[4,"Repeat"],[3,"GifDecoder"],[3,"GifEncoder"],[3,"GifReader"],[3,"Rgbe8Pixel"],[3,"HdrMetadata"],[3,"HdrAdapter"],[3,"HdrEncoder"],[3,"HdrDecoder"],[3,"HdrImageDecoderIterator"],[3,"HdrReader"],[8,"Send"],[8,"Sync"],[3,"Path"],[8,"AsRef"],[8,"Zero"],[3,"IcoDecoder"],[3,"IcoEncoder"],[4,"PixelDensityUnit"],[3,"PixelDensity"],[3,"JpegDecoder"],[3,"JpegEncoder"],[3,"PngDecoder"],[3,"ApngDecoder"],[4,"CompressionType"],[4,"FilterType"],[3,"PngEncoder"],[3,"PngReader"],[3,"PnmHeader"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"SampleEncoding"],[4,"PNMSubtype"],[4,"ArbitraryTuplType"],[3,"PnmDecoder"],[3,"PnmEncoder"],[3,"TgaDecoder"],[3,"TgaEncoder"],[3,"TiffDecoder"],[3,"TiffEncoder"],[3,"TiffReader"],[3,"WebPDecoder"],[3,"Frame"],[3,"Vp8Decoder"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"Error"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[3,"Error"],[4,"Error"],[8,"Error"],[3,"Demand"],[3,"String"],[3,"View"],[3,"ViewMut"],[4,"NormalForm"],[3,"BiLevel"],[3,"Reader"],[3,"File"],[3,"BufReader"],[3,"NeuQuant"],[3,"NeuQuant"],[8,"GenericImage"],[8,"EncodableLayout"],[8,"AnimationDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[8,"ConvertBuffer"],[8,"ColorMap"]]},\
"inflector":{"doc":"Adds String based inflections for Rust. Snake, kebab, …","t":[8,8,0,10,10,10,10,10,10,10,10,10,10,0,10,10,0,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,0,5,5],"n":["Inflector","InflectorNumbers","cases","deordinalize","is_camel_case","is_foreign_key","is_kebab_case","is_pascal_case","is_screaming_snake_case","is_sentence_case","is_snake_case","is_title_case","is_train_case","numbers","ordinalize","ordinalize","suffix","to_camel_case","to_foreign_key","to_kebab_case","to_pascal_case","to_screaming_snake_case","to_sentence_case","to_snake_case","to_title_case","to_train_case","camelcase","classcase","kebabcase","pascalcase","screamingsnakecase","sentencecase","snakecase","tablecase","titlecase","traincase","is_camel_case","to_camel_case","is_kebab_case","to_kebab_case","is_pascal_case","to_pascal_case","is_screaming_snake_case","to_screaming_snake_case","is_sentence_case","to_sentence_case","is_snake_case","to_snake_case","is_title_case","to_title_case","is_train_case","to_train_case","deordinalize","ordinalize","deordinalize","ordinalize","foreignkey","is_foreign_key","to_foreign_key"],"q":["inflector","","","","","","","","","","","","","","","","","","","","","","","","","","inflector::cases","","","","","","","","","","inflector::cases::camelcase","","inflector::cases::kebabcase","","inflector::cases::pascalcase","","inflector::cases::screamingsnakecase","","inflector::cases::sentencecase","","inflector::cases::snakecase","","inflector::cases::titlecase","","inflector::cases::traincase","","inflector::numbers","","inflector::numbers::deordinalize","inflector::numbers::ordinalize","inflector::suffix","inflector::suffix::foreignkey",""],"d":["","","Provides case inflections","","","","","","","","","","","Provides number inflections","","","Provides suffix inflections","","","","","","","","","","Provides conversion to and detection of camel case strings.","Provides conversion to and detection of class case strings.","Provides conversion to and detection of kebab case strings.","Provides conversion to pascal case strings.","Provides conversion to and detection of screaming snake …","Provides conversion to and detection of sentence case …","Provides conversion to and detection of snake case strings.","Provides conversion to and detection of table case strings.","Provides conversion to and detection of title case strings.","Provides conversion to and detection of train case strings.","Determines if a <code>&amp;str</code> is camelCase bool``","Converts a <code>&amp;str</code> to camelCase <code>String</code>","Determines if a <code>&amp;str</code> is <code>kebab-case</code>","Converts a <code>&amp;str</code> to <code>kebab-case</code> <code>String</code>","Determines if a <code>&amp;str</code> is pascalCase bool``","Converts a <code>&amp;str</code> to pascalCase <code>String</code>","Determines of a <code>&amp;str</code> is <code>SCREAMING_SNAKE_CASE</code>","Converts a <code>&amp;str</code> to <code>SCREAMING_SNAKE_CASE</code> <code>String</code>","Determines of a <code>&amp;str</code> is <code>Sentence case</code>","Converts a <code>&amp;str</code> to <code>Sentence case</code> <code>String</code>","Determines of a <code>&amp;str</code> is <code>snake_case</code>","Converts a <code>&amp;str</code> to <code>snake_case</code> <code>String</code>","Determines if a <code>&amp;str</code> is <code>Title Case</code>","Converts a <code>&amp;str</code> to <code>Title Case</code> <code>String</code>","Determines if a <code>&amp;str</code> is <code>Train-Case</code>","Converts a <code>&amp;str</code> to <code>Train-Case</code> <code>String</code>","Provides deordinalization of a string.","Provides ordinalization of a string.","Deorginalizes a <code>&amp;str</code>","Orginalizes a <code>&amp;str</code>","Provides foreign key conversion for String.","Determines if a <code>&amp;str</code> is a <code>foreign_key</code>","Converts a <code>&amp;str</code> to a <code>foreign_key</code>"],"i":[0,0,0,4,4,4,4,4,4,4,4,4,4,0,4,5,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],[3,2],[3,1],0,0,[3,1],[3,1],0,[3,2],[3,1]],"p":[[3,"String"],[15,"bool"],[15,"str"],[8,"Inflector"],[8,"InflectorNumbers"]]},\
"jpeg_decoder":{"doc":"This crate contains a JPEG decoder.","t":[13,13,13,13,3,4,13,13,3,13,13,13,13,13,4,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["ArithmeticEntropyCoding","CMYK32","ComponentCount","DNL","Decoder","Error","Format","Hierarchical","ImageInfo","Internal","Io","L8","Lossless","NonIntegerSubsamplingRatio","PixelFormat","RGB24","SamplePrecision","SubsamplingRatio","Unsupported","UnsupportedFeature","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","height","icc_profile","info","init","init","init","init","init","into","into","into","into","into","new","pixel_bytes","pixel_format","provide","read_info","scale","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width"],"q":["jpeg_decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["JPEG using arithmetic entropy coding instead of Huffman …","CMYK, 8 bits per channel","Number of components in an image. 1, 3 and 4 components …","An image can specify a zero height in the frame header and …","JPEG decoder","Errors that can occur while decoding a JPEG image.","The image is not formatted properly. The string contains …","Hierarchical JPEG.","Represents metadata of an image.","An internal error occurred while decoding the image.","An I/O error occurred while decoding the image.","Luminance (grayscale), 8 bits","Lossless JPEG.","A subsampling ratio not representable as an integer.","An enumeration over combinations of color spaces and bit …","RGB, 8 bits per channel","Sample precision in bits. 8 bit sample precision is what …","Subsampling ratio.","The image makes use of a JPEG feature not (currently) …","An enumeration over JPEG features (currently) unsupported …","","","","","","","","","","","","","","","Decodes the image and returns the decoded pixels if …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","The height of the image, in pixels.","Returns the embeded icc profile if the image contains one.","Returns metadata about the image.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>Decoder</code> using the reader <code>reader</code>.","Determine the size in bytes of each pixel in this format","The pixel format of the image.","","Tries to read metadata from the image without decoding it.","Configure the decoder to scale the image during decoding.","","","","","","","","","","","","","","","","","","","","The width of the image, in pixels."],"i":[13,1,13,13,0,0,7,13,0,7,7,1,13,13,0,1,13,13,7,0,4,1,2,13,7,4,1,2,13,7,1,2,1,2,4,4,1,2,13,7,4,1,2,13,7,4,1,2,13,7,1,2,1,2,13,7,7,4,1,2,13,7,7,2,4,4,4,1,2,13,7,4,1,2,13,7,4,1,2,7,4,4,7,1,2,7,4,1,2,13,7,4,1,2,13,7,4,1,2,13,7,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[[4,[3]]],[[8,[[6,[5]],7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[1,1],10],[[2,2],10],[[1,11],12],[[2,11],12],[[13,11],12],[[7,11],12],[[7,11],12],[[]],[[]],[[]],[[]],[14,7],[[]],0,[[[4,[3]]],[[15,[[6,[5]]]]]],[[[4,[3]]],[[15,[2]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[3,[[4,[3]]]],[1,9],0,[16],[[[4,[3]]],[[8,[7]]]],[[[4,[3]],17,17],[[8,[7]]]],[7,[[15,[18]]]],[[]],[[]],[[],19],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20],[[],20],[[],20],[[],20],0],"p":[[4,"PixelFormat"],[3,"ImageInfo"],[8,"Read"],[3,"Decoder"],[15,"u8"],[3,"Vec"],[4,"Error"],[4,"Result"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"UnsupportedFeature"],[3,"Error"],[4,"Option"],[3,"Demand"],[15,"u16"],[8,"Error"],[3,"String"],[3,"TypeId"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[[]],0],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","tn":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ACCOUNTING","AF_APPLETALK","AF_CCITT","AF_CHAOS","AF_CNT","AF_COIP","AF_DATAKIT","AF_DECnet","AF_DLI","AF_E164","AF_ECMA","AF_HYLINK","AF_IMPLINK","AF_INET","AF_INET6","AF_IPX","AF_ISDN","AF_ISO","AF_LAT","AF_LINK","AF_LOCAL","AF_NATM","AF_NDRV","AF_NETBIOS","AF_NS","AF_OSI","AF_PPP","AF_PUP","AF_ROUTE","AF_SIP","AF_SNA","AF_SYSTEM","AF_SYS_CONTROL","AF_UNIX","AF_UNSPEC","AIO_ALLDONE","AIO_CANCELED","AIO_LISTIO_MAX","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_DEFAULT","AI_MASK","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_UNUSABLE","AI_V4MAPPED","AI_V4MAPPED_CFG","ALTWERASE","ALT_DIGITS","AM_STR","ARPOP_REPLY","ARPOP_REQUEST","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","ATTR_BIT_MAP_COUNT","ATTR_CMNEXT_CLONEID","ATTR_CMNEXT_EXT_FLAGS","ATTR_CMNEXT_LINKID","ATTR_CMNEXT_NOFIRMLINKPATH","ATTR_CMNEXT_PRIVATESIZE","ATTR_CMNEXT_REALDEVID","ATTR_CMNEXT_REALFSID","ATTR_CMNEXT_RECURSIVE_GENCOUNT","ATTR_CMNEXT_RELPATH","ATTR_CMN_ACCESSMASK","ATTR_CMN_ACCTIME","ATTR_CMN_ADDEDTIME","ATTR_CMN_BKUPTIME","ATTR_CMN_CHGTIME","ATTR_CMN_CRTIME","ATTR_CMN_DATA_PROTECT_FLAGS","ATTR_CMN_DEVID","ATTR_CMN_DOCUMENT_ID","ATTR_CMN_EXTENDED_SECURITY","ATTR_CMN_FILEID","ATTR_CMN_FLAGS","ATTR_CMN_FNDRINFO","ATTR_CMN_FSID","ATTR_CMN_FULLPATH","ATTR_CMN_GEN_COUNT","ATTR_CMN_GRPID","ATTR_CMN_GRPUUID","ATTR_CMN_MODTIME","ATTR_CMN_NAME","ATTR_CMN_OBJID","ATTR_CMN_OBJPERMANENTID","ATTR_CMN_OBJTAG","ATTR_CMN_OBJTYPE","ATTR_CMN_OWNERID","ATTR_CMN_PARENTID","ATTR_CMN_PAROBJID","ATTR_CMN_RETURNED_ATTRS","ATTR_CMN_SCRIPT","ATTR_CMN_USERACCESS","ATTR_CMN_UUID","ATTR_DIR_ALLOCSIZE","ATTR_DIR_DATALENGTH","ATTR_DIR_ENTRYCOUNT","ATTR_DIR_IOBLOCKSIZE","ATTR_DIR_LINKCOUNT","ATTR_DIR_MOUNTSTATUS","ATTR_FILE_ALLOCSIZE","ATTR_FILE_DATAALLOCSIZE","ATTR_FILE_DATALENGTH","ATTR_FILE_DEVTYPE","ATTR_FILE_FORKCOUNT","ATTR_FILE_FORKLIST","ATTR_FILE_IOBLOCKSIZE","ATTR_FILE_LINKCOUNT","ATTR_FILE_RSRCALLOCSIZE","ATTR_FILE_RSRCLENGTH","ATTR_FILE_TOTALSIZE","ATTR_VOL_ALLOCATIONCLUMP","ATTR_VOL_ATTRIBUTES","ATTR_VOL_CAPABILITIES","ATTR_VOL_DIRCOUNT","ATTR_VOL_ENCODINGSUSED","ATTR_VOL_FILECOUNT","ATTR_VOL_FSTYPE","ATTR_VOL_INFO","ATTR_VOL_IOBLOCKSIZE","ATTR_VOL_MAXOBJCOUNT","ATTR_VOL_MINALLOCATION","ATTR_VOL_MOUNTEDDEVICE","ATTR_VOL_MOUNTFLAGS","ATTR_VOL_MOUNTPOINT","ATTR_VOL_NAME","ATTR_VOL_OBJCOUNT","ATTR_VOL_QUOTA_SIZE","ATTR_VOL_RESERVED_SIZE","ATTR_VOL_SIGNATURE","ATTR_VOL_SIZE","ATTR_VOL_SPACEAVAIL","ATTR_VOL_SPACEFREE","ATTR_VOL_SPACEUSED","ATTR_VOL_UUID","AT_EACCESS","AT_FDCWD","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","B0","B110","B115200","B1200","B134","B14400","B150","B1800","B19200","B200","B230400","B2400","B28800","B300","B38400","B4800","B50","B57600","B600","B7200","B75","B76800","B9600","BIOCFLUSH","BIOCGBLEN","BIOCGDLT","BIOCGDLTLIST","BIOCGETIF","BIOCGHDRCMPLT","BIOCGRSIG","BIOCGRTIMEOUT","BIOCGSEESENT","BIOCGSTATS","BIOCIMMEDIATE","BIOCPROMISC","BIOCSBLEN","BIOCSDLT","BIOCSETF","BIOCSETFNR","BIOCSETIF","BIOCSHDRCMPLT","BIOCSRSIG","BIOCSRTIMEOUT","BIOCSSEESENT","BIOCVERSION","BOOT_TIME","BPF_ALIGNMENT","BRKINT","BS0","BS1","BSDLY","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_OBJERR","CCCryptorStatus","CCRNGStatus","CCRandomGenerateBytes","CCStatus","CIGNORE","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_MONOTONIC","CLOCK_MONOTONIC_RAW","CLOCK_MONOTONIC_RAW_APPROX","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","CLOCK_UPTIME_RAW","CLOCK_UPTIME_RAW_APPROX","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CODESET","CONNECT_DATA_AUTHENTICATED","CONNECT_DATA_IDEMPOTENT","CONNECT_RESUME_ON_READ_WRITE","COPYFILE_ACL","COPYFILE_CHECK","COPYFILE_CLONE","COPYFILE_CLONE_FORCE","COPYFILE_CONTINUE","COPYFILE_COPY_DATA","COPYFILE_COPY_XATTR","COPYFILE_DATA","COPYFILE_DATA_SPARSE","COPYFILE_ERR","COPYFILE_EXCL","COPYFILE_FINISH","COPYFILE_METADATA","COPYFILE_MOVE","COPYFILE_NOFOLLOW","COPYFILE_NOFOLLOW_DST","COPYFILE_NOFOLLOW_SRC","COPYFILE_PACK","COPYFILE_PRESERVE_DST_TRACKED","COPYFILE_PROGRESS","COPYFILE_QUIT","COPYFILE_RECURSE_DIR","COPYFILE_RECURSE_DIR_CLEANUP","COPYFILE_RECURSE_ERROR","COPYFILE_RECURSE_FILE","COPYFILE_RECURSIVE","COPYFILE_RUN_IN_PLACE","COPYFILE_SECURITY","COPYFILE_SKIP","COPYFILE_START","COPYFILE_STAT","COPYFILE_UNLINK","COPYFILE_UNPACK","COPYFILE_VERBOSE","COPYFILE_XATTR","CPU_STATE_IDLE","CPU_STATE_MAX","CPU_STATE_NICE","CPU_STATE_SYSTEM","CPU_STATE_USER","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTLFLAG_ANYBODY","CTLFLAG_KERN","CTLFLAG_LOCKED","CTLFLAG_MASKED","CTLFLAG_NOAUTO","CTLFLAG_NOLOCK","CTLFLAG_OID2","CTLFLAG_RD","CTLFLAG_RW","CTLFLAG_SECURE","CTLFLAG_WR","CTLIOCGINFO","CTLTYPE","CTLTYPE_INT","CTLTYPE_NODE","CTLTYPE_OPAQUE","CTLTYPE_QUAD","CTLTYPE_STRING","CTLTYPE_STRUCT","CTL_DEBUG","CTL_DEBUG_MAXID","CTL_DEBUG_NAME","CTL_DEBUG_VALUE","CTL_HW","CTL_KERN","CTL_MACHDEP","CTL_MAXID","CTL_NET","CTL_UNSPEC","CTL_USER","CTL_VFS","CTL_VM","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DEAD_PROCESS","DIR","DIR_MNTSTATUS_MNTPOINT","DLT_ARCNET","DLT_ATM_RFC1483","DLT_AX25","DLT_CHAOS","DLT_EN10MB","DLT_EN3MB","DLT_FDDI","DLT_IEEE802","DLT_LOOP","DLT_NULL","DLT_PPP","DLT_PRONET","DLT_RAW","DLT_SLIP","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_MD_ORDER","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EAUTH","EBADARCH","EBADEXEC","EBADF","EBADMACHO","EBADMSG","EBADRPC","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDEVERR","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EFTYPE","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELAST","ELOOP","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENEEDAUTH","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOATTR","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPOLICY","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROCLIM","EPROCUNAVAIL","EPROGMISMATCH","EPROGUNAVAIL","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","EPWROFF","EQFULL","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMOTE","EROFS","ERPCMISMATCH","ESHLIBVERS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUSERS","EVFILT_AIO","EVFILT_FS","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VM","EVFILT_VNODE","EVFILT_WRITE","EV_ADD","EV_CLEAR","EV_DELETE","EV_DISABLE","EV_DISPATCH","EV_ENABLE","EV_EOF","EV_ERROR","EV_FLAG0","EV_FLAG1","EV_ONESHOT","EV_OOBAND","EV_POLL","EV_RECEIPT","EV_SYSFLAGS","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","EXTA","EXTB","EXTPROC","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIODTYPE","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOSETOWN","FLUSHO","FOPEN_MAX","FSOPT_ATTR_CMN_EXTENDED","FSOPT_NOFOLLOW","FSOPT_NOFOLLOW_ANY","FSOPT_PACK_INVAL_ATTRS","FSOPT_REPORT_FULLSIZE","FSOPT_RETURN_REALDEV","F_ALLOCATEALL","F_ALLOCATECONTIG","F_BARRIERFSYNC","F_DUPFD","F_DUPFD_CLOEXEC","F_FREEZE_FS","F_FULLFSYNC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETPATH","F_GETPATH_NOFIRMLINK","F_GLOBAL_NOCACHE","F_LOCK","F_LOG2PHYS","F_LOG2PHYS_EXT","F_NOCACHE","F_NODIRECT","F_OK","F_PEOFPOSMODE","F_PREALLOCATE","F_RDADVISE","F_RDAHEAD","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_TEST","F_THAW_FS","F_TLOCK","F_ULOCK","F_UNLCK","F_VOLPOSMODE","F_WRLCK","GETALL","GETNCNT","GETPID","GETVAL","GETZCNT","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRPQUOTA","HOST_CPU_LOAD_INFO","HOST_CPU_LOAD_INFO_COUNT","HOST_EXPIRED_TASK_INFO","HOST_EXTMOD_INFO64","HOST_LOAD_INFO","HOST_VM_INFO","HOST_VM_INFO64","HOST_VM_INFO64_COUNT","HUPCL","HW_AVAILCPU","HW_BUS_FREQ","HW_BYTEORDER","HW_CACHELINE","HW_CPU_FREQ","HW_DISKNAMES","HW_DISKSTATS","HW_EPOCH","HW_FLOATINGPT","HW_L1DCACHESIZE","HW_L1ICACHESIZE","HW_L2CACHESIZE","HW_L2SETTINGS","HW_L3CACHESIZE","HW_L3SETTINGS","HW_MACHINE","HW_MACHINE_ARCH","HW_MAXID","HW_MEMSIZE","HW_MODEL","HW_NCPU","HW_PAGESIZE","HW_PHYSMEM","HW_PRODUCT","HW_TARGET","HW_TB_FREQ","HW_USERMEM","HW_VECTORUNIT","ICANON","ICRNL","IEXTEN","IFF_ALLMULTI","IFF_ALTPHYS","IFF_BROADCAST","IFF_DEBUG","IFF_LINK0","IFF_LINK1","IFF_LINK2","IFF_LOOPBACK","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_OACTIVE","IFF_POINTOPOINT","IFF_PROMISC","IFF_RUNNING","IFF_SIMPLEX","IFF_UP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INT_MAX","INT_MIN","IOV_MAX","IPC_CREAT","IPC_EXCL","IPC_M","IPC_NOWAIT","IPC_PRIVATE","IPC_R","IPC_RMID","IPC_SET","IPC_STAT","IPC_W","IPPROTO_3PC","IPPROTO_ADFS","IPPROTO_AH","IPPROTO_AHIP","IPPROTO_APES","IPPROTO_ARGUS","IPPROTO_AX25","IPPROTO_BHA","IPPROTO_BLT","IPPROTO_BRSATMON","IPPROTO_CFTP","IPPROTO_CHAOS","IPPROTO_CMTP","IPPROTO_CPHB","IPPROTO_CPNX","IPPROTO_DDP","IPPROTO_DGP","IPPROTO_DIVERT","IPPROTO_DONE","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EMCON","IPPROTO_ENCAP","IPPROTO_EON","IPPROTO_ESP","IPPROTO_ETHERIP","IPPROTO_FRAGMENT","IPPROTO_GGP","IPPROTO_GMTP","IPPROTO_GRE","IPPROTO_HELLO","IPPROTO_HMP","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDPR","IPPROTO_IDRP","IPPROTO_IGMP","IPPROTO_IGP","IPPROTO_IGRP","IPPROTO_IL","IPPROTO_INLSP","IPPROTO_INP","IPPROTO_IP","IPPROTO_IPCOMP","IPPROTO_IPCV","IPPROTO_IPEIP","IPPROTO_IPIP","IPPROTO_IPPC","IPPROTO_IPV6","IPPROTO_IRTP","IPPROTO_KRYPTOLAN","IPPROTO_LARP","IPPROTO_LEAF1","IPPROTO_LEAF2","IPPROTO_MAX","IPPROTO_MEAS","IPPROTO_MHRP","IPPROTO_MICP","IPPROTO_MTP","IPPROTO_MUX","IPPROTO_ND","IPPROTO_NHRP","IPPROTO_NONE","IPPROTO_NSP","IPPROTO_NVPII","IPPROTO_OSPFIGP","IPPROTO_PGM","IPPROTO_PIGP","IPPROTO_PIM","IPPROTO_PRM","IPPROTO_PUP","IPPROTO_PVP","IPPROTO_RAW","IPPROTO_RCCMON","IPPROTO_RDP","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RVD","IPPROTO_SATEXPAK","IPPROTO_SATMON","IPPROTO_SCCSP","IPPROTO_SCTP","IPPROTO_SDRP","IPPROTO_SEP","IPPROTO_SRPC","IPPROTO_ST","IPPROTO_SVMTP","IPPROTO_SWIPE","IPPROTO_TCF","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TPXX","IPPROTO_TRUNK1","IPPROTO_TRUNK2","IPPROTO_TTP","IPPROTO_UDP","IPPROTO_VINES","IPPROTO_VISA","IPPROTO_VMTP","IPPROTO_WBEXPAK","IPPROTO_WBMON","IPPROTO_WSN","IPPROTO_XNET","IPPROTO_XTP","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOTECT","IPV6_BOUND_IF","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_HOPLIMIT","IPV6_JOIN_GROUP","IPV6_LEAVE_GROUP","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_PKTINFO","IPV6_RECVPKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_BOUND_IF","IP_DONTFRAG","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_PKTINFO","IP_RECVDSTADDR","IP_RECVIF","IP_RECVTOS","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","ISIG","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","KERN_ABORTED","KERN_AFFINITY","KERN_AIOMAX","KERN_AIOPROCMAX","KERN_AIOTHREADS","KERN_ALREADY_IN_SET","KERN_ALREADY_WAITING","KERN_ARGMAX","KERN_BOOTFILE","KERN_BOOTTIME","KERN_CHECKOPENEVT","KERN_CLASSIC","KERN_CLASSICHANDLER","KERN_CLOCKRATE","KERN_CODESIGN_ERROR","KERN_COREDUMP","KERN_COREFILE","KERN_DEFAULT_SET","KERN_DOMAINNAME","KERN_DUMMY","KERN_DUMPDEV","KERN_EXCEPTION_PROTECTED","KERN_EXEC","KERN_FAILURE","KERN_FILE","KERN_HOSTID","KERN_HOSTNAME","KERN_INSUFFICIENT_BUFFER_SIZE","KERN_INVALID_ADDRESS","KERN_INVALID_ARGUMENT","KERN_INVALID_CAPABILITY","KERN_INVALID_HOST","KERN_INVALID_LEDGER","KERN_INVALID_MEMORY_CONTROL","KERN_INVALID_NAME","KERN_INVALID_OBJECT","KERN_INVALID_POLICY","KERN_INVALID_PROCESSOR_SET","KERN_INVALID_RIGHT","KERN_INVALID_SECURITY","KERN_INVALID_TASK","KERN_INVALID_VALUE","KERN_IPC","KERN_JOB_CONTROL","KERN_KDBUFWAIT","KERN_KDCPUMAP","KERN_KDDFLAGS","KERN_KDEBUG","KERN_KDEFLAGS","KERN_KDENABLE","KERN_KDGETBUF","KERN_KDGETENTROPY","KERN_KDGETREG","KERN_KDPIDEX","KERN_KDPIDTR","KERN_KDREADCURTHRMAP","KERN_KDREADTR","KERN_KDREMOVE","KERN_KDSETBUF","KERN_KDSETREG","KERN_KDSETRTCDEC","KERN_KDSETUP","KERN_KDSET_TYPEFILTER","KERN_KDTHRMAP","KERN_KDWRITEMAP","KERN_KDWRITETR","KERN_LOCK_OWNED","KERN_LOCK_OWNED_SELF","KERN_LOCK_SET_DESTROYED","KERN_LOCK_UNSTABLE","KERN_LOGSIGEXIT","KERN_LOW_PRI_DELAY","KERN_LOW_PRI_WINDOW","KERN_MAXFILES","KERN_MAXFILESPERPROC","KERN_MAXID","KERN_MAXPARTITIONS","KERN_MAXPROC","KERN_MAXPROCPERUID","KERN_MAXVNODES","KERN_MEMORY_DATA_MOVED","KERN_MEMORY_ERROR","KERN_MEMORY_FAILURE","KERN_MEMORY_PRESENT","KERN_MEMORY_RESTART_COPY","KERN_NAME_EXISTS","KERN_NETBOOT","KERN_NGROUPS","KERN_NISDOMAINNAME","KERN_NODE_DOWN","KERN_NOT_DEPRESSED","KERN_NOT_IN_SET","KERN_NOT_RECEIVER","KERN_NOT_SUPPORTED","KERN_NOT_WAITING","KERN_NO_ACCESS","KERN_NO_SPACE","KERN_NTP_PLL","KERN_NX_PROTECTION","KERN_OPENEVT_PROC","KERN_OPERATION_TIMED_OUT","KERN_OSRELDATE","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OSVERSION","KERN_POLICY_LIMIT","KERN_POLICY_STATIC","KERN_POSIX","KERN_POSIX1","KERN_PROC","KERN_PROCARGS","KERN_PROCARGS2","KERN_PROCDELAYTERM","KERN_PROCNAME","KERN_PROC_ALL","KERN_PROC_LCID","KERN_PROC_PGRP","KERN_PROC_PID","KERN_PROC_RUID","KERN_PROC_SESSION","KERN_PROC_TTY","KERN_PROC_UID","KERN_PROF","KERN_PROTECTION_FAILURE","KERN_PS_STRINGS","KERN_RAGEVNODE","KERN_RAGE_PROC","KERN_RAGE_THREAD","KERN_RESOURCE_SHORTAGE","KERN_RIGHT_EXISTS","KERN_RPC_CONTINUE_ORPHAN","KERN_RPC_SERVER_TERMINATED","KERN_RPC_TERMINATE_ORPHAN","KERN_SAFEBOOT","KERN_SAVED_IDS","KERN_SECURELVL","KERN_SEMAPHORE_DESTROYED","KERN_SHREG_PRIVATIZABLE","KERN_SPECULATIVE_READS","KERN_SUCCESS","KERN_SUGID_COREDUMP","KERN_SYMFILE","KERN_SYSV","KERN_TERMINATED","KERN_TFP","KERN_TFP_POLICY","KERN_TFP_POLICY_DEFAULT","KERN_TFP_POLICY_DENY","KERN_THALTSTACK","KERN_THREADNAME","KERN_TRANSLATE","KERN_TTY","KERN_UNOPENEVT_PROC","KERN_UNRAGE_PROC","KERN_UNRAGE_THREAD","KERN_UPDATEINTERVAL","KERN_UREFS_OVERFLOW","KERN_USRSTACK32","KERN_USRSTACK64","KERN_VERSION","KERN_VNODE","KIPC_MAXSOCKBUF","KIPC_MAX_DATALEN","KIPC_MAX_HDR","KIPC_MAX_LINKHDR","KIPC_MAX_PROTOHDR","KIPC_MBSTAT","KIPC_NMBCLUSTERS","KIPC_SOCKBUF_WASTE","KIPC_SOMAXCONN","KIPC_SOQLIMITCOMPAT","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_SEGMENT","LC_SEGMENT_64","LC_TIME","LC_TIME_MASK","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LOCAL_PEERCRED","LOCAL_PEEREPID","LOCAL_PEEREUUID","LOCAL_PEERPID","LOCAL_PEERUUID","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_INSTALL","LOG_KERN","LOG_LAUNCHD","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NETINFO","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_RAS","LOG_REMOTEAUTH","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","MACH_PORT_NULL","MACH_TASK_BASIC_INFO","MACH_TASK_BASIC_INFO_COUNT","MADV_CAN_REUSE","MADV_DONTNEED","MADV_FREE","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_ZERO_WIRED_PAGES","MAP_ANON","MAP_ANONYMOUS","MAP_COPY","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_HASSEMAPHORE","MAP_JIT","MAP_NOCACHE","MAP_NOEXTEND","MAP_NORESERVE","MAP_PRIVATE","MAP_RENAME","MAP_SHARED","MAXCOMLEN","MAXFREQ","MAXPATHLEN","MAXPHASE","MAXSEC","MAXTC","MAXTHREADNAMESIZE","MAX_KCTL_NAME","MCL_CURRENT","MCL_FUTURE","MDMBUF","MEMORY_OBJECT_NULL","MH_MAGIC","MH_MAGIC_64","MINCORE_INCORE","MINCORE_MODIFIED","MINCORE_MODIFIED_OTHER","MINCORE_REFERENCED","MINCORE_REFERENCED_OTHER","MINSEC","MINSIGSTKSZ","MNT_ASYNC","MNT_AUTOMOUNTED","MNT_CPROTECT","MNT_DEFWRITE","MNT_DONTBROWSE","MNT_DOVOLFS","MNT_EXPORTED","MNT_FORCE","MNT_IGNORE_OWNERSHIP","MNT_JOURNALED","MNT_LOCAL","MNT_MULTILABEL","MNT_NOATIME","MNT_NOBLOCK","MNT_NODEV","MNT_NOEXEC","MNT_NOSUID","MNT_NOUSERXATTR","MNT_NOWAIT","MNT_QUARANTINE","MNT_QUOTA","MNT_RDONLY","MNT_RELOAD","MNT_ROOTFS","MNT_SNAPSHOT","MNT_SYNCHRONOUS","MNT_UNION","MNT_UPDATE","MNT_WAIT","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_PPSMAX","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOF","MSG_EOR","MSG_FLUSH","MSG_HAVEMORE","MSG_HOLD","MSG_OOB","MSG_PEEK","MSG_RCVMORE","MSG_SEND","MSG_TRUNC","MSG_WAITALL","MS_ASYNC","MS_DEACTIVATE","MS_INVALIDATE","MS_KILLPAGES","MS_SYNC","NANOSECOND","NCCS","NET_RT_DUMP","NET_RT_FLAGS","NET_RT_IFLIST","NET_RT_IFLIST2","NEW_TIME","NI_DGRAM","NI_MAXHOST","NI_MAXSERV","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSCOPE","NI_NUMERICSERV","NL0","NL1","NLDLY","NOEXPR","NOFLSH","NOKERNINFO","NOSTR","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_BACKGROUND","NOTE_CHILD","NOTE_CRITICAL","NOTE_DELETE","NOTE_EXEC","NOTE_EXIT","NOTE_EXITSTATUS","NOTE_EXIT_CSERROR","NOTE_EXIT_DECRYPTFAIL","NOTE_EXIT_DETAIL","NOTE_EXIT_DETAIL_MASK","NOTE_EXIT_MEMORY","NOTE_EXTEND","NOTE_FFAND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_FFNOP","NOTE_FFOR","NOTE_FORK","NOTE_LEEWAY","NOTE_LINK","NOTE_LOWAT","NOTE_NONE","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACK","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","NOTE_WRITE","NTP_API","OCRNL","OFDEL","OFILL","OLD_TIME","ONLCR","ONLRET","ONOCR","ONOEOT","OPOST","OS_LOG_TYPE_DEBUG","OS_LOG_TYPE_DEFAULT","OS_LOG_TYPE_ERROR","OS_LOG_TYPE_FAULT","OS_LOG_TYPE_INFO","OS_SIGNPOST_EVENT","OS_SIGNPOST_INTERVAL_BEGIN","OS_SIGNPOST_INTERVAL_END","OS_UNFAIR_LOCK_INIT","OXTABS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_DSYNC","O_EVTONLY","O_EXCL","O_EXLOCK","O_FSYNC","O_NDELAY","O_NOCTTY","O_NOFOLLOW","O_NOFOLLOW_ANY","O_NONBLOCK","O_RDONLY","O_RDWR","O_SHLOCK","O_SYMLINK","O_SYNC","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_APPLETALK","PF_CCITT","PF_CHAOS","PF_CNT","PF_COIP","PF_DATAKIT","PF_DECnet","PF_DLI","PF_ECMA","PF_HYLINK","PF_IMPLINK","PF_INET","PF_INET6","PF_IPX","PF_ISDN","PF_ISO","PF_KEY","PF_LAT","PF_LINK","PF_LOCAL","PF_NATM","PF_NDRV","PF_NETBIOS","PF_NS","PF_OSI","PF_PIP","PF_PPP","PF_PUP","PF_ROUTE","PF_RTIP","PF_SIP","PF_SNA","PF_SYSTEM","PF_UNIX","PF_UNSPEC","PF_XTP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_CLOEXEC_DEFAULT","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETEXEC","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_START_SUSPENDED","PRIO_DARWIN_BG","PRIO_DARWIN_NONUI","PRIO_DARWIN_PROCESS","PRIO_DARWIN_THREAD","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROCESSOR_BASIC_INFO","PROCESSOR_CPU_LOAD_INFO","PROCESSOR_PM_REGS_INFO","PROCESSOR_SET_BASIC_INFO","PROCESSOR_SET_LOAD_INFO","PROCESSOR_TEMPERATURE","PROC_CSM_ALL","PROC_CSM_NOSMT","PROC_CSM_TECS","PROC_PIDPATHINFO_MAXSIZE","PROC_PIDTASKALLINFO","PROC_PIDTASKINFO","PROC_PIDTBSDINFO","PROC_PIDTHREADINFO","PROC_PIDVNODEPATHINFO","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_INTROSPECTION_THREAD_CREATE","PTHREAD_INTROSPECTION_THREAD_DESTROY","PTHREAD_INTROSPECTION_THREAD_START","PTHREAD_INTROSPECTION_THREAD_TERMINATE","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PT_ATTACH","PT_ATTACHEXC","PT_CONTINUE","PT_DENY_ATTACH","PT_DETACH","PT_FIRSTMACH","PT_FORCEQUOTA","PT_KILL","PT_READ_D","PT_READ_I","PT_READ_U","PT_SIGEXC","PT_STEP","PT_THUPDATE","PT_TRACE_ME","PT_WRITE_D","PT_WRITE_I","PT_WRITE_U","P_ALL","P_PGID","P_PID","QCMD","QOS_CLASS_BACKGROUND","QOS_CLASS_DEFAULT","QOS_CLASS_UNSPECIFIED","QOS_CLASS_USER_INITIATED","QOS_CLASS_USER_INTERACTIVE","QOS_CLASS_UTILITY","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETQUOTA","Q_SYNC","RADIXCHAR","RAND_MAX","REG_ASSERT","REG_ATOI","REG_BACKR","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_BASIC","REG_DUMP","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_EMPTY","REG_EPAREN","REG_ERANGE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_INVARG","REG_ITOA","REG_LARGE","REG_NEWLINE","REG_NOMATCH","REG_NOSPEC","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_PEND","REG_STARTEND","REG_TRACE","RENAME_EXCL","RENAME_SWAP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RTAX_AUTHOR","RTAX_BRD","RTAX_DST","RTAX_GATEWAY","RTAX_GENMASK","RTAX_IFA","RTAX_IFP","RTAX_MAX","RTAX_NETMASK","RTA_AUTHOR","RTA_BRD","RTA_DST","RTA_GATEWAY","RTA_GENMASK","RTA_IFA","RTA_IFP","RTA_NETMASK","RTF_BLACKHOLE","RTF_BROADCAST","RTF_CLONING","RTF_CONDEMNED","RTF_DEAD","RTF_DELCLONE","RTF_DONE","RTF_DYNAMIC","RTF_GATEWAY","RTF_GLOBAL","RTF_HOST","RTF_IFREF","RTF_IFSCOPE","RTF_LLINFO","RTF_LOCAL","RTF_MODIFIED","RTF_MULTICAST","RTF_NOIFREF","RTF_PINNED","RTF_PRCLONING","RTF_PROTO1","RTF_PROTO2","RTF_PROTO3","RTF_PROXY","RTF_REJECT","RTF_ROUTER","RTF_STATIC","RTF_UP","RTF_WASCLONED","RTF_XRESOLVE","RTLD_DEFAULT","RTLD_FIRST","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTLD_SELF","RTM_ADD","RTM_CHANGE","RTM_DELADDR","RTM_DELETE","RTM_DELMADDR","RTM_GET","RTM_GET2","RTM_IFINFO","RTM_IFINFO2","RTM_LOCK","RTM_LOSING","RTM_MISS","RTM_NEWADDR","RTM_NEWMADDR","RTM_NEWMADDR2","RTM_OLDADD","RTM_OLDDEL","RTM_REDIRECT","RTM_RESOLVE","RTM_VERSION","RTV_EXPIRE","RTV_HOPCOUNT","RTV_MTU","RTV_RPIPE","RTV_RTT","RTV_RTTVAR","RTV_SPIPE","RTV_SSTHRESH","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_INFO_V0","RUSAGE_INFO_V1","RUSAGE_INFO_V2","RUSAGE_INFO_V3","RUSAGE_INFO_V4","RUSAGE_SELF","R_OK","SAE_ASSOCID_ALL","SAE_ASSOCID_ANY","SAE_CONNID_ALL","SAE_CONNID_ANY","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCALE_PPM","SCHED_FIFO","SCHED_OTHER","SCHED_RR","SCM_CREDS","SCM_RIGHTS","SCM_TIMESTAMP","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SEM_FAILED","SEM_UNDO","SETALL","SETVAL","SF_APPEND","SF_ARCHIVED","SF_IMMUTABLE","SF_SETTABLE","SHMLBA","SHM_R","SHM_RDONLY","SHM_RND","SHM_W","SHUTDOWN_TIME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEMT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGNATURE","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCGIFADDR","SOCK_DGRAM","SOCK_MAXADDRLEN","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_LOCAL","SOL_SOCKET","SOMAXCONN","SO_ACCEPTCONN","SO_BROADCAST","SO_DEBUG","SO_DONTROUTE","SO_DONTTRUNC","SO_ERROR","SO_KEEPALIVE","SO_LABEL","SO_LINGER","SO_LINGER_SEC","SO_NKE","SO_NOADDRERR","SO_NOSIGPIPE","SO_NOTIFYCONFLICT","SO_NP_EXTENSIONS","SO_NREAD","SO_NWRITE","SO_OOBINLINE","SO_PEERLABEL","SO_RANDOMPORT","SO_RCVBUF","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_REUSESHAREUID","SO_SNDBUF","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMP_MONOTONIC","SO_TYPE","SO_USELOOPBACK","SO_WANTMORE","SO_WANTOOBFLAG","SS_DISABLE","SS_ONSTACK","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","ST_NOSUID","ST_RDONLY","SUPERPAGE_NONE","SUPERPAGE_SIZE_2MB","SUPERPAGE_SIZE_ANY","SYSDIR_DIRECTORY_ADMIN_APPLICATION","SYSDIR_DIRECTORY_ALL_APPLICATIONS","SYSDIR_DIRECTORY_ALL_LIBRARIES","SYSDIR_DIRECTORY_APPLICATION","SYSDIR_DIRECTORY_APPLICATION_SUPPORT","SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION","SYSDIR_DIRECTORY_CACHES","SYSDIR_DIRECTORY_CORESERVICE","SYSDIR_DIRECTORY_DEMO_APPLICATION","SYSDIR_DIRECTORY_DESKTOP","SYSDIR_DIRECTORY_DEVELOPER","SYSDIR_DIRECTORY_DEVELOPER_APPLICATION","SYSDIR_DIRECTORY_DOCUMENT","SYSDIR_DIRECTORY_DOCUMENTATION","SYSDIR_DIRECTORY_DOWNLOADS","SYSDIR_DIRECTORY_INPUT_METHODS","SYSDIR_DIRECTORY_LIBRARY","SYSDIR_DIRECTORY_MOVIES","SYSDIR_DIRECTORY_MUSIC","SYSDIR_DIRECTORY_PICTURES","SYSDIR_DIRECTORY_PREFERENCE_PANES","SYSDIR_DIRECTORY_PRINTER_DESCRIPTION","SYSDIR_DIRECTORY_SHARED_PUBLIC","SYSDIR_DIRECTORY_USER","SYSDIR_DOMAIN_MASK_ALL","SYSDIR_DOMAIN_MASK_LOCAL","SYSDIR_DOMAIN_MASK_NETWORK","SYSDIR_DOMAIN_MASK_SYSTEM","SYSDIR_DOMAIN_MASK_USER","SYSPROTO_CONTROL","SYSPROTO_EVENT","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TASK_THREAD_TIMES_INFO","TASK_THREAD_TIMES_INFO_COUNT","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_FASTOPEN","TCP_KEEPALIVE","TCP_KEEPCNT","TCP_KEEPINTVL","TCP_MAXSEG","TCP_NODELAY","TCP_NOOPT","TCP_NOPUSH","TCSADRAIN","TCSAFLUSH","TCSANOW","THOUSEP","THREAD_AFFINITY_POLICY","THREAD_AFFINITY_POLICY_COUNT","THREAD_AFFINITY_TAG_NULL","THREAD_BACKGROUND_POLICY","THREAD_BACKGROUND_POLICY_COUNT","THREAD_BACKGROUND_POLICY_DARWIN_BG","THREAD_BASIC_INFO","THREAD_BASIC_INFO_COUNT","THREAD_EXTENDED_INFO","THREAD_EXTENDED_INFO_COUNT","THREAD_EXTENDED_POLICY","THREAD_EXTENDED_POLICY_COUNT","THREAD_IDENTIFIER_INFO","THREAD_IDENTIFIER_INFO_COUNT","THREAD_LATENCY_QOS_POLICY","THREAD_LATENCY_QOS_POLICY_COUNT","THREAD_PRECEDENCE_POLICY","THREAD_PRECEDENCE_POLICY_COUNT","THREAD_STANDARD_POLICY","THREAD_STANDARD_POLICY_COUNT","THREAD_THROUGHPUT_QOS_POLICY","THREAD_THROUGHPUT_QOS_POLICY_COUNT","THREAD_TIME_CONSTRAINT_POLICY","THREAD_TIME_CONSTRAINT_POLICY_COUNT","TH_FLAGS_GLOBAL_FORCED_IDLE","TH_FLAGS_IDLE","TH_FLAGS_SWAPPED","TH_STATE_HALTED","TH_STATE_RUNNING","TH_STATE_STOPPED","TH_STATE_UNINTERRUPTIBLE","TH_STATE_WAITING","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCDTR","TIOCCONS","TIOCDCDTIMESTAMP","TIOCDRAIN","TIOCDSIMICROCODE","TIOCEXCL","TIOCEXT","TIOCFLUSH","TIOCGDRAINWAIT","TIOCGETD","TIOCGPGRP","TIOCGWINSZ","TIOCIXOFF","TIOCIXON","TIOCMBIC","TIOCMBIS","TIOCMGDTRWAIT","TIOCMGET","TIOCMODG","TIOCMODS","TIOCMSDTRWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCPTYGNAME","TIOCPTYGRANT","TIOCPTYUNLK","TIOCREMOTE","TIOCSBRK","TIOCSCONS","TIOCSCTTY","TIOCSDRAINWAIT","TIOCSDTR","TIOCSETD","TIOCSIG","TIOCSPGRP","TIOCSTART","TIOCSTAT","TIOCSTI","TIOCSTOP","TIOCSWINSZ","TIOCTIMESTAMP","TIOCUCNTL","TMP_MAX","TOSTOP","T_FMT","T_FMT_AMPM","UF_APPEND","UF_COMPRESSED","UF_HIDDEN","UF_IMMUTABLE","UF_NODUMP","UF_OPAQUE","UF_SETTABLE","UF_TRACKED","USER_BC_BASE_MAX","USER_BC_DIM_MAX","USER_BC_SCALE_MAX","USER_BC_STRING_MAX","USER_COLL_WEIGHTS_MAX","USER_CS_PATH","USER_EXPR_NEST_MAX","USER_LINE_MAX","USER_MAXID","USER_POSIX2_CHAR_TERM","USER_POSIX2_C_BIND","USER_POSIX2_C_DEV","USER_POSIX2_FORT_DEV","USER_POSIX2_FORT_RUN","USER_POSIX2_LOCALEDEF","USER_POSIX2_SW_DEV","USER_POSIX2_UPE","USER_POSIX2_VERSION","USER_PROCESS","USER_RE_DUP_MAX","USER_STREAM_MAX","USER_TZNAME_MAX","USRQUOTA","UTIME_NOW","UTIME_OMIT","UTUN_OPT_FLAGS","UTUN_OPT_IFNAME","VDISCARD","VDSUSP","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VM_FLAGS_ALIAS_MASK","VM_FLAGS_ANYWHERE","VM_FLAGS_FIXED","VM_FLAGS_NO_CACHE","VM_FLAGS_OVERWRITE","VM_FLAGS_PURGABLE","VM_FLAGS_RANDOM_ADDR","VM_FLAGS_RESILIENT_CODESIGN","VM_FLAGS_RESILIENT_MEDIA","VM_FLAGS_RETURN_4K_DATA_ADDR","VM_FLAGS_RETURN_DATA_ADDR","VM_FLAGS_SUPERPAGE_MASK","VM_FLAGS_SUPERPAGE_NONE","VM_FLAGS_SUPERPAGE_SHIFT","VM_FLAGS_SUPERPAGE_SIZE_2MB","VM_FLAGS_SUPERPAGE_SIZE_ANY","VM_FLAGS_USER_ALLOCATE","VM_FLAGS_USER_MAP","VM_FLAGS_USER_REMAP","VM_LOADAVG","VM_MACHFACTOR","VM_MAKE_TAG","VM_MAXID","VM_MEMORY_ACCELERATE","VM_MEMORY_ANALYSIS_TOOL","VM_MEMORY_APPKIT","VM_MEMORY_APPLICATION_SPECIFIC_1","VM_MEMORY_APPLICATION_SPECIFIC_16","VM_MEMORY_ASL","VM_MEMORY_ASSETSD","VM_MEMORY_ATS","VM_MEMORY_CARBON","VM_MEMORY_CGIMAGE","VM_MEMORY_COREDATA","VM_MEMORY_COREDATA_OBJECTIDS","VM_MEMORY_COREGRAPHICS","VM_MEMORY_COREGRAPHICS_BACKINGSTORES","VM_MEMORY_COREGRAPHICS_DATA","VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","VM_MEMORY_COREGRAPHICS_MISC","VM_MEMORY_COREGRAPHICS_SHARED","VM_MEMORY_COREGRAPHICS_XALLOC","VM_MEMORY_COREIMAGE","VM_MEMORY_COREPROFILE","VM_MEMORY_CORESERVICES","VM_MEMORY_COREUI","VM_MEMORY_COREUIFILE","VM_MEMORY_CORPSEINFO","VM_MEMORY_DHMM","VM_MEMORY_DYLD","VM_MEMORY_DYLD_MALLOC","VM_MEMORY_DYLIB","VM_MEMORY_FOUNDATION","VM_MEMORY_GENEALOGY","VM_MEMORY_GLSL","VM_MEMORY_GUARD","VM_MEMORY_IMAGEIO","VM_MEMORY_IOKIT","VM_MEMORY_JAVA","VM_MEMORY_JAVASCRIPT_CORE","VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","VM_MEMORY_LAYERKIT","VM_MEMORY_LIBDISPATCH","VM_MEMORY_MACH_MSG","VM_MEMORY_MALLOC","VM_MEMORY_MALLOC_HUGE","VM_MEMORY_MALLOC_LARGE","VM_MEMORY_MALLOC_LARGE_REUSABLE","VM_MEMORY_MALLOC_LARGE_REUSED","VM_MEMORY_MALLOC_NANO","VM_MEMORY_MALLOC_SMALL","VM_MEMORY_MALLOC_TINY","VM_MEMORY_OBJC_DISPATCHERS","VM_MEMORY_OPENCL","VM_MEMORY_OS_ALLOC_ONCE","VM_MEMORY_RAWCAMERA","VM_MEMORY_REALLOC","VM_MEMORY_SBRK","VM_MEMORY_SCENEKIT","VM_MEMORY_SHARED_PMAP","VM_MEMORY_SKYWALK","VM_MEMORY_SQLITE","VM_MEMORY_STACK","VM_MEMORY_SWIFT_METADATA","VM_MEMORY_SWIFT_RUNTIME","VM_MEMORY_TCMALLOC","VM_MEMORY_UNSHARED_PMAP","VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","VM_METER","VM_PAGE_QUERY_PAGE_COPIED","VM_PAGE_QUERY_PAGE_CS_NX","VM_PAGE_QUERY_PAGE_CS_TAINTED","VM_PAGE_QUERY_PAGE_CS_VALIDATED","VM_PAGE_QUERY_PAGE_DIRTY","VM_PAGE_QUERY_PAGE_EXTERNAL","VM_PAGE_QUERY_PAGE_FICTITIOUS","VM_PAGE_QUERY_PAGE_PAGED_OUT","VM_PAGE_QUERY_PAGE_PRESENT","VM_PAGE_QUERY_PAGE_REF","VM_PAGE_QUERY_PAGE_SPECULATIVE","VM_PROT_EXECUTE","VM_PROT_NONE","VM_PROT_READ","VM_PROT_WRITE","VM_SWAPUSAGE","VOL_CAPABILITIES_FORMAT","VOL_CAPABILITIES_INTERFACES","VOL_CAP_FMT_2TB_FILESIZE","VOL_CAP_FMT_64BIT_OBJECT_IDS","VOL_CAP_FMT_CASE_PRESERVING","VOL_CAP_FMT_CASE_SENSITIVE","VOL_CAP_FMT_DECMPFS_COMPRESSION","VOL_CAP_FMT_DIR_HARDLINKS","VOL_CAP_FMT_DOCUMENT_ID","VOL_CAP_FMT_FAST_STATFS","VOL_CAP_FMT_HARDLINKS","VOL_CAP_FMT_HIDDEN_FILES","VOL_CAP_FMT_JOURNAL","VOL_CAP_FMT_JOURNAL_ACTIVE","VOL_CAP_FMT_NO_IMMUTABLE_FILES","VOL_CAP_FMT_NO_PERMISSIONS","VOL_CAP_FMT_NO_ROOT_TIMES","VOL_CAP_FMT_NO_VOLUME_SIZES","VOL_CAP_FMT_OPENDENYMODES","VOL_CAP_FMT_PATH_FROM_ID","VOL_CAP_FMT_PERSISTENTOBJECTIDS","VOL_CAP_FMT_SEALED","VOL_CAP_FMT_SHARED_SPACE","VOL_CAP_FMT_SPARSE_FILES","VOL_CAP_FMT_SYMBOLICLINKS","VOL_CAP_FMT_VOL_GROUPS","VOL_CAP_FMT_WRITE_GENERATION_COUNT","VOL_CAP_FMT_ZERO_RUNS","VOL_CAP_INT_ADVLOCK","VOL_CAP_INT_ALLOCATE","VOL_CAP_INT_ATTRLIST","VOL_CAP_INT_CLONE","VOL_CAP_INT_COPYFILE","VOL_CAP_INT_EXCHANGEDATA","VOL_CAP_INT_EXTENDED_ATTR","VOL_CAP_INT_EXTENDED_SECURITY","VOL_CAP_INT_FLOCK","VOL_CAP_INT_MANLOCK","VOL_CAP_INT_NAMEDSTREAMS","VOL_CAP_INT_NFSEXPORT","VOL_CAP_INT_READDIRATTR","VOL_CAP_INT_RENAME_EXCL","VOL_CAP_INT_RENAME_OPENFAIL","VOL_CAP_INT_RENAME_SWAP","VOL_CAP_INT_SEARCHFS","VOL_CAP_INT_SNAPSHOT","VOL_CAP_INT_USERACCESS","VOL_CAP_INT_VOL_RENAME","VQUIT","VREPRINT","VSTART","VSTATUS","VSTOP","VSUSP","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_OK","XATTR_CREATE","XATTR_NODEFAULT","XATTR_NOFOLLOW","XATTR_NOSECURITY","XATTR_REPLACE","XATTR_SHOWCOMPRESSION","XUCRED_VERSION","X_OK","YESEXPR","YESSTR","_CS_DARWIN_USER_CACHE_DIR","_CS_DARWIN_USER_DIR","_CS_DARWIN_USER_TEMP_DIR","_CS_PATH","_IOFBF","_IOLBF","_IONBF","_NSGetEnviron","_NSGetExecutablePath","_PC_CHOWN_RESTRICTED","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_VDISABLE","_POSIX_VDISABLE","_PTHREAD_COND_SIG_init","_PTHREAD_MUTEX_SIG_init","_PTHREAD_RWLOCK_SIG_init","_RLIMIT_POSIX_FLAG","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FILE_LOCKING","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_UTX_HOSTSIZE","_UTX_IDSIZE","_UTX_LINESIZE","_UTX_USERSIZE","_WSTATUS","_WSTOPPED","__PTHREAD_CONDATTR_SIZE__","__PTHREAD_COND_SIZE__","__PTHREAD_MUTEX_SIZE__","__PTHREAD_RWLOCKATTR_SIZE__","__PTHREAD_RWLOCK_SIZE__","__cpu","__cs","__darwin_mcontext64","__darwin_mmst_reg","__darwin_x86_exception_state64","__darwin_x86_float_state64","__darwin_x86_thread_state64","__darwin_xmm_reg","__err","__error","__es","__faultvaddr","__fpu_cs","__fpu_dp","__fpu_ds","__fpu_fop","__fpu_ftw","__fpu_ip","__fpu_mxcsr","__fpu_mxcsrmask","__fpu_reserved","__fpu_reserved1","__fpu_rsrv1","__fpu_rsrv2","__fpu_rsrv3","__fpu_stmm0","__fpu_stmm1","__fpu_stmm2","__fpu_stmm3","__fpu_stmm4","__fpu_stmm5","__fpu_stmm6","__fpu_stmm7","__fpu_xmm0","__fpu_xmm1","__fpu_xmm10","__fpu_xmm11","__fpu_xmm12","__fpu_xmm13","__fpu_xmm14","__fpu_xmm15","__fpu_xmm2","__fpu_xmm3","__fpu_xmm4","__fpu_xmm5","__fpu_xmm6","__fpu_xmm7","__fpu_xmm8","__fpu_xmm9","__fs","__fs","__gs","__mmst_reg","__mmst_rsrv","__r10","__r11","__r12","__r13","__r14","__r15","__r8","__r9","__rax","__rbp","__rbx","__rcx","__rdi","__rdx","__rflags","__rip","__rsi","__rsp","__ss","__trapno","__xmm_reg","_dyld_get_image_header","_dyld_get_image_name","_dyld_get_image_vmaddr_slide","_dyld_image_count","_exit","_key","_seq","abort","abs","accept","access","acct","actime","active_count","active_count","address","addrinfo","adjtime","affinity_tag","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arc4random","arc4random_buf","arc4random_uniform","arphdr","array","asctime","asctime_r","atexit","atof","atoi","atol","atoll","attr_dataoffset","attr_length","attrgroup_t","attribute_set_t","attrlist","attrreference_t","backtrace","backtrace_async","backtrace_from_fp","backtrace_image_offsets","backtrace_symbols","backtrace_symbols_fd","basename","batch_free","batch_malloc","bh_caplen","bh_datalen","bh_hdrlen","bh_tstamp","bind","bitmapcount","blkcnt_t","blksize_t","blocks_in_use","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpf_hdr","brk","bsearch","buf","bytes_free","bytes_total","bytes_used","c_cc","c_cflag","c_char","c_double","c_float","c_iflag","c_int","c_ispeed","c_lflag","c_long","c_longlong","c_oflag","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","calloc","capabilities","cc_t","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","chdir","chflags","chmod","chown","chroot","chunks_free","chunks_used","claimed_address","clearerr","clock_getres","clock_gettime","clock_settime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clonefile","clonefileat","close","closedir","closelog","cmd","cmd","cmd","cmdsize","cmdsize","cmdsize","cmsg_len","cmsg_level","cmsg_type","cmsghdr","commonattr","commonattr","compressions","compressor_page_count","computation","confstr","connect","connectx","constant","constraint","copyfile","copyfile_flags_t","copyfile_state_t","cow_faults","cow_faults","cpu_subtype","cpu_subtype_t","cpu_ticks","cpu_type","cpu_type_t","cpu_usage","cpusubtype","cpusubtype","cputype","cputype","cr_groups","cr_ngroups","cr_uid","cr_version","creat","ctime","ctime_r","ctl_id","ctl_info","ctl_name","cuid","currency_symbol","d_ino","d_name","d_namlen","d_reclen","d_seekoff","d_type","data","data","decimal_point","decompressions","default_policy","denom","destroy","dev_t","difftime","dirattr","dirattr","dirent","dirfd","dirname","disconnectx","dispatch_qaddr","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlopen","dlsym","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curbytes","dqb_curinodes","dqb_id","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_spare","dqblk","drand48","dup","dup2","duplocale","e_tdev","e_tpgid","endgrent","endpwent","endservent","endutxent","erand48","errcnt","esterror","esterror","events","exchangedata","execl","execle","execlp","execv","execve","execvp","exit","ext","external_page_count","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_flags_ext","f_frsize","f_fsid","f_fsid","f_fssubtype","f_fstypename","f_iosize","f_mntfromname","f_mntonname","f_namemax","f_owner","f_reserved","f_type","faccessat","faults","faults","fchdir","fchflags","fchmod","fchmodat","fchown","fchownat","fclonefileat","fclose","fcntl","fcopyfile","fd","fd_set","fdopen","fdopendir","feof","ferror","fflags","fflags","fflush","fgetattrlist","fgetc","fgetpos","fgets","fgetxattr","fileattr","fileattr","fileno","fileoff","fileoff","filesize","filesize","filetype","filetype","filter","filter","flag","flags","flags","flags","flags","flags","flags","flags","flistxattr","flock","flock","fmemopen","fmount","fmt","fopen","fork","forkattr","forkattr","forkpty","fpathconf","fpos_t","fprintf","fputc","fputs","frac_digits","fread","free","free","free_count","free_count","free_definite_size","freeaddrinfo","freeifaddrs","freelocale","fremovexattr","freopen","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fseek","fseeko","fsetattrlist","fsetpos","fsetxattr","fsfilcnt_t","fsid_t","fst_bytesalloc","fst_flags","fst_length","fst_offset","fst_posmode","fstat","fstatat","fstatfs","fstatvfs","fstore_t","fsync","ftell","ftello","ftok","ftruncate","futimens","futimes","fwrite","gai_strerror","getaddrinfo","getattrlist","getattrlistat","getattrlistbulk","getchar","getchar_unlocked","getcwd","getdate","getdomainname","getdtablesize","getegid","getenv","geteuid","getfsstat","getgid","getgrent","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","gethostuuid","getifaddrs","getitimer","getline","getloadavg","getlogin","getmntinfo","getnameinfo","getopt","getopt_long","getpeereid","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprogname","getprotobyname","getprotobynumber","getpwent","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrlimit","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid_t","gl_offs","gl_pathc","gl_pathv","glob","glob_t","globfree","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","group","grouping","h_addr_list","h_addrtype","h_aliases","h_length","h_name","has_arg","hdr_cnt","headers","hits","hits","host_flavor_t","host_info64_t","host_info_t","host_processor_info","host_statistics","host_statistics64","host_t","hostent","hstrerror","iconv","iconv_close","iconv_open","iconv_t","id_t","ident","ident","idtype_t","if_data","if_data64","if_freenameindex","if_index","if_indextoname","if_msghdr","if_msghdr2","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_dstaddr","ifa_flags","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifi_addrlen","ifi_addrlen","ifi_baudrate","ifi_baudrate","ifi_collisions","ifi_collisions","ifi_hdrlen","ifi_hdrlen","ifi_hwassist","ifi_ibytes","ifi_ibytes","ifi_ierrors","ifi_ierrors","ifi_imcasts","ifi_imcasts","ifi_ipackets","ifi_ipackets","ifi_iqdrops","ifi_iqdrops","ifi_lastchange","ifi_lastchange","ifi_metric","ifi_metric","ifi_mtu","ifi_mtu","ifi_noproto","ifi_noproto","ifi_obytes","ifi_obytes","ifi_oerrors","ifi_oerrors","ifi_omcasts","ifi_omcasts","ifi_opackets","ifi_opackets","ifi_physical","ifi_physical","ifi_recvquota","ifi_recvquota","ifi_recvtiming","ifi_recvtiming","ifi_reserved1","ifi_reserved2","ifi_type","ifi_type","ifi_typelen","ifi_typelen","ifi_unused1","ifi_unused1","ifi_unused2","ifi_xmitquota","ifi_xmitquota","ifi_xmittiming","ifi_xmittiming","ifm_addrs","ifm_addrs","ifm_data","ifm_data","ifm_flags","ifm_flags","ifm_index","ifm_index","ifm_msglen","ifm_msglen","ifm_snd_drops","ifm_snd_len","ifm_snd_maxlen","ifm_timer","ifm_type","ifm_type","ifm_version","ifm_version","image_offset","importance","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in_addr","in_addr_t","in_pktinfo","in_port_t","inactive_count","inactive_count","initgroups","initprot","initprot","ino_t","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","integer_t","internal_page_count","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","introspect","ioctl","iov_base","iov_len","iovec","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","is_master","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_value","itimerval","jitcnt","jitter","jrand48","kCCAlignmentError","kCCBufferTooSmall","kCCCallSequenceError","kCCDecodeError","kCCInvalidKey","kCCKeySizeError","kCCMemoryFailure","kCCOverflow","kCCParamError","kCCRNGFailure","kCCSuccess","kCCUnimplemented","kCCUnspecifiedError","kern_return_t","kevent","kevent","kevent64","kevent64_s","key_t","kill","killpg","kqueue","l2p_contigbytes","l2p_devoffset","l2p_flags","l_len","l_linger","l_onoff","l_pid","l_start","l_type","l_whence","labs","lchown","lcong48","lconv","ledger_array_t","ledger_t","linger","link","linkat","lio_listio","listen","listxattr","load_average","load_command","locale_t","localeconv","localeconv_l","localtime","localtime_r","lockf","log2phys","login_tty","lookups","lookups","lrand48","lseek","lstat","lutimes","mach_absolute_time","mach_factor","mach_header","mach_header_64","mach_host_self","mach_msg_type_number_t","mach_port_t","mach_task_basic_info","mach_task_basic_info_data_t","mach_task_basic_info_t","mach_task_self","mach_task_self_","mach_thread_self","mach_timebase_info","mach_timebase_info","mach_timebase_info_data_t","mach_vm_address_t","mach_vm_map","mach_vm_offset_t","mach_vm_size_t","machine","madvise","magic","magic","major","makedev","malloc","malloc","malloc_default_zone","malloc_good_size","malloc_introspection_t","malloc_printf","malloc_size","malloc_statistics_t","malloc_zone_calloc","malloc_zone_check","malloc_zone_free","malloc_zone_from_ptr","malloc_zone_log","malloc_zone_malloc","malloc_zone_print","malloc_zone_print_ptr_info","malloc_zone_realloc","malloc_zone_statistics","malloc_zone_t","malloc_zone_valloc","max_align_t","max_size_in_use","maxerror","maxerror","maxprot","maxprot","mcontext_t","mem_entry_name_port_t","memalign","memchr","memcmp","memcpy","memmem","memmove","memory_object_offset_t","memory_object_t","memset","memset_pattern16","memset_pattern4","memset_pattern8","memset_s","microseconds","mincore","minor","mkdir","mkdirat","mkdtemp","mkfifo","mknod","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mrand48","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","mstats","mstats","msync","munlock","munlockall","munmap","n_cs_precedes","n_sep_by_space","n_sign_posn","name","nanosleep","nativeattr","natural_t","ncmds","ncmds","negative_sign","newlocale","nfds_t","nice","nl_item","nl_langinfo","nlink_t","no_data","nodename","nrand48","nsects","nsects","ntp_adjtime","ntp_gettime","ntptimeval","numer","off_t","offset","offset","open","open_memstream","open_wmemstream","openat","opendir","openlog","openpty","option","os_log_create","os_log_t","os_log_type_enabled","os_log_type_t","os_signpost_enabled","os_signpost_id_generate","os_signpost_id_make_with_pointer","os_signpost_id_t","os_signpost_type_t","os_unfair_lock","os_unfair_lock_assert_not_owner","os_unfair_lock_assert_owner","os_unfair_lock_lock","os_unfair_lock_s","os_unfair_lock_t","os_unfair_lock_trylock","os_unfair_lock_unlock","p_aliases","p_cs_precedes","p_name","p_proto","p_sep_by_space","p_sign_posn","pageins","pageins","pageouts","pageouts","passwd","pathconf","pause","pbi_comm","pbi_flags","pbi_gid","pbi_name","pbi_nfiles","pbi_nice","pbi_pgid","pbi_pid","pbi_pjobc","pbi_ppid","pbi_rgid","pbi_ruid","pbi_start_tvsec","pbi_start_tvusec","pbi_status","pbi_svgid","pbi_svuid","pbi_uid","pbi_xstatus","pbsd","pclose","period","perror","pid_t","pipe","policy","policy","policy_t","poll","pollfd","popen","positive_sign","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_get_qos_class_np","posix_spawnattr_getarchpref_np","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_set_qos_class_np","posix_spawnattr_setarchpref_np","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppsfreq","pread","preadv","precision","preemptible","pressure_relief","printf","priority","proc_bsdinfo","proc_kmsgbuf","proc_libversion","proc_listallpids","proc_listchildpids","proc_listpgrppids","proc_listpids","proc_name","proc_pid_rusage","proc_pidfdinfo","proc_pidfileportinfo","proc_pidinfo","proc_pidpath","proc_regionfilename","proc_set_csm","proc_set_no_smt","proc_setthread_csm","proc_setthread_no_smt","proc_taskallinfo","proc_taskinfo","proc_threadinfo","proc_vnodepathinfo","processor_basic_info","processor_basic_info_data_t","processor_basic_info_t","processor_count","processor_cpu_load_info","processor_cpu_load_info_data_t","processor_cpu_load_info_t","processor_flavor_t","processor_info_array_t","processor_info_t","processor_set_basic_info","processor_set_basic_info_data_t","processor_set_basic_info_t","processor_set_load_info","processor_set_load_info_data_t","processor_set_load_info_t","protoent","pselect","pseudo_AF_HDRCMPLT","pseudo_AF_KEY","pseudo_AF_PIP","pseudo_AF_RTIP","pseudo_AF_XTP","pth_cpu_usage","pth_cpu_usage","pth_curpri","pth_curpri","pth_flags","pth_flags","pth_maxpriority","pth_maxpriority","pth_name","pth_name","pth_policy","pth_policy","pth_priority","pth_priority","pth_run_state","pth_run_state","pth_sleep_time","pth_sleep_time","pth_system_time","pth_system_time","pth_user_time","pth_user_time","pthread_atfork","pthread_attr_destroy","pthread_attr_get_qos_class_np","pthread_attr_getschedparam","pthread_attr_init","pthread_attr_set_qos_class_np","pthread_attr_setdetachstate","pthread_attr_setschedparam","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_condattr_t","pthread_cpu_number_np","pthread_create","pthread_create_from_mach_thread","pthread_detach","pthread_exit","pthread_from_mach_thread_np","pthread_get_qos_class_np","pthread_get_stackaddr_np","pthread_get_stacksize_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_introspection_getspecific_np","pthread_introspection_hook_install","pthread_introspection_hook_t","pthread_introspection_setspecific_np","pthread_jit_write_callback_t","pthread_jit_write_freeze_callbacks_np","pthread_jit_write_protect_np","pthread_jit_write_protect_supported_np","pthread_jit_write_with_callback_np","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mach_thread_np","pthread_main_np","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_set_qos_class_self_np","pthread_setname_np","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_stack_frame_decode_np","pthread_t","pthread_threadid_np","pti_cow_faults","pti_csw","pti_faults","pti_messages_received","pti_messages_sent","pti_numrunning","pti_pageins","pti_policy","pti_priority","pti_resident_size","pti_syscalls_mach","pti_syscalls_unix","pti_threadnum","pti_threads_system","pti_threads_user","pti_total_system","pti_total_user","pti_virtual_size","ptinfo","ptrace","ptrdiff_t","ptsname","purgeable_count","purgeable_count","purges","purges","putchar","putchar_unlocked","putenv","puts","pututxline","pvi_cdir","pvi_rdir","pw_change","pw_class","pw_dir","pw_expire","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwritev","qos_class_t","qsort","querylocale","quotactl","ra_count","ra_offset","radvisory","raise","rand","reactivations","reactivations","read","readdir","readdir_r","readlink","readlinkat","readv","realloc","realloc","realpath","recv","recvfrom","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","release","remove","removexattr","rename","renameat","renameatx_np","renamex_np","res_init","reserved","reserved","resident_size","resident_size_max","revents","rewind","rewinddir","rfu_1","ri_billed_energy","ri_billed_system_time","ri_billed_system_time","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_cpu_time_qos_background","ri_cpu_time_qos_background","ri_cpu_time_qos_default","ri_cpu_time_qos_default","ri_cpu_time_qos_legacy","ri_cpu_time_qos_legacy","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_utility","ri_cpu_time_qos_utility","ri_cycles","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_instructions","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interval_max_phys_footprint","ri_lifetime_max_phys_footprint","ri_logical_writes","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_runnable_time","ri_serviced_energy","ri_serviced_system_time","ri_serviced_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","rlim_cur","rlim_max","rlim_t","rlimit","rm_eo","rm_so","rmdir","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","run_state","running","rusage","rusage_info_t","rusage_info_v0","rusage_info_v1","rusage_info_v2","rusage_info_v3","rusage_info_v4","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_endpoints_t","sa_family","sa_family_t","sa_flags","sa_len","sa_mask","sa_sigaction","sae_associd_t","sae_connid_t","sae_dstaddr","sae_dstaddrlen","sae_srcaddr","sae_srcaddrlen","sae_srcif","sbrk","sc_family","sc_id","sc_len","sc_reserved","sc_unit","scanf","sched_get_priority_max","sched_get_priority_min","sched_param","sched_priority","sched_yield","sdl_alen","sdl_data","sdl_family","sdl_index","sdl_len","sdl_nlen","sdl_slen","sdl_type","seconds","seed48","seekdir","segment_command","segment_command_64","segname","segname","select","sem_base","sem_close","sem_ctime","sem_flg","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_pad1","sem_pad2","sem_pad3","sem_perm","sem_post","sem_t","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semid_ds","semop","semun","send","sendfile","sendmsg","sendto","servent","setattrlist","setattrlistat","setbuf","setdomainname","setegid","setenv","seteuid","setgid","setgrent","setgroups","sethostid","sethostname","setitimer","setlocale","setlogmask","setpgid","setpriority","setprogname","setpwent","setregid","setreuid","setrlimit","setservent","setsid","setsockopt","settimeofday","setuid","setutxent","setvbuf","setxattr","sf_hdtr","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_internal","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_addr","si_code","si_errno","si_pid","si_pid","si_signo","si_status","si_status","si_uid","si_uid","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_attributes","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","sigpending","sigprocmask","sigset_t","sigval","sigwait","sin6_addr","sin6_family","sin6_flowinfo","sin6_len","sin6_port","sin6_scope_id","sin_addr","sin_addr","sin_family","sin_family","sin_len","sin_len","sin_other","sin_port","sin_port","sin_srcaddr","sin_tos","sin_zero","sival_ptr","size","size","size_allocated","size_in_use","size_t","sizeofcmds","sizeofcmds","sleep","sleep_time","slot_num","snd_family","snd_len","snd_name","snprintf","sockaddr","sockaddr_ctl","sockaddr_dl","sockaddr_in","sockaddr_in6","sockaddr_inarp","sockaddr_ndrv","sockaddr_storage","sockaddr_un","socket","socketpair","socklen_t","speculative_count","speculative_count","speed_t","sprintf","srand","srand48","ss_family","ss_flags","ss_len","ss_size","ss_sp","ss_sysaddr","sscanf","ssize_t","st_atime","st_atime_nsec","st_birthtime","st_birthtime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_flags","st_gen","st_gid","st_ino","st_lspare","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_qspare","st_rdev","st_size","st_uid","stabil","stack_t","stat","stat","statfs","statfs","status","statvfs","statvfs","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtonum","strtoul","strtoull","strxfrm","sun_family","sun_len","sun_path","suseconds_t","suspend_count","suspend_count","swapins","swapouts","symlink","symlinkat","sync","syscall","sysconf","sysctl","sysctlbyname","sysctlnametomib","sysdir_get_next_search_path_enumeration","sysdir_search_path_directory_t","sysdir_search_path_domain_mask_t","sysdir_search_path_enumeration_state","sysdir_start_search_path_enumeration","syslog","sysname","system","system_time","system_time","system_time","tai","task_count","task_create","task_flavor_t","task_for_pid","task_info","task_info_t","task_inspect_t","task_set_info","task_t","task_terminate","task_thread_times_info","task_thread_times_info_data_t","task_thread_times_info_t","task_threads","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","telldir","termios","thousands_sep","thread_act_array_t","thread_act_t","thread_affinity_policy","thread_affinity_policy_data_t","thread_affinity_policy_t","thread_background_policy","thread_background_policy_data_t","thread_background_policy_t","thread_basic_info","thread_basic_info_data_t","thread_basic_info_t","thread_count","thread_extended_info","thread_extended_info_data_t","thread_extended_info_t","thread_extended_policy","thread_extended_policy_data_t","thread_extended_policy_t","thread_flavor_t","thread_handle","thread_id","thread_identifier_info","thread_identifier_info_data_t","thread_identifier_info_t","thread_info","thread_info_t","thread_inspect_t","thread_latency_qos_policy","thread_latency_qos_policy_data_t","thread_latency_qos_policy_t","thread_latency_qos_t","thread_latency_qos_tier","thread_policy_flavor_t","thread_policy_get","thread_policy_set","thread_policy_t","thread_precedence_policy","thread_precedence_policy_data_t","thread_precedence_policy_t","thread_standard_policy","thread_standard_policy_data_t","thread_standard_policy_t","thread_t","thread_throughput_qos_policy","thread_throughput_qos_policy_data_t","thread_throughput_qos_policy_t","thread_throughput_qos_t","thread_throughput_qos_tier","thread_time_constraint_policy","thread_time_constraint_policy_data_t","thread_time_constraint_policy_t","throttled_count","time","time","time_state","time_t","time_value_t","timegm","times","timeshare","timespec","timeval","timeval32","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","total_uncompressed_pages_in_compressor","toupper","trailers","trl_cnt","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uc_link","uc_mcontext","uc_mcsize","uc_onstack","uc_sigmask","uc_stack","ucontext_t","udata","udata","uid","uid_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","uname","ungetc","unlink","unlinkat","unlockpt","unmount","unsetenv","useconds_t","uselocale","user_time","user_time","user_time","usleep","ut_host","ut_id","ut_line","ut_pid","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpx","utmpxname","utsname","uuid","uuid_t","val","val","valid","validattr","valloc","version","version","vi_fsid","vi_pad","vi_stat","vi_type","vinfo_stat","vip_path","vip_vi","virtual_size","vm_address_t","vm_deallocate","vm_inherit_t","vm_map_t","vm_offset_t","vm_page_size","vm_prot_t","vm_range_t","vm_size_t","vm_statistics","vm_statistics64","vm_statistics64_data_t","vm_statistics64_t","vm_statistics_data_t","vm_statistics_t","vmaddr","vmaddr","vmsize","vmsize","vnode_info","vnode_info_path","vol_attributes_attr_t","vol_capabilities_attr_t","vol_capabilities_set_t","volattr","volattr","vst_atime","vst_atimensec","vst_birthtime","vst_birthtimensec","vst_blksize","vst_blocks","vst_ctime","vst_ctimensec","vst_dev","vst_flags","vst_gen","vst_gid","vst_ino","vst_mode","vst_mtime","vst_mtimensec","vst_nlink","vst_qspare","vst_rdev","vst_size","vst_uid","wait","wait4","waitid","waitpid","wchar_t","wcslen","wcstombs","winsize","wire_count","wire_count","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xsu_avail","xsu_encrypted","xsu_pagesize","xsu_total","xsu_used","xsw_usage","xucred","zero_fill_count","zero_fill_count","zone_name"],"q":["libc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"ddata includes security that replaces the TFO-cookie","data is idempotent","resume connect() on read/writehird Party Connect","Any distributed FS","IP6 Auth Header","any host internal protocol","any private encr. scheme","Argus","AX.25 Frames","BHA","Bulk Data Transfer","BackRoom SATNET Monitoring","CFTP","Chaos","Control Message Transport","Comp. Prot. HeartBeat","Comp. Prot. Net. Executive","Datagram Delivery","dissimilar gateway prot.","divert pseudo-protocol","last return value of *_input(), meaning “all job for …","IP6 destination option","exterior gateway protocol","EMCON","encapsulation header","ISO cnlp","IP6 Encap Sec. Payload","Ethernet IP encapsulation","IP6 fragmentation header","gateway2 (deprecated)","GMTP","General Routing Encap.","“hello” routing protocol","Host Monitoring","IP6 hop-by-hop options","","","xns idp","InterDomain Policy Routing","InterDomain Routing","group mgmt protocol","NSFNET-IGP","Cisco/GXS IGRP","IL transport protocol","Integ. Net Layer Security","Merit Internodal","","payload compression (IPComp)","Packet Core Utility","IP encapsulated in IP","for compatibility","Pluribus Packet Core","","Reliable Transaction","Kryptolan","Locus Address Resoloution","Leaf-1","Leaf-2","","DCN Measurement Subsystems","Mobile Host Routing","Mobile Int.ing control","Multicast Transport","Multiplexing","Sun net disk proto (temp.)","Next Hop Resolution","IP6 no next header","Network Services","network voice protocol","OSPFIGP","PGM","private interior gateway","Protocol Independent Mcast","Packet Radio Measurement","pup","Packet Video Protocol","raw IP packet","BBN RCC Monitoring","Reliable Data","IP6 routing header","resource reservation","Remote Virtual Disk","SATNET/Backroom EXPAK","Satnet Monitoring","Semaphore Comm. security","SCTP","Source Demand Routing","Sequential Exchange","Strite RPC protocol","Stream protocol II.","Secure VMTP","IP with encryption","TCF","","tp-4 w/ class negotiation","TP++ Transport","Trunk-1","Trunk-2","TTP","","Banyon VINES","VISA Protocol","VMTP","WIDEBAND EXPAK","WIDEBAND Monitoring","Wang Span Network","Cross Net Debuggersae_associd_t)(-1ULL))","","((sae_connid_t)(-1ULL))","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable/Disable TCP Fastopen on this socketquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notesalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,1],[4,4],[[3,1],1],[4,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6]],[[5,6],7],[[5,6]],0,[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,5],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,7],0,[5,5],[5,7],[5,7],[5,7],[5,7],0,0,0,[5,5],[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[6,6],[34,34],[3,3],[1,1],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[167,168],[[170,[169]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],171],0,0,0,0,0,0,0,0,0,0,0,0,0,[172,173],[[173,173],172],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[172,173],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,167],0,0,0,[57,174],0,0,[57,5],0,[57,175],0,[57,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],[[],170],0,0,0,0,0,0,0,0,[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],[[],176],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[3,"fd_set"],[15,"bool"],[15,"u8"],[15,"u32"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"fsid_t"],[3,"if_nameindex"],[3,"regex_t"],[3,"regmatch_t"],[3,"option"],[3,"sockaddr_un"],[3,"utsname"],[4,"timezone"],[4,"qos_class_t"],[4,"sysdir_search_path_directory_t"],[4,"sysdir_search_path_domain_mask_t"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sockaddr_ndrv"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"thread_standard_policy"],[3,"thread_extended_policy"],[3,"thread_time_constraint_policy"],[3,"thread_precedence_policy"],[3,"thread_affinity_policy"],[3,"thread_background_policy"],[3,"thread_latency_qos_policy"],[3,"thread_throughput_qos_policy"],[3,"malloc_statistics_t"],[3,"mstats"],[3,"vm_range_t"],[3,"sched_param"],[3,"vinfo_stat"],[3,"vnode_info"],[3,"vnode_info_path"],[3,"proc_vnodepathinfo"],[3,"vm_statistics"],[3,"task_thread_times_info"],[3,"rusage_info_v0"],[3,"rusage_info_v1"],[3,"rusage_info_v2"],[3,"rusage_info_v3"],[3,"rusage_info_v4"],[3,"image_offset"],[3,"attrlist"],[3,"attrreference_t"],[3,"vol_capabilities_attr_t"],[3,"attribute_set_t"],[3,"vol_attributes_attr_t"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[3,"time_value_t"],[3,"thread_basic_info"],[3,"thread_identifier_info"],[3,"thread_extended_info"],[3,"if_data64"],[3,"if_msghdr2"],[3,"vm_statistics64"],[3,"mach_task_basic_info"],[3,"log2phys"],[3,"os_unfair_lock_s"],[19,"semun"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"pthread_attr_t"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"malloc_introspection_t"],[3,"malloc_zone_t"],[3,"max_align_t"],[3,"ctl_info"],[3,"in6_addr"],[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"mach_port_t"],[6,"dev_t"],[15,"i32"],[6,"pid_t"],[6,"uid_t"],[3,"TypeId"]],"a":{"__errno_location":[2359],"errno":[2359]}},\
"linked_list_allocator":{"doc":"","t":[3,5,5,5,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Heap","align_down_size","align_up","align_up_size","allocate_first_fit","borrow","borrow_mut","bottom","deallocate","empty","extend","free","from","from_slice","hole","init","init_from_slice","into","new","size","top","try_from","try_into","type_id","used","HoleList","align_layout","allocate_first_fit","borrow","borrow_mut","deallocate","empty","from","into","min_size","new","try_from","try_into","type_id"],"q":["linked_list_allocator","","","","","","","","","","","","","","","","","","","","","","","","","linked_list_allocator::hole","","","","","","","","","","","","",""],"d":["A fixed size heap backed by a linked list of free memory …","Align downwards. Returns the greatest x with alignment …","Align upwards. Returns the smallest x with alignment <code>align</code> …","","Allocates a chunk of the given size with the given …","","","Returns the bottom address of the heap.","Frees the given allocation. <code>ptr</code> must be a pointer returned …","Creates an empty heap. All allocate calls will return <code>None</code>.","Extends the size of the heap by creating a new hole at the …","Returns the size of the free part of the heap","Returns the argument unchanged.","Creates a new heap from a slice of raw memory.","","Initializes an empty heap","Initialize an empty heap with provided memory.","Calls <code>U::from(self)</code>.","Creates a new heap with the given <code>bottom</code> and <code>size</code>.","Returns the size of the heap.","Return the top address of the heap.","","","","Returns the size of the used part of the heap","A sorted list of holes. It uses the the holes itself to …","Aligns the given layout for use with <code>HoleList</code>.","Searches the list for a big enough hole.","","","Frees the allocation given by <code>ptr</code> and <code>layout</code>.","Creates an empty <code>HoleList</code>.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the minimal allocation size. Smaller allocations …","Creates a <code>HoleList</code> that contains the given hole.","","",""],"i":[0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,8,8,8,8,8,8,8,8,8,8,8,8,8],"f":[0,[[1,1],1],[[2,1],2],[[1,1],1],[[3,4],[[6,[[5,[2]]]]]],[[]],[[]],[3,2],[[3,[5,[2]],4]],[[],3],[[3,1]],[3,1],[[]],[[],3],0,[[3,2,1]],[3],[[]],[[2,1],3],[3,1],[3,2],[[],6],[[],6],[[],7],[3,1],0,[4,4],[[8,4],6],[[]],[[]],[[8,[5,[2]],4],4],[[],8],[[]],[[]],[[],1],[[2,1],8],[[],6],[[],6],[[],7]],"p":[[15,"usize"],[15,"u8"],[3,"Heap"],[3,"Layout"],[3,"NonNull"],[4,"Result"],[3,"TypeId"],[3,"HoleList"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":[16,16,8,16,16,3,3,18,18,18,18,16,16,3,3,3,3,3,3,8,8,8,3,8,8,8,8,8,8,8,8,8,8,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,10,10,10,11,11,11,10,10,10,10,10,10,10,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","write"],"q":["lock_apid":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into a …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into a …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[35,36,0,15,16,0,0,15,4,5,16,35,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,3,18,6,19,8,9,11,21,22,3,18,9,22,23,9,11,24,9,24,3,18,6,19,8,9,11,21,22,12,3,3,18,18,13,6,6,19,19,14,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,40,41,12,12,12,3,18,5,13,13,13,6,19,14,14,14,8,9,11,21,22,12,13,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,12,13,14,15,15,12,5,13,16,16,14,16,16,14,5,13,3,15,12,5,13,16,16,32,20,3,18,6,19,8,9,21,22,3,12,13,14,4,12,13,14,14,14,6,8,9,11,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,12,5,13,16,36,36,35,12,5,13,16,36,32,37,37,36,35,12,5,13,20,38,38,3,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,38,11,38,11,14,14,14,40,41,12,3,18,5,13,6,19,14,8,9,11,21,22,15,5,16,7,1,3,18,5,6,19,8,9,11,21,22,16,7,20,10,3,6,8,9,11,3,6,8,9,11,14,20,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[],[[12,[15,[0,[2,17]]]]]],[[],[[13,[15,4,[0,[2,17]]]]]],[[],[[14,[16,[0,[2,17]]]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[9,[16,2]]]],[[[22,[16,2]]]],[[]],[[[9,[23,2]]],[[8,[23,2]]]],[[[11,[24,2]]],[[8,[24,2]]]],[[]],[[[9,[24,2]]],[[11,[24,2]]]],[[]],[[[3,[15,2]]]],[[[18,[15,2]]]],[[[6,[15,4,2]]]],[[[19,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[21,[16,2]]]],[[[22,[16,2]]]],[[[12,[15,[0,[2,25]]]],26],27],[[[3,[15,[0,[25,2]]]],26],27],[[[3,[15,[0,[28,2]]]],26],27],[[[18,[15,[0,[25,2]]]],26],27],[[[18,[15,[0,[28,2]]]],26],27],[[[13,[15,4,[0,[2,25]]]],26],27],[[[6,[15,4,[0,[28,2]]]],26],27],[[[6,[15,4,[0,[25,2]]]],26],27],[[[19,[15,4,[0,[25,2]]]],26],27],[[[19,[15,4,[0,[28,2]]]],26],27],[[[14,[16,[0,[2,25]]]],26],27],[[[8,[16,[0,[28,2]]]],26],27],[[[8,[16,[0,[25,2]]]],26],27],[[[9,[16,[0,[25,2]]]],26],27],[[[9,[16,[0,[28,2]]]],26],27],[[[11,[20,[0,[25,2]]]],26],27],[[[11,[20,[0,[28,2]]]],26],27],[[[21,[16,[0,[28,2]]]],26],27],[[[21,[16,[0,[25,2]]]],26],27],[[[22,[16,[0,[25,2]]]],26],27],[[[22,[16,[0,[28,2]]]],26],27],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[12,[1,2]]]],[[[13,[1,4,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[[14,[16,2]]]],[[[14,[7,2]]]],[[]],[[]],[[],[[12,[15]]]],[29],[[]],[[]],[[]],[[]],[[]],[[],[[13,[15,4]]]],[29],[[]],[[]],[[],[[14,[16]]]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,4]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[],30],[[],30],[[[14,[16,2]]],30],[[[5,[15,4]]],30],[[[13,[15,4,2]]],30],[[[3,[15,2]]]],[[]],[[[12,[15,2]]],[[3,[15,2]]]],[[[5,[15,4]]]],[[[13,[15,4,2]]],[[6,[15,4,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]],[[18,[15,2]]]],[[[18,[15,2]]],[[18,[15,2]]]],[[[6,[15,4,2]]],[[19,[15,4,2]]]],[[[19,[15,4,2]]],[[19,[15,4,2]]]],[[[8,[16,2]]],[[21,[16,2]]]],[[[9,[16,2]]],[[22,[16,2]]]],[[[21,[16,2]]],[[21,[16,2]]]],[[[22,[16,2]]],[[22,[16,2]]]],[[[3,[15,2]]],12],[[],[[12,[15]]]],[[],[[13,[15,4]]]],[[],[[14,[16]]]],[[],31],[[[12,[15,2]]]],[[[13,[15,4,2]]]],[[[14,[16,2]]]],[[[14,[16,2]]],[[8,[16,2]]]],[[[14,[32,2]]],[[8,[32,2]]]],[[[6,[15,4,2]]],13],[[[8,[16,2]]],14],[[[9,[16,2]]],14],[[[11,[20,2]]],14],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],30],[[[12,[15,2]]],[[34,[[3,[15,2]]]]]],[[[5,[15,4]]],30],[[[13,[15,4,2]]],[[34,[[6,[15,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[35,2]]],[[34,[[3,[35,2]]]]]],[[[5,[35,4]]],30],[[[13,[35,4,2]]],[[34,[[6,[35,4,2]]]]]],[[],30],[[],30],[[],30],[[[3,[15,2]]],[[33,[[18,[15,2]],[3,[15,2]]]]]],[[[18,[15,2]]],[[33,[[18,[15,2]],[18,[15,2]]]]]],[[[6,[15,4,2]]],[[33,[[19,[15,4,2]],[6,[15,4,2]]]]]],[[[19,[15,4,2]]],[[33,[[19,[15,4,2]],[19,[15,4,2]]]]]],[[[8,[16,2]]],[[33,[[21,[16,2]],[8,[16,2]]]]]],[[[9,[16,2]]],[[33,[[22,[16,2]],[9,[16,2]]]]]],[[[21,[16,2]]],[[33,[[21,[16,2]],[21,[16,2]]]]]],[[[22,[16,2]]],[[33,[[22,[16,2]],[22,[16,2]]]]]],[[[14,[16,2]]],[[34,[[8,[16,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[32,2]]],[[34,[[8,[32,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[37,2]]],[[34,[[8,[37,2]]]]]],[[[14,[36,2]]],[[34,[[8,[36,2]]]]]],[[[14,[20,2]]],[[34,[[11,[20,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[[14,[38,2]]],[[34,[[11,[38,2]]]]]],[[],30],[[[11,[20,2]]],[[33,[[9,[20,2]],[11,[20,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[],30],[[[11,[38,2]]],[[33,[[9,[38,2]],[11,[38,2]]]]]],[[[14,[16,2]]],[[34,[[9,[16,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[[14,[36,2]]],[[34,[[9,[36,2]]]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[[5,[15,4]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[18,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,4,2]]]],[[[19,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[21,[7,2]]]],[[[22,[7,2]]]],[[]],[[]],[[]],[[]],[[[3,[15,2]]]],[[[6,[15,4,2]]]],[[[8,[16,2]]]],[[[9,[16,2]]]],[[[11,[20,2]]]],[[[3,[1,2]]]],[[[6,[1,4,2]]]],[[[8,[7,2]]]],[[[9,[7,2]]]],[[[11,[10,2]]]],[[[14,[20,2]]],[[11,[20,2]]]],[[]],[[[11,[20,2]]],[[9,[20,2]]]],[[[14,[16,2]]],[[9,[16,2]]]]],"p":[[8,"RawMutexFair"],[8,"Sized"],[3,"MutexGuard"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":[14,14,14,14,14,14,14],"n":["offset_of","offset_of_tuple","offset_of_union","raw_field","raw_field_tuple","raw_field_union","span_of"],"q":["memoffset","","","","","",""],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Calculates the offset of the specified union member from …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"p":[]},\
"micromath":{"doc":"Embedded-friendly (i.e. <code>#![no_std]</code>) math library featuring …","t":[18,18,3,8,18,18,18,18,18,18,18,18,18,18,18,18,18,18,10,11,10,11,11,11,11,10,11,10,11,10,11,10,10,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,10,11,11,11,10,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,11,10,11,11,10,11,11,11,11],"n":["DIGITS","EPSILON","F32","F32Ext","INFINITY","MANTISSA_DIGITS","MAX","MAX_10_EXP","MAX_EXP","MIN","MIN_10_EXP","MIN_EXP","MIN_POSITIVE","NAN","NEG_INFINITY","ONE","RADIX","ZERO","abs","abs","acos","add","add","add_assign","add_assign","asin","asin","atan","atan","atan2","atan2","atan2_norm","atan_norm","atan_norm","borrow","borrow_mut","ceil","ceil","clone","copysign","copysign","cos","cos","default","div","div","div_assign","div_assign","div_euclid","div_euclid","eq","eq","exp","exp","floor","floor","fmt","fmt","fmt","fmt","fract","fract","from","from","from","from","from","from","from_bits","from_str","hypot","hypot","into","inv","inv","invsqrt","invsqrt","is_finite","is_infinite","is_nan","is_sign_negative","is_sign_positive","ln","ln","log","log","log10","log10","log2","log2","mul","mul","mul_assign","mul_assign","neg","partial_cmp","partial_cmp","powf","powf","powi","powi","product","rem","rem","rem_assign","rem_assign","rem_euclid","rem_euclid","round","round","sin","sin","sqrt","sqrt","sub","sub","sub_assign","sub_assign","sum","tan","tan","to_bits","trunc","trunc","try_from","try_into","type_id"],"q":["micromath","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Approximate number of significant digits in base 10.","Machine epsilon value for <code>f32</code>.","32-bit floating point wrapper which implements fast …","<code>f32</code> extension providing various arithmetic approximations …","Infinity (∞).","Number of significant digits in base 2.","Largest finite <code>f32</code> value.","Maximum possible power of 10 exponent.","Maximum possible power of 2 exponent.","Smallest finite <code>f32</code> value.","Minimum possible normal power of 10 exponent.","One greater than the minimum possible normal power of 2 …","Smallest positive normal <code>f32</code> value.","Not a Number (NaN).","Negative infinity (−∞).","The value <code>1.0</code>.","The radix or base of the internal representation of <code>f32</code>.","The value <code>0.0</code>.","Compute absolute value with a constant-time, …","Computes the absolute value of <code>self</code>.","Approximates <code>acos(x)</code> in radians in the range <code>[0, pi]</code>","","","","","Approximates <code>asin(x)</code> in radians in the range <code>[-pi/2, pi/2]</code>.","Computes <code>asin(x)</code> approximation in radians in the range …","Approximates <code>atan(x)</code> in radians with a maximum error of …","Approximates <code>atan(x)</code> approximation in radians with a …","Approximates the four quadrant arctangent <code>atan2(x)</code> in …","Approximates the four quadrant arctangent of <code>self</code> (<code>y</code>) and …","Approximates the four quadrant arctangent. Normalized to …","Approximates <code>atan(x)</code> normalized to the <code>[−1,1]</code> range with …","Approximates <code>atan(x)</code> normalized to the <code>[−1,1]</code> range with …","","","Approximates floating point ceiling.","Returns the smallest integer greater than or equal to a …","","Copies the sign from one number to another and returns it.","Returns a number composed of the magnitude of <code>self</code> and the …","Approximates cosine in radians with a maximum error of …","Approximates <code>cos(x)</code> in radians with a maximum error of …","","","","","","Calculates Euclidean division, the matching method for …","Calculates Euclidean division, the matching method for …","","","Approximates <code>e^x</code>.","Returns <code>e^(self)</code>, (the exponential function).","Approximates floating point floor.","Returns the largest integer less than or equal to a number.","","","","","Retrieve the fractional part of floating point with sign.","Returns the fractional part of a number with sign.","","","Returns the argument unchanged.","","","","Raw transmutation from <code>u32</code>.","","Approximates the length of the hypotenuse of a right-angle …","Calculate the length of the hypotenuse of a right-angle …","Calls <code>U::from(self)</code>.","Approximates <code>1/x</code> with an average deviation of ~8%.","Fast approximation of <code>1/x</code>.","Approximates inverse square root with an average deviation …","Approximate inverse square root with an average deviation …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code>.","Returns <code>true</code> if <code>self</code> has a negative sign, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> has a positive sign, including <code>+0.0</code>, …","Approximates <code>ln(x)</code>.","Approximates the natural logarithm of the number.","Approximates <code>log</code> with an arbitrary base.","Approximates the logarithm of the number with respect to …","Approximates <code>log10</code>.","Approximates the base 10 logarithm of the number.","Approximates <code>log2</code>.","Approximates the base 2 logarithm of the number.","","","","","","","","Approximates <code>self^n</code>.","Approximates a number raised to a floating point power.","Approximates <code>self^n</code> where n is an <code>i32</code>","Approximates a number raised to an integer power.","","","","","","Calculates the least nonnegative remainder of …","Calculates the least non-negative remainder of …","Round the number part of floating point with sign.","Returns the nearest integer to a number.","Approximates sine in radians with a maximum error of <code>0.002</code>.","Approximates <code>sin(x)</code> in radians with a maximum error of …","Approximates square root with an average deviation of ~5%.","Approximates the square root of a number with an average …","","","","","","Approximates <code>tan(x)</code> in radians with a maximum error of <code>0.6</code>.","Approximates <code>tan(x)</code> in radians with a maximum error of <code>0.6</code>.","Raw transmutation to <code>u32</code>.","Retrieve whole number part of floating point with sign.","Returns the integer part of a number.","","",""],"i":[2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,18,2,18,2,2,2,2,18,2,18,2,18,2,18,18,2,2,2,18,2,2,18,2,18,2,2,2,2,2,2,18,2,2,2,18,2,18,2,2,2,2,2,18,2,2,2,2,2,2,2,2,2,18,2,2,18,2,18,2,2,2,2,2,2,18,2,18,2,18,2,18,2,2,2,2,2,2,2,2,18,2,18,2,2,2,2,2,2,18,2,18,2,18,2,18,2,2,2,2,2,2,18,2,2,18,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,2],[[],1],[[2,2],2],[[2,1],2],[[2,1]],[[2,2]],[[],1],[2,2],[[],1],[2,2],[1,1],[[2,2],2],[1,1],[[],1],[2,2],[[]],[[]],[[],1],[2,2],[2,2],[1,1],[[2,2],2],[[],1],[2,2],[[],2],[[2,2],2],[[2,1],2],[[2,2]],[[2,1]],[1,1],[[2,2],2],[[2,2],3],[[2,1],3],[[],1],[2,2],[[],1],[2,2],[[2,4],5],[[2,4],5],[[2,4],5],[[2,4],5],[[],1],[2,2],[6,2],[1,2],[[]],[7,2],[8,2],[9,2],[10,2],[11,[[13,[2,12]]]],[1,1],[[2,2],2],[[]],[[],1],[2,2],[[],1],[2,2],[2,3],[2,3],[2,3],[2,3],[2,3],[[],1],[2,2],[1,1],[[2,2],2],[[],1],[2,2],[[],1],[2,2],[[2,2],2],[[2,1],2],[[2,2]],[[2,1]],[2,2],[[2,1],[[15,[14]]]],[[2,2],[[15,[14]]]],[1,1],[[2,2],2],[16,1],[[2,16],2],[[],2],[[2,1],2],[[2,2],2],[[2,1]],[[2,2]],[1,1],[[2,2],2],[[],1],[2,2],[[],1],[2,2],[[],1],[2,2],[[2,2],2],[[2,1],2],[[2,1]],[[2,2]],[[],2],[[],1],[2,2],[2,10],[[],1],[2,2],[[],13],[[],13],[[],17]],"p":[[15,"f32"],[3,"F32"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u16"],[15,"u8"],[15,"i16"],[15,"i8"],[15,"u32"],[15,"str"],[3,"ParseFloatError"],[4,"Result"],[4,"Ordering"],[4,"Option"],[15,"i32"],[3,"TypeId"],[8,"F32Ext"]]},\
"miniz_oxide":{"doc":"A pure rust replacement for the miniz DEFLATE/zlib …","t":[13,13,13,4,13,13,13,4,4,6,4,13,13,13,13,13,13,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,11,11,11,11,5,5,0,11,11,11,11,11,0,11,11,11,11,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,5,13,13,13,13,13,13,13,4,11,11,11,11,0,5,5,5,5,11,11,11,11,11,11,0,11,11,11,11,3,17,11,11,11,5,11,11,0,11,11,11,11,11,11,17,17,17,17,3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Block","Buf","Data","DataFormat","ErrNo","Finish","Full","MZError","MZFlush","MZResult","MZStatus","Mem","NeedDict","None","Ok","Param","Partial","Raw","Stream","StreamEnd","StreamResult","Sync","Version","Zlib","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_consumed","bytes_written","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deflate","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","inflate","into","into","into","into","into","new","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","BestCompression","BestSpeed","CompressionLevel","DefaultCompression","DefaultLevel","NoCompression","UberCompression","borrow","borrow_mut","clone","clone_into","compress_to_vec","compress_to_vec_zlib","core","eq","fmt","from","hash","into","stream","to_owned","try_from","try_into","type_id","BadParam","CallbackFunc","CompressionStrategy","CompressorOxide","Default","Done","Filtered","Finish","Fixed","Full","HuffmanOnly","None","Okay","PutBufFailed","RLE","Sync","TDEFLFlush","TDEFLStatus","adler32","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","compress_to_output","create_comp_flags_from_zip_params","data_format","default","deflate_flags","eq","eq","eq","flags","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","new","new","prev_return_status","put_buf_func","reset","set_compression_level","set_compression_level_raw","set_format_and_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TDEFL_COMPUTE_ADLER32","TDEFL_FILTER_MATCHES","TDEFL_FORCE_ALL_RAW_BLOCKS","TDEFL_FORCE_ALL_STATIC_BLOCKS","TDEFL_GREEDY_PARSING_FLAG","TDEFL_NONDETERMINISTIC_PARSING_FLAG","TDEFL_RLE_MATCHES","TDEFL_WRITE_ZLIB_HEADER","deflate","Adler32Mismatch","BadParam","Done","Failed","FailedCannotMakeProgress","HasMoreOutput","NeedsMoreInput","TINFLStatus","borrow","borrow_mut","clone","clone_into","core","decompress_to_vec","decompress_to_vec_with_limit","decompress_to_vec_zlib","decompress_to_vec_zlib_with_limit","eq","fmt","from","from_i32","hash","into","stream","to_owned","try_from","try_into","type_id","DecompressorOxide","TINFL_LZ_DICT_SIZE","adler32","borrow","borrow_mut","decompress","default","from","inflate_flags","init","into","new","try_from","try_into","type_id","TINFL_FLAG_COMPUTE_ADLER32","TINFL_FLAG_HAS_MORE_INPUT","TINFL_FLAG_PARSE_ZLIB_HEADER","TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF","FullReset","InflateState","MinReset","ResetPolicy","ZeroReset","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decompressor","default","from","from","from","from","inflate","into","into","into","into","last_status","new","new_boxed","new_boxed_with_window_bits","reset","reset","reset","reset","reset","reset_as","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["miniz_oxide","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::deflate::core::deflate_flags","","","","","","","","miniz_oxide::deflate::stream","miniz_oxide::inflate","","","","","","","","","","","","","","","","","","","","","","","","","","","","miniz_oxide::inflate::core","","","","","","","","","","","","","","","miniz_oxide::inflate::core::inflate_flags","","","","miniz_oxide::inflate::stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Not implemented.","","","How compressed data is wrapped.","","Attempt to flush the remaining data and end the stream.","Same as <code>Sync</code>, but resets the compression dictionary so …","A list of miniz failed status codes.","A list of flush types.","<code>Result</code> alias for all miniz status codes both successful …","A list of miniz successful status codes.","","","Don’t force any flushing. Used when more input data is …","","","Zlib partial flush. Currently treated as <code>Sync</code>.","Raw DEFLATE.","","","A structure containg the result of a call to the inflate …","Finish compressing the currently buffered data, and output …","","Wrapped using the zlib format.","","","","","","","","","","","The number of bytes consumed from the input slice.","The number of bytes written to the output slice.","","","","","","","","","","","This module contains functionality for compression.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","This module contains functionality for decompression.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create an MZFlush value from an integer value.","The return status of the call.","","","","","","","","","","","","","","","","","","","","","Slow/high compression. Do a lot of checks to try to find …","Fast compression. Uses a special compression routine that …","How much processing the compressor should do to compress …","Use the default compression level.","Default compromise between speed and compression.","Don’t do any compression, only output uncompressed …","Even more checks, can be very slow.","","","","","Compress the input data to a vector, using the specified …","Compress the input data to a vector, using the specified …","Streaming compression functionality.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Extra streaming compression functionality.","","","","","","Callback function and user used in <code>compress_to_output</code>.","Strategy setting for compression.","Main compression struct.","Don’t use any of the special strategies.","","Only use matches that are at least 5 bytes long.","Try to flush everything and end the stream.","Only use static/fixed blocks. (Blocks using the default …","Same as sync, but reset the dictionary so that the …","Don’t look for matches, only huffman encode the literals.","Compress as much as there is space for, and then return …","","","Only look for matches with a distance of 1, i.e do …","Try to flush the current data and output an empty raw …","A list of deflate flush types.","Return status codes.","Get the adler32 checksum of the currently encoded data.","","","","","","","","","","","","","","","","","Main compression function. Tries to compress as much as …","Main compression function. Callbacks output.","Create a set of compression flags using parameters used by …","Returns whether the compressor is wrapping the data in a …","Initialize the compressor with a level of 4, zlib wrapper …","","","","","Get the raw compressor flags.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CompressorOxide</code> with the given flags.","","Get the return status of the previous <code>compress</code> call with …","","Reset the state of the compressor, keeping the same …","Set the compression level of the compressor.","Set the compression level of the compressor using an …","Update the compression settings of the compressor.","","","","","","","","","","","","","","","","","","","Should we compute the adler32 checksum.","Only use matches that are at least 6 bytes long.","Force the compressor to only output raw/uncompressed …","Force the compressor to only output static blocks. (Blocks …","Should we use greedy parsing (as opposed to lazy parsing …","Used in miniz to skip zero-initializing hash and dict. We …","Only look for matches with a distance of 0.","Whether to use a zlib wrapper.","Try to compress from input to output with the given …","The decompression went fine, but the adler32 checksum did …","One or more of the input parameters were invalid.","Finished decomression without issues.","Failed to decompress due to invalid data.","More input data was expected, but the caller indicated …","There is still pending data that didn’t fit in the …","The decompressor needs more input data to continue …","Return status codes.","","","","","Streaming decompression functionality.","Decompress the deflate-encoded data in <code>input</code> to a vector.","Decompress the deflate-encoded data in <code>input</code> to a vector. …","Decompress the deflate-encoded data (with a zlib wrapper) …","Decompress the deflate-encoded data (with a zlib wrapper) …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Extra streaming decompression functionality.","","","","","Main decompression struct.","","Returns the adler32 checksum of the currently decompressed …","","","Main decompression function. Keeps decompressing data from …","Create a new tinfl_decompressor with all fields set to 0.","Returns the argument unchanged.","","Set the current state to <code>Start</code>.","Calls <code>U::from(self)</code>.","Create a new tinfl_decompressor with all fields set to 0.","","","","Should we calculate the adler32 checksum of the output …","There is more input that hasn’t been given to the …","Should we try to parse a zlib header?","The output buffer should not wrap around.","Full reset of the state, including zeroing memory.","A struct that compbines a decompressor with extra data for …","Resets state, without performing expensive ops (e.g. …","Tag that determines reset policy of InflateState","Resets state and zero memory, continuing to use the same …","","","","","","","","","Access the innner decompressor.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Try to decompress from <code>input</code> to <code>output</code> with the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the status of the last call to <code>inflate</code> with this …","Create a new state.","Create a new state on the heap.","Create a new state using miniz/zlib style window bits …","Performs reset","","","","Reset the decompressor without re-allocating memory, using …","Resets the state according to specified policy.","","","","","","","","","","","",""],"i":[1,3,3,0,3,1,1,0,0,0,0,3,2,1,2,3,1,4,3,2,0,1,3,4,1,2,3,4,5,1,2,3,4,5,5,5,1,2,3,4,5,1,2,3,4,5,0,1,2,3,4,5,1,2,3,4,5,9,9,1,2,3,4,5,1,2,3,4,5,0,1,2,3,4,5,1,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,13,13,0,13,13,13,13,13,13,13,13,0,0,0,13,13,13,13,13,0,13,13,13,13,20,0,0,0,18,20,18,19,18,19,18,19,20,20,18,19,0,0,16,16,32,18,19,20,16,32,18,19,20,18,19,20,18,19,20,0,0,0,16,16,0,18,19,20,16,18,19,20,16,32,18,19,19,20,18,19,20,16,32,18,19,20,16,19,16,32,16,16,16,16,18,19,20,16,32,18,19,20,16,32,18,19,20,16,32,18,19,20,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,0,22,22,22,22,0,0,0,0,0,22,22,22,22,22,22,0,22,22,22,22,0,0,25,25,25,0,25,25,0,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,28,29,30,26,28,29,30,26,26,26,28,29,30,26,0,28,29,30,26,26,26,26,26,31,28,29,30,26,26,28,29,30,26,28,29,30,26,28,29,30,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],0,[[1,1],6],[[2,2],6],[[3,3],6],[[4,4],6],[[5,5],6],[[1,7],8],[[2,7],8],[[3,7],8],[[4,7],8],[[5,7],8],[5,9],[5,9],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[4],[5],0,[[]],[[]],[[]],[[]],[[]],[10,[[11,[1,3]]]],0,[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,[[]],[[]],[13,13],[[]],[14,[[15,[14]]]],[14,[[15,[14]]]],0,[[13,13],6],[[13,7],8],[[]],[13],[[]],0,[[]],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[19,19],[20,20],[[]],[[]],[[]],[[16,19]],[[16,19,21]],[[10,10,10],17],[16,4],[[],16],0,[[18,18],6],[[19,19],6],[[20,20],6],[16,10],[[18,7],8],[[19,7],8],[[20,7],8],[[]],[[]],[[]],[1,19],[[]],[[]],[18],[19],[20],[[]],[[]],[[]],[[]],[[]],[17,16],[10,[[11,[19,3]]]],[16,20],0,[16],[[16,13]],[[16,14]],[[16,4,14]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,[[16,1],5],0,0,0,0,0,0,0,0,[[]],[[]],[22,22],[[]],0,[[],[[11,[[15,[14]],22]]]],[23,[[11,[[15,[14]],22]]]],[[],[[11,[[15,[14]],22]]]],[23,[[11,[[15,[14]],22]]]],[[22,22],6],[[22,7],8],[[]],[10,[[24,[22]]]],[22],[[]],0,[[]],[[],11],[[],11],[[],12],0,0,[25,[[24,[17]]]],[[]],[[]],[[25,23,17]],[[],25],[[]],0,[25],[[]],[[],25],[[],11],[[],11],[[],12],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,25],[[],26],[[]],[[]],[[]],[[]],[[26,1],5],[[]],[[]],[[]],[[]],[26,22],[4,26],[4,[[27,[26]]]],[10,[[27,[26]]]],[26],[[28,26]],[[29,26]],[[30,26]],[[26,4]],[[26,31]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12]],"p":[[4,"MZFlush"],[4,"MZStatus"],[4,"MZError"],[4,"DataFormat"],[3,"StreamResult"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"MZResult"],[15,"i32"],[4,"Result"],[3,"TypeId"],[4,"CompressionLevel"],[15,"u8"],[3,"Vec"],[3,"CompressorOxide"],[15,"u32"],[4,"CompressionStrategy"],[4,"TDEFLFlush"],[4,"TDEFLStatus"],[8,"FnMut"],[4,"TINFLStatus"],[15,"usize"],[4,"Option"],[3,"DecompressorOxide"],[3,"InflateState"],[3,"Box"],[3,"MinReset"],[3,"ZeroReset"],[3,"FullReset"],[8,"ResetPolicy"],[3,"CallbackFunc"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":[8,8,8,8,8,3,8,16,8,8,8,8,8,6,8,8,8,8,8,5,10,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,5,5,10,10,10,5,10,5,11,11,0,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,12,0,11,11,11,11,10,11,11,10,11,10,11,10,11,11,10,10,11,0,11,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,0,0,5,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,10,10,5,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,0,11,11,11,11,10,10,5,10,11,8,8,8,8,8,8,8,8,10,10,5,5,10,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,3,6,6,3,11,11,11,11,11,11,12,11,12,11,11,11,11,8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,8,5,5,5,5,10,10,3,3,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,8,8,8,8,8,8,8,8,8,10,13,8,10,10,10,10,10,10,10,10,10,8,8,4,8,16,8,13,10,10,11,10,11,10,8,8,8,8,8,8,8,8,8,8,16,16,16,10,3,8,8,8,10,8,8,8,8,8,11,8,8,8,8,8,8,8,8,8,5,10,10,5,10,10,10,10,10,10,10,10,10,10,11,11,11,11,0,0,5,10,10,10,10,10,10,10,5,10,10,10,10,10,5,5,5,10,11,10,10,10,10,10,11,10,10,10,0,10,11,11,11,10,10,11,11,10,11,11,11,11,11,10,11,11,10,10,11,11,11,10,11,11,10,0,10,0,10,11,11,10,10,10,10,10,10,11,10,10,10,10,12,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,0,0,5,10,10,10,10,0,10,10,11,10,10,10,10,10,10,10,10,11,11,0,10,10,5,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,10,11,11,11,10,10,11,11,11,11,11,11,10,10,10,10,10,10,10,10,5,10,8,8,8,10,10,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,10,10,11,10,11,10,10,10,11,10,11,10,10,10,10,10,10,10,10,10,10,11,10,10,11,10,10,10,11,10,10,10,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,10,11,10,11,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,11,10,10,11,10,10,10,10,10,10,10,11,10,10,10,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,5,10,5,10,10,10,5,10],"n":["Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedSub","Complex","FromPrimitive","FromStrRadixErr","Integer","Num","NumCast","One","PrimInt","Rational","Saturating","Signed","ToPrimitive","Unsigned","Zero","abs","abs","abs_sub","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow_mut","cast","cast","cast","cast","checked_add","checked_div","checked_mul","checked_pow","checked_sub","clamp","clone","clone_into","complex","conj","count_ones","count_zeros","default","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_ceil","div_floor","div_mod_floor","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_be","from_f32","from_f32","from_f64","from_f64","from_i128","from_i128","from_i16","from_i16","from_i32","from_i32","from_i64","from_i64","from_i8","from_i8","from_isize","from_isize","from_le","from_str","from_str_radix","from_str_radix","from_u128","from_u128","from_u16","from_u16","from_u32","from_u32","from_u64","from_u64","from_u8","from_u8","from_usize","from_usize","gcd","gcd_lcm","hash","i","im","integer","into","inv","inv","inv","is_even","is_finite","is_infinite","is_multiple_of","is_nan","is_negative","is_normal","is_odd","is_one","is_one","is_positive","is_zero","is_zero","iter","l1_norm","lcm","leading_ones","leading_zeros","max_value","min_value","mod_floor","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","next_multiple_of","norm_sqr","one","one","one","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powi","powu","prev_multiple_of","product","product","range","range_inclusive","range_step","range_step_inclusive","rational","re","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","reverse_bits","rotate_left","rotate_right","saturating_add","saturating_sub","scale","set_one","set_one","set_zero","set_zero","signed_shl","signed_shr","signum","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","swap_bytes","to_be","to_f32","to_f32","to_f64","to_f64","to_i128","to_i128","to_i16","to_i16","to_i32","to_i32","to_i64","to_i64","to_i8","to_i8","to_isize","to_isize","to_le","to_owned","to_string","to_u128","to_u128","to_u16","to_u16","to_u32","to_u32","to_u64","to_u64","to_u8","to_u8","to_usize","to_usize","trailing_ones","trailing_zeros","traits","try_from","try_into","type_id","unscale","unsigned_shl","unsigned_shr","zero","zero","zero","AsPrimitive","AsPrimitive","FromPrimitive","FromPrimitive","NumCast","NumCast","ToPrimitive","ToPrimitive","as_","as_","cast","cast","from","from","from_f32","from_f32","from_f64","from_f64","from_i128","from_i128","from_i16","from_i16","from_i32","from_i32","from_i64","from_i64","from_i8","from_i8","from_isize","from_isize","from_u128","from_u128","from_u16","from_u16","from_u32","from_u32","from_u64","from_u64","from_u8","from_u8","from_usize","from_usize","to_f32","to_f32","to_f64","to_f64","to_i128","to_i128","to_i16","to_i16","to_i32","to_i32","to_i64","to_i64","to_i8","to_i8","to_isize","to_isize","to_u128","to_u128","to_u16","to_u16","to_u32","to_u32","to_u64","to_u64","to_u8","to_u8","to_usize","to_usize","Complex","Complex32","Complex64","ParseComplexError","borrow","borrow_mut","eq","fmt","fmt","from","im","into","re","to_string","try_from","try_into","type_id","Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Output","Output","Pow","Pow","checked_pow","checked_pow","pow","pow","pow","pow","ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero","AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","Euclid","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acosh","as_","asin","asinh","atan","atan2","atanh","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","cbrt","ceil","checked_add","checked_div","checked_div_euclid","checked_mul","checked_neg","checked_pow","checked_rem","checked_rem_euclid","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","classify","copysign","cos","cosh","count_ones","count_zeros","div_euclid","epsilon","exp","exp2","exp_m1","float","floor","fmt","fmt","fmt","fract","from","from","from","from_be","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hypot","identities","infinity","int","integer_decode","into","into","inv","is_finite","is_infinite","is_nan","is_negative","is_normal","is_one","is_positive","is_sign_negative","is_sign_positive","is_zero","kind","leading_ones","leading_zeros","ln","ln_1p","log","log10","log2","max","max_value","max_value","min","min_positive_value","min_value","min_value","mul_add","mul_add","mul_add_assign","nan","neg_infinity","neg_zero","one","one","ops","pow","pow","pow","pow","powf","powi","real","recip","rem_euclid","reverse_bits","rotate_left","rotate_right","round","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","signum","sin","sin_cos","sinh","sqrt","swap_bytes","tan","tanh","to_be","to_degrees","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_radians","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_ones","trailing_zeros","trunc","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["numnum::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::complex","","","","","","","","","","","","","","","","","num::integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::pow","","","","","","","","","","num::rationalnum::traitsnum::traits::bounds","","","","","","","num::traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits::identities","","","","","","","","","","num::traits::int","","","","","","","","","","","","","","","","","","","","num::traits::ops","","","","","","","num::traits::ops::checked","","","","","","","","","","","","","","","","num::traits::ops::euclid","","","","","","num::traits::ops::inv","","","num::traits::ops::mul_add","","","","","num::traits::ops::overflowing","","","","","","num::traits::ops::saturating","","","","","","","","","num::traits::ops::wrapping","","","","","","","","","","","","num::traits::pow","","","","","num::traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num::traits::sign","","","","","","","","",""],"d":["Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs subtraction that returns <code>None</code> instead of wrapping …","A complex number in Cartesian form.","A generic trait for converting a number to a value.","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","An interface for casting between machine scalars.","Defines a multiplicative identity element for <code>Self</code>.","Generic trait for primitive integers.","Alias for a <code>Ratio</code> of machine-sized integers.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Useful functions for signed numbers (i.e. numbers that can …","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","","","","","","","","","","","","","","","","","","Cast from one machine scalar to another.","Cast from one machine scalar to another.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Raises a value to the power of exp, returning <code>None</code> if an …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","","","","","","","","","","","","","","Ceiled integer division.","Floored integer division.","Simultaneous floored integer division and modulus. Returns …","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","","","","","","Creates a number from another value that can be converted …","","","","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","","Converts a <code>f64</code> to return an optional value of this type. …","","Converts an <code>i128</code> to return an optional value of this type. …","","Converts an <code>i16</code> to return an optional value of this type. …","","Converts an <code>i32</code> to return an optional value of this type. …","","Converts an <code>i64</code> to return an optional value of this type. …","","Converts an <code>i8</code> to return an optional value of this type. …","","Converts an <code>isize</code> to return an optional value of this …","","Convert an integer from little endian to the target’s …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Convert from a string and radix (typically <code>2..=36</code>).","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Converts an <code>u128</code> to return an optional value of this type. …","","Converts an <code>u16</code> to return an optional value of this type. …","","Converts an <code>u32</code> to return an optional value of this type. …","","Converts an <code>u64</code> to return an optional value of this type. …","","Converts an <code>u8</code> to return an optional value of this type. …","","Converts a <code>usize</code> to return an optional value of this type. …","","Greatest Common Divisor (GCD).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","Returns imaginary unit","Imaginary portion of the complex number","","Calls <code>U::from(self)</code>.","","Returns <code>1/self</code>","","Returns <code>true</code> if the number is even.","Checks if the given complex number is finite","Checks if the given complex number is infinite","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Checks if the given complex number is NaN","Returns true if the number is negative and false if the …","Checks if the given complex number is normal","Returns <code>true</code> if the number is odd.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Lowest Common Multiple (LCM).","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Floored integer modulo, satisfying:","","","","","","","","","","","","","","","","","","","Create a new Complex","Rounds up to nearest multiple of argument.","Returns the square of the norm (since <code>T</code> doesn’t …","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","Rounds down to nearest multiple of argument.","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","","Real portion of the complex number","","","","","","","","","","","","","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Multiplies <code>self</code> by the scalar <code>t</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","","","","","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","","Convert <code>self</code> to little endian from the target’s …","","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","A generic interface for casting between machine scalars …","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","A complex number in Cartesian form.","","","","","","","","","Returns the argument unchanged.","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Real portion of the complex number","","","","","Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","","","An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result after applying the operator.","The result after applying the operator.","Binary operator for raising a value to a power.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Returns <code>self</code> to the power <code>rhs</code>.","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for <code>Num</code> references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Convert a value to another, using the <code>as</code> operator.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Performs euclid division that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Finds the euclid remainder of dividing two numbers, …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Calculates Euclidean division, the matching method for …","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","","Returns the largest integer less than or equal to a number.","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Calculate the length of the hypotenuse of a right-angle …","","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the multiplicative inverse of <code>self</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns true if the number is negative and false if the …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Convert <code>self</code> to big endian from the target’s endianness.","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Converts degrees to radians.","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Return the integer part of a number.","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,41,0,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,42,43,44,0,45,0,1,1,0,1,46,46,1,1,1,1,1,1,1,1,1,1,1,1,1,47,47,47,47,47,1,47,47,1,1,1,1,1,1,1,1,48,1,1,1,1,46,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,46,1,40,1,49,1,49,1,49,1,49,1,49,1,49,1,47,47,1,1,1,0,1,1,1,1,47,1,1,47,1,41,1,47,50,1,41,51,1,0,1,47,46,46,52,52,47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,47,1,0,50,1,0,0,0,0,46,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,47,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,46,46,46,53,53,1,50,1,51,1,46,46,0,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,46,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,46,1,1,54,1,54,1,54,1,54,1,54,1,54,1,46,46,0,1,1,1,1,46,46,0,51,1,0,0,0,0,0,0,0,0,55,55,0,0,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,29,29,29,29,29,29,1,29,1,29,29,29,29,0,0,0,0,0,0,56,0,56,0,30,6,30,6,0,57,6,6,0,47,0,47,0,47,0,47,47,6,47,47,6,30,6,0,47,6,0,47,30,6,30,47,47,47,0,47,0,47,0,30,30,47,0,57,47,0,57,6,30,6,30,6,30,6,6,6,0,0,0,0,0,0,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,23,24,31,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,23,24,0,0,0,0,0,0,23,24,31,32,23,24,31,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,23,24,25,26,31,32,58,58,0,0,0,0,0,0,58,58,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,35,34,34,34,34,34,34,35,34,35,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,34,34,34,34,34,34,34,34,35,35,34,34,34,34,35,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,35,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,35,34,35,34,0,0,0,0,0,0,0,0,0,0,0,59,38,0,59,59,59,59,59,59,59,59,59,0,0,0,0,40,0,38,59,59,59,59,59,59,0,0,0,0,0,0,0,0,0,0,60,61,58,59,0,0,0,0,59,0,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,62,41,0,62,41,62,62,55,62,62,62,62,62,38,39,38,39,0,0,0,62,62,42,43,63,44,64,0,65,63,66,67,45,0,0,0,62,62,62,62,46,46,68,62,62,62,62,0,62,38,39,39,62,48,38,39,46,49,49,49,49,49,49,49,49,46,40,49,49,49,49,49,49,62,0,62,0,62,38,39,60,62,62,62,41,62,50,41,62,62,51,39,46,46,62,62,62,62,62,62,52,62,62,62,52,62,62,61,69,62,62,62,0,50,0,0,0,46,58,62,62,0,62,68,46,46,46,62,53,70,71,53,72,50,51,0,46,46,0,62,41,62,62,62,62,46,62,62,46,62,54,54,54,54,54,54,54,54,46,62,39,54,54,54,54,54,54,46,46,62,38,39,38,39,38,39,46,46,73,74,75,76,77,78,0,51,0,0,0,52,79,52,80,0,0,0,0,55,0,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,54,54,54,54,54,54,54,54,54,54,54,54,54,54,59,59,59,59,59,59,59,59,59,59,0,0,0,59,59,59,59,59,59,59,59,59,62,81,62,62,62,62,62,62,62,62,62,62,81,81,62,62,62,62,81,62,62,62,62,62,81,62,81,62,81,62,81,62,62,81,62,81,62,81,62,81,62,81,62,81,62,62,62,62,62,62,81,81,62,62,81,81,62,81,62,62,81,62,81,62,81,62,62,62,81,62,81,62,81,62,81,62,62,62,62,62,62,81,62,81,62,62,81,0,0,50,51,0,50,50,51,0,51,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,64,65,66,67,45,0,0,63,63,68,68,0,60,60,0,0,61,61,69,0,0,0,82,83,84,0,0,0,0,53,70,71,53,72,0,0,0,0,0,0,73,74,75,76,77,78,58,0,0,0,58,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,41,0,41,41,41,0,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[[1,1]],[1],[[1,1]],[[1,1]],[[1,1]],[1],[[1,1]],[[1,1]],[1],[1],[1],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[3,2],[[],2],[[]],[1,1],[[]],0,[1,1],[[],4],[[],4],[[],1],[1],[[1,1]],[[1,1]],[[1,1]],[1],[1],[[1,1]],[1],[[1,1]],[1],[1],[[1,1]],[[]],[[]],[[]],[[]],[[],5],[[1,1],5],[[],6],[[]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[],2],[[],1],[[],1],[[],[[2,[1]]]],[[]],[[]],[10,2],[10,[[2,[1]]]],[11,2],[11,[[2,[1]]]],[12,2],[12,[[2,[1]]]],[13,2],[13,[[2,[1]]]],[14,2],[14,[[2,[1]]]],[15,2],[15,[[2,[1]]]],[16,2],[16,[[2,[1]]]],[17,2],[17,[[2,[1]]]],[[]],[18,[[9,[1]]]],[[18,4],9],[[18,4],[[9,[1]]]],[19,2],[19,[[2,[1]]]],[20,2],[20,[[2,[1]]]],[4,2],[4,[[2,[1]]]],[21,2],[21,[[2,[1]]]],[22,2],[22,[[2,[1]]]],[3,2],[3,[[2,[1]]]],[[]],[[]],[1],[[],1],0,0,[[]],[1],[1,1],[1],[[],5],[1,5],[1,5],[[],5],[1,5],[[],5],[1,5],[[],5],[[],5],[1,5],[[],5],[[],5],[1,5],0,[1],[[]],[[],4],[[],4],[[]],[[]],[[]],[1],[1],[[1,1]],[[1,1]],[[1,1]],[1],[1],[[1,1]],[[1,1,1],1],[[1,1,1],1],[[1,1,1]],[[1,1,1]],[[1,1]],[1],[[1,1]],[1],[1],[1],[[],1],[[]],[1],[[]],[[]],[[],1],0,0,[3],[3],[4],[[1,19]],[[1,4]],[[1,22]],[[1,3]],[[1,15]],[[1,12]],[[1,19]],[[1,13]],[[1,15]],[[1,17]],[[1,20]],[[1,21]],[[1,21]],[[1,14]],[[1,13]],[[1,16]],[[1,14]],[[1,22]],[[1,12]],[[1,3]],[[1,17]],[[1,16]],[[1,20]],[[1,4]],[[1,14],1],[[1,4],1],[[]],[[],1],[[],1],[[],23],[[],24],[[],25],[[],26],0,0,[[1,1]],[[1,1]],[1],[[1,1]],[1],[1],[[1,1]],[1],[1],[[1,1]],[1],[[1,1]],[[]],[4],[4],[[]],[[]],[1,1],[[]],[1],[[]],[1],[4],[4],[[]],[[]],[[1,1]],[[1,1]],[1],[1],[1],[[1,1]],[[1,1]],[1],[[1,1]],[1],[1],[[1,1]],[[],1],[[],1],[[]],[[]],[[],[[2,[10]]]],[1,[[2,[10]]]],[[],[[2,[11]]]],[1,[[2,[11]]]],[[],[[2,[12]]]],[1,[[2,[12]]]],[[],[[2,[13]]]],[1,[[2,[13]]]],[[],[[2,[14]]]],[1,[[2,[14]]]],[[],[[2,[15]]]],[1,[[2,[15]]]],[[],[[2,[16]]]],[1,[[2,[16]]]],[[],[[2,[17]]]],[1,[[2,[17]]]],[[]],[[]],[[],27],[[],[[2,[19]]]],[1,[[2,[19]]]],[[],[[2,[20]]]],[1,[[2,[20]]]],[[],[[2,[4]]]],[1,[[2,[4]]]],[[],[[2,[21]]]],[1,[[2,[21]]]],[[],[[2,[22]]]],[1,[[2,[22]]]],[[],[[2,[3]]]],[1,[[2,[3]]]],[[],4],[[],4],0,[[],9],[[],9],[[],28],[1,1],[4],[4],[[]],[[]],[[],1],0,0,0,0,0,0,0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[10,2],[10,2],[11,2],[11,2],[12,2],[12,2],[13,2],[13,2],[14,2],[14,2],[15,2],[15,2],[16,2],[16,2],[17,2],[17,2],[19,2],[19,2],[20,2],[20,2],[4,2],[4,2],[21,2],[21,2],[22,2],[22,2],[3,2],[3,2],[[],[[2,[10]]]],[[],[[2,[10]]]],[[],[[2,[11]]]],[[],[[2,[11]]]],[[],[[2,[12]]]],[[],[[2,[12]]]],[[],[[2,[13]]]],[[],[[2,[13]]]],[[],[[2,[14]]]],[[],[[2,[14]]]],[[],[[2,[15]]]],[[],[[2,[15]]]],[[],[[2,[16]]]],[[],[[2,[16]]]],[[],[[2,[17]]]],[[],[[2,[17]]]],[[],[[2,[19]]]],[[],[[2,[19]]]],[[],[[2,[20]]]],[[],[[2,[20]]]],[[],[[2,[4]]]],[[],[[2,[4]]]],[[],[[2,[21]]]],[[],[[2,[21]]]],[[],[[2,[22]]]],[[],[[2,[22]]]],[[],[[2,[3]]]],[[],[[2,[3]]]],0,0,0,0,[[]],[[]],[[29,29],5],[[29,7],[[9,[8]]]],[[29,7],[[9,[8]]]],[[]],0,[[]],0,[[],27],[[],9],[[],9],[[],28],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[6,6],5],[[],6],[[]],[[6,7],[[9,[8]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[],30],[30,2],[[]],[4],[4],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],28],[[],28],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[25,25],[26,26],[31,31],[32,32],[[]],[[]],[[]],[[]],[[]],[[]],[23,33],[24,33],[31,33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,2],[24,2],[25,2],[26,2],[31,2],[32,2],[23,2],[24,2],[[],23],[[],31],[[],24],[[],25],[[],32],[[],26],[23],[24],[31],[32],[23,33],[24,33],[31,33],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,[3,2],[3,2],[3],[3],[[]],[[]],0,0,0,0,0,[34,34],[[34,34],34],[34,34],[34,34],[[34,34],34],[[34,34],34],[[34,34],34],[[34,34],34],[34,34],[34,34],[34],[34],[[34,34]],[[34,34]],[[],[[2,[34]]]],[[]],[[]],[[]],[[]],[34,34],[[34,34],[[2,[34]]]],[[34,34],[[2,[34]]]],[[34,34],[[2,[34]]]],[[34,34],[[2,[34]]]],[34,34],[35,35],[[]],[[]],[[34,34],36],[34],[34,34],[34,34],[34,34],[[34,34],34],[34,34],[[34,34],34],[[34,34],34],[[34,34],34],[[34,34]],[34],[34],[[34,34]],[[34,34],5],[[35,35],5],[34,34],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[34,7],[[9,[8]]]],[[35,7],[[9,[8]]]],[[35,7],[[9,[8]]]],[34,34],[[]],[[],34],[[],34],[[]],[10,[[2,[[34,[20]]]]]],[10,[[2,[[34,[22]]]]]],[10,[[2,[[34,[4]]]]]],[10,[[2,[[34,[17]]]]]],[10,[[2,[[34,[21]]]]]],[10,[[2,[[34,[3]]]]]],[10,[[2,[[34,[16]]]]]],[10,[[2,[[34,[19]]]]]],[10,[[2,[[34,[13]]]]]],[10,[[2,[[34,[15]]]]]],[10,[[2,[[34,[12]]]]]],[10,[[2,[[34,[14]]]]]],[11,[[2,[[34,[20]]]]]],[11,[[2,[[34,[13]]]]]],[11,[[2,[[34,[22]]]]]],[11,[[2,[[34,[4]]]]]],[11,[[2,[[34,[17]]]]]],[11,[[2,[[34,[12]]]]]],[11,[[2,[[34,[21]]]]]],[11,[[2,[[34,[3]]]]]],[11,[[2,[[34,[14]]]]]],[11,[[2,[[34,[16]]]]]],[11,[[2,[[34,[15]]]]]],[11,[[2,[[34,[19]]]]]],[12,[[2,[[34,[20]]]]]],[12,[[2,[[34,[21]]]]]],[12,[[2,[[34,[13]]]]]],[12,[[2,[[34,[22]]]]]],[12,[[2,[[34,[12]]]]]],[12,[[2,[[34,[19]]]]]],[12,[[2,[[34,[15]]]]]],[12,[[2,[[34,[4]]]]]],[12,[[2,[[34,[16]]]]]],[12,[[2,[[34,[3]]]]]],[12,[[2,[[34,[17]]]]]],[12,[[2,[[34,[14]]]]]],[15,[[2,[[34,[16]]]]]],[15,[[2,[[34,[20]]]]]],[15,[[2,[[34,[22]]]]]],[15,[[2,[[34,[17]]]]]],[15,[[2,[[34,[21]]]]]],[15,[[2,[[34,[12]]]]]],[15,[[2,[[34,[14]]]]]],[15,[[2,[[34,[4]]]]]],[15,[[2,[[34,[15]]]]]],[15,[[2,[[34,[3]]]]]],[15,[[2,[[34,[13]]]]]],[15,[[2,[[34,[19]]]]]],[[],34],[18,[[9,[34,35]]]],[[18,4],[[9,[34,35]]]],[19,[[2,[[34,[22]]]]]],[19,[[2,[[34,[17]]]]]],[19,[[2,[[34,[16]]]]]],[19,[[2,[[34,[19]]]]]],[19,[[2,[[34,[21]]]]]],[19,[[2,[[34,[13]]]]]],[19,[[2,[[34,[4]]]]]],[19,[[2,[[34,[20]]]]]],[19,[[2,[[34,[14]]]]]],[19,[[2,[[34,[12]]]]]],[19,[[2,[[34,[3]]]]]],[19,[[2,[[34,[15]]]]]],[21,[[2,[[34,[15]]]]]],[21,[[2,[[34,[12]]]]]],[21,[[2,[[34,[3]]]]]],[21,[[2,[[34,[17]]]]]],[21,[[2,[[34,[14]]]]]],[21,[[2,[[34,[22]]]]]],[21,[[2,[[34,[20]]]]]],[21,[[2,[[34,[13]]]]]],[21,[[2,[[34,[4]]]]]],[21,[[2,[[34,[19]]]]]],[21,[[2,[[34,[16]]]]]],[21,[[2,[[34,[21]]]]]],[34],[34],[[]],[[]],[34,34],[34,34],[34,5],[34,5],[34,5],[34,5],[34,5],[[34,34],34],[34,34],[[34,34],34],[34,34],[34,34],[34,34],[[34,34],34],[[34,34],34],[34],[[34,34]],[34],[[34,34]],[34,34],[34,34],[[],34],[[],34],[34],[[],34],[[34,34],[[2,[36]]]],[[34,3],34],[[34,21],34],[[34,4],34],[[34,3],34],[[34,16],34],[[34,13],34],[[34,21],34],[[34,3],34],[[34,14],34],[[34,15],34],[[34,12],34],[[34,16],34],[[34,22],34],[[34,13],34],[[34,21],34],[[34,19],34],[[34,17],34],[[34,17],34],[[34,22],34],[[34,14],34],[[34,19],34],[[34,12],34],[[34,17],34],[[34,15],34],[[34,14],34],[[34,15],34],[[34,16],34],[[34,14],34],[[34,14],34],[[34,20],34],[[34,15],34],[[34,3],34],[[34,22],34],[[34,13],34],[[34,4],34],[[34,19],34],[[34,20],34],[[34,16],34],[[34,12],34],[[34,4],34],[[34,13],34],[[34,12],34],[[34,20],34],[[34,17],34],[[34,19],34],[[34,4],34],[[34,20],34],[[34,21],34],[[34,22],34],[[],34],[[],34],[34,34],[34,34],[[34,34],34],[[34,34],34],[[34,34],34],[34,34],[34,34],[34,34],[34,34],[[34,34],34],[34],[[34,34]],[34],[[34,34]],[34,34],[34],[34],[34,34],[[34,34],34],[34,34],[34,34],[34,34],[[34,34],34],[[34,34],34],[[34,34],34],[34,34],[34],[[34,34]],[[34,34]],[34],[[],34],[[],34],[[[34,[4]]],[[2,[11]]]],[[[34,[22]]],[[2,[11]]]],[[[34,[15]]],[[2,[11]]]],[[[34,[21]]],[[2,[11]]]],[[[34,[20]]],[[2,[11]]]],[[[34,[14]]],[[2,[11]]]],[[[34,[16]]],[[2,[11]]]],[[[34,[13]]],[[2,[11]]]],[[[34,[17]]],[[2,[11]]]],[[[34,[3]]],[[2,[11]]]],[[[34,[20]]],[[2,[12]]]],[[[34,[13]]],[[2,[12]]]],[[[34,[21]]],[[2,[12]]]],[[[34,[3]]],[[2,[12]]]],[[[34,[14]]],[[2,[12]]]],[[[34,[4]]],[[2,[12]]]],[[[34,[17]]],[[2,[12]]]],[[[34,[22]]],[[2,[12]]]],[[[34,[16]]],[[2,[12]]]],[[[34,[15]]],[[2,[12]]]],[[[34,[22]]],[[2,[15]]]],[[[34,[16]]],[[2,[15]]]],[[[34,[20]]],[[2,[15]]]],[[[34,[3]]],[[2,[15]]]],[[[34,[15]]],[[2,[15]]]],[[[34,[17]]],[[2,[15]]]],[[[34,[4]]],[[2,[15]]]],[[[34,[21]]],[[2,[15]]]],[[[34,[14]]],[[2,[15]]]],[[[34,[13]]],[[2,[15]]]],[34],[[]],[[]],[[],27],[[],27],[[[34,[4]]],[[2,[19]]]],[[[34,[22]]],[[2,[19]]]],[[[34,[16]]],[[2,[19]]]],[[[34,[15]]],[[2,[19]]]],[[[34,[17]]],[[2,[19]]]],[[[34,[20]]],[[2,[19]]]],[[[34,[13]]],[[2,[19]]]],[[[34,[3]]],[[2,[19]]]],[[[34,[21]]],[[2,[19]]]],[[[34,[14]]],[[2,[19]]]],[[[34,[21]]],[[2,[21]]]],[[[34,[14]]],[[2,[21]]]],[[[34,[15]]],[[2,[21]]]],[[[34,[22]]],[[2,[21]]]],[[[34,[3]]],[[2,[21]]]],[[[34,[20]]],[[2,[21]]]],[[[34,[4]]],[[2,[21]]]],[[[34,[17]]],[[2,[21]]]],[[[34,[13]]],[[2,[21]]]],[[[34,[16]]],[[2,[21]]]],[34,34],[[],9],[[],9],[[],9],[[],9],[[],28],[[],28],[[],34],0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,[[]],0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[3,2],[[],2],[[],2],[4,2],[4,2],[[],2],[[]],[[]],[[]],[[],37],[[]],[[]],[[]],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],0,[[]],[[38,7],[[9,[8]]]],[[39,7],[[9,[8]]]],[[39,7],[[9,[8]]]],[[]],[[],2],[[]],[[]],[[]],[10,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[[]],[[18,4],9],[19,2],[20,2],[4,2],[21,2],[22,2],[3,2],[[]],0,[[]],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[3],[4],[[]],[[]],[14],0,[[]],[[]],[[]],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[10]]]],[[],[[2,[11]]]],[[],[[2,[12]]]],[[],[[2,[13]]]],[[],[[2,[14]]]],[[],[[2,[15]]]],[[],[[2,[16]]]],[[],[[2,[17]]]],[[]],[[]],[[],27],[[],[[2,[19]]]],[[],[[2,[20]]]],[[],[[2,[4]]]],[[],[[2,[21]]]],[[],[[2,[22]]]],[[],[[2,[3]]]],[[],4],[[],4],[[]],[[],9],[[],9],[[],9],[[],9],[[],28],[[],28],[4],[4],[[]],[[]],[[]],[4],[4],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[],2],[[],2],[10,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[19,2],[20,2],[4,2],[21,2],[22,2],[3,2],[[],[[2,[10]]]],[[],[[2,[11]]]],[[],[[2,[12]]]],[[],[[2,[13]]]],[[],[[2,[14]]]],[[],[[2,[15]]]],[[],[[2,[16]]]],[[],[[2,[17]]]],[[],[[2,[19]]]],[[],[[2,[20]]]],[[],[[2,[4]]]],[[],[[2,[21]]]],[[],[[2,[22]]]],[[],[[2,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[]],[[]],[[],4],[[],4],[4],[[]],[4],[4],[4],[4],[[]],[[]],[[]],[[],4],[[],4],[4],[4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[4,2],[4,2],[[],2],0,0,[[],2],[[],2],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[4],[4],[[]],0,0,[3,2],[3],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]]],"p":[[3,"Complex"],[4,"Option"],[15,"usize"],[15,"u32"],[15,"bool"],[3,"ExtendedGcd"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"String"],[3,"TypeId"],[3,"ParseComplexError"],[3,"IterBinomial"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[3,"Ratio"],[3,"ParseRatioError"],[4,"Ordering"],[4,"FpCategory"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Num"],[8,"Signed"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedSub"],[8,"PrimInt"],[8,"Integer"],[8,"NumCast"],[8,"FromPrimitive"],[8,"One"],[8,"Zero"],[8,"Bounded"],[8,"Saturating"],[8,"ToPrimitive"],[8,"AsPrimitive"],[8,"Average"],[8,"Roots"],[8,"Pow"],[8,"FloatConst"],[8,"Inv"],[8,"MulAdd"],[8,"Float"],[8,"CheckedEuclid"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Euclid"],[8,"MulAddAssign"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"FloatCore"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Real"]]},\
"num_complex":{"doc":"Complex numbers.","tn":["Complex","Complex32","Complex64","ParseComplexError","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","conj","default","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","im","into","into","inv","inv","inv","is_finite","is_infinite","is_nan","is_normal","is_one","is_zero","l1_norm","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","norm_sqr","one","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powi","powu","product","product","re","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","scale","set_one","set_zero","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_owned","to_string","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unscale","zero"],"q":["num_complexd":["A complex number in Cartesian form.","","","","","","","","","","","","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>1/self</code>","Checks if the given complex number is finite","Checks if the given complex number is infinite","Checks if the given complex number is NaN","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","","","","","","","","","","","","","","","","","","Create a new Complex","Returns the square of the norm (since <code>T</code> doesn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Real portion of the complex number","","","","","","","","","","","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.",""],"i":[0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,3,9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,3,3,3,3,3,3,3,3,9,9,3,3,3,3,9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,9,3,3,3,3,3,3,3,9,3,9,3,9,3,3],"f":[0,0,0,0,[[[3,[[0,[1,2]]]],[0,[1,2]]]],[3],[[3,[0,[1,2]]]],[[3,3]],[[[3,[[0,[1,2]]]]]],[[3,[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],3]],[[[3,[[0,[1,2]]]],[3,[[0,[1,2]]]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[0,[1,4]]]],[3],[[]],[[]],[[]],[[]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[[0,[1,2,5]]]]],[[3,[[0,[1,2,5]]]]]],[[],[[3,[6]]]],[[[3,[[0,[1,2]]]],[3,[[0,[1,2]]]]]],[[3,3]],[[3,[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],3]],[[[3,[[0,[1,2]]]]]],[[3,[0,[1,2]]]],[3],[[[3,[[0,[1,2]]]],[0,[1,2]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[0,[1,4]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]]]],[[[3,[7]],3],8],[[[9,[7]],9],8],[[3,10],11],[[[3,[12]],10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[3,10],11],[[[9,[12]],10],11],[[[9,[13]],10],11],[[]],[[],[[3,[[0,[1,2]]]]]],[[[0,[1,2]]],[[3,[[0,[1,2]]]]]],[14,[[16,[[3,[[0,[15,2]]]]]]]],[[]],[17,[[16,[[3,[[0,[18,2]]]]]]]],[19,[[16,[[3,[[0,[18,2]]]]]]]],[20,[[16,[[3,[[0,[18,2]]]]]]]],[21,[[16,[[3,[[0,[18,2]]]]]]]],[22,[[16,[[3,[[0,[18,2]]]]]]]],[23,[[16,[[3,[[0,[18,2]]]]]]]],[24,[[16,[[3,[[0,[18,2]]]]]]]],[25,[[16,[[3,[[0,[18,2]]]]]]]],[26,[[27,[3]]]],[[26,28],[[27,[[3,[[0,[2,1]]]]]]]],[29,[[16,[[3,[[0,[18,2]]]]]]]],[30,[[16,[[3,[[0,[18,2]]]]]]]],[28,[[16,[[3,[[0,[18,2]]]]]]]],[31,[[16,[[3,[[0,[18,2]]]]]]]],[32,[[16,[[3,[[0,[18,2]]]]]]]],[33,[[16,[[3,[[0,[18,2]]]]]]]],[[[3,[34]]]],[[],[[3,[[0,[1,2]]]]]],0,[[]],[[]],[[[3,[[0,[1,2,5]]]]]],[3],[[[3,[[0,[1,2,5]]]]],[[3,[[0,[1,2,5]]]]]],[[[3,[35]]],8],[[[3,[35]]],8],[[[3,[35]]],8],[[[3,[35]]],8],[[[3,[[0,[1,2]]]]],8],[[[3,[[0,[1,2]]]]],8],[[[3,[[0,[1,36]]]]],[[0,[1,36]]]],[[[3,[[0,[1,2]]]],3]],[[[3,[[0,[1,2]]]],[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],[0,[1,2]]]],[3],[[3,[0,[1,2]]]],[[3,3]],[[3,[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2,37]]]],[3,[[0,[1,2,37]]]],[3,[[0,[1,2,37]]]]],[[3,[[0,[1,2,37]]]]]],[[3,3,3],[[3,[[0,[1,2,37]]]]]],[[[3,[[0,[1,4,38]]]],3,3]],[[[3,[[0,[1,4,38]]]],[3,[[0,[1,4,38]]]],[3,[[0,[1,4,38]]]]]],[[[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[0,[1,4]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[3],[[[3,[[0,[1,2,5]]]]]],[[],3],[[[3,[[0,[1,2]]]]],[[0,[1,2]]]],[[],[[3,[[0,[1,2]]]]]],[[3,31]],[[3,20]],[[3,23]],[[3,23]],[[3,33]],[[3,33]],[[3,29]],[[3,29]],[[3,20]],[[3,31]],[[3,30]],[[3,24]],[[3,25]],[[3,25]],[[3,22]],[[3,24]],[[3,32]],[[3,22]],[[3,32]],[[3,28]],[[3,28]],[[3,21]],[[3,21]],[[3,30]],[[[3,[[0,[1,2,5]]]],22],[[3,[[0,[1,2,5]]]]]],[[[3,[[0,[1,2]]]],28],[[3,[[0,[1,2]]]]]],[[],[[3,[[0,[2,1]]]]]],[[],[[3,[[0,[2,1]]]]]],0,[[3,[0,[1,2]]]],[3],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],3]],[[3,[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],[0,[1,2]]]],[[3,3]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[0,[1,4]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,2]]]],[0,[1,2]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]],[0,[1,2]]]],[[[3,[[0,[1,2]]]],[3,[[0,[1,2]]]]]],[[3,3]],[[[3,[[0,[1,2]]]]]],[[3,[0,[1,2]]]],[3],[[[3,[[0,[1,2]]]],3]],[[3,[3,[[0,[1,2]]]]]],[[[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[3,[[0,[1,4]]]]]],[[[3,[[0,[1,4]]]],[0,[1,4]]]],[[],[[3,[[0,[2,1]]]]]],[[],[[3,[[0,[2,1]]]]]],[[[3,[[0,[14,2]]]]],[[16,[17]]]],[[[3,[[0,[14,2]]]]],[[16,[19]]]],[[[3,[[0,[14,2]]]]],[[16,[20]]]],[[[3,[[0,[14,2]]]]],[[16,[21]]]],[[[3,[[0,[14,2]]]]],[[16,[22]]]],[[[3,[[0,[14,2]]]]],[[16,[23]]]],[[[3,[[0,[14,2]]]]],[[16,[24]]]],[[[3,[[0,[14,2]]]]],[[16,[25]]]],[[]],[[],39],[[],39],[[[3,[[0,[14,2]]]]],[[16,[29]]]],[[[3,[[0,[14,2]]]]],[[16,[30]]]],[[[3,[[0,[14,2]]]]],[[16,[28]]]],[[[3,[[0,[14,2]]]]],[[16,[31]]]],[[[3,[[0,[14,2]]]]],[[16,[32]]]],[[[3,[[0,[14,2]]]]],[[16,[33]]]],[[],27],[[],27],[[],27],[[],27],[[],40],[[],40],[[[3,[[0,[1,2]]]],[0,[1,2]]],[[3,[[0,[1,2]]]]]],[[],[[3,[[0,[1,2]]]]]]],"p":[[8,"Clone"],[8,"Num"],[3,"Complex"],[8,"NumAssign"],[8,"Neg"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"ParseComplexError"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Display"],[8,"ToPrimitive"],[8,"NumCast"],[4,"Option"],[15,"f32"],[8,"FromPrimitive"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[4,"Result"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Hash"],[8,"FloatCore"],[8,"Signed"],[8,"MulAdd"],[8,"MulAddAssign"],[3,"String"],[3,"TypeId"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":[5,5],"n":["get","get_physical"],"q":["num_cpus",""],"d":["Returns the number of available CPUs of the current system.","Returns the number of physical cores of the current system."],"i":[0,0],"f":[[[],1],[[],1]],"p":[[15,"usize"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":[8,3,8,3,8,5,10,5,10,5,11,11,11,11,5,11,11,11,11,5,11,5,10,5,11,5,10,10,11,11,11,11,11,11,5,10,12,5,11,11,11,11,10,10,10,5,10,5,10,5,11,11,11,5,10,11,5,11,11,11,11,11,11,11,11,11,12,12],"n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":["num_integer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,11,5,11,5,0,4,4,5,5,0,2,0,2,0,2,0,2,2,5,2,2,5,11,5,0,2,5,0,2,11,5,11,2,2,2,0,2,0,2,0,11,11,2,0,4,2,0,4,4,5,11,5,11,5,11,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[]],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],5],6],[[],5],[[]],[[[5,[8]],9],10],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[]],[[],11],[11,12],[[]],[[4,13],4],[13],[[]],[4,4],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],0,0],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["num_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,0,0,0,0,0,0,2,3,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[6,[1]]],[[6,[1]]]],[[[7,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,9],[3,9],[4,9],[5,9],[6,9],[7,9],[2,9],[3,9],[[],2],[[],6],[[],3],[[],4],[[],7],[[],5],[2],[3],[6],[7],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11]],"p":[[8,"Clone"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"num_rational":{"doc":"Rational numbers","tn":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":["num_rationald":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,13,13,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,13,4],"f":[0,0,0,0,0,[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],4],[[4,[[0,[1,2,3]]]]]],[4,[[4,[[0,[1,2]]]]]],[4,4],[[4,4],4],[4,4],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[4,4],[[4,[[0,[1,2]]]]]],[[4,4],4],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],4]],[[[0,[6,7]]],[[9,[[4,[[0,[2,3,8,7,1]]]]]]]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,10,11]]]],4],[[9,[[4,[[0,[1,2,10,11]]]]]]]],[[4,4],[[9,[4]]]],[[4,4],[[9,[4]]]],[[[4,[[0,[1,2,10,12]]]],4],[[9,[[4,[[0,[1,2,10,12]]]]]]]],[[[4,[1]]],[[4,[1]]]],[13,13],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],14],[4],[[4,4],4],[4,4],[4,4],[[4,4],4],[4,4],[[4,4],4],[4,[[4,[[0,[1,2]]]]]],[[4,4],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],4]],[[[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],15],[[13,13],15],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[16,1,2]]]],17],18],[[[4,[[0,[19,1,2]]]],17],18],[[[4,[[0,[20,1,2]]]],17],18],[[[4,[[0,[21,1,2]]]],17],18],[[[4,[[0,[22,1,2]]]],17],18],[[[4,[[0,[23,1,2]]]],17],18],[[[4,[[0,[24,1,2]]]],17],18],[[[4,[25]],17],18],[[13,17],18],[[13,17],18],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[]],[[],4],[[],4],[[]],[26,[[9,[[4,[27]]]]]],[26,[[9,[[4,[28]]]]]],[26,[[9,[[4,[29]]]]]],[26,[[9,[[4,[30]]]]]],[26,[[9,[[4,[31]]]]]],[26,[[9,[[4,[32]]]]]],[26,[[9,[[4,[33]]]]]],[26,[[9,[[4,[34]]]]]],[26,[[9,[[4,[35]]]]]],[26,[[9,[[4,[36]]]]]],[26,[[9,[[4,[37]]]]]],[26,[[9,[[4,[38]]]]]],[39,[[9,[[4,[27]]]]]],[39,[[9,[[4,[34]]]]]],[39,[[9,[[4,[30]]]]]],[39,[[9,[[4,[38]]]]]],[39,[[9,[[4,[31]]]]]],[39,[[9,[[4,[28]]]]]],[39,[[9,[[4,[32]]]]]],[39,[[9,[[4,[29]]]]]],[39,[[9,[[4,[37]]]]]],[39,[[9,[[4,[35]]]]]],[39,[[9,[[4,[33]]]]]],[39,[[9,[[4,[36]]]]]],[33,[[9,[[4,[27]]]]]],[33,[[9,[[4,[31]]]]]],[33,[[9,[[4,[33]]]]]],[33,[[9,[[4,[32]]]]]],[33,[[9,[[4,[34]]]]]],[33,[[9,[[4,[35]]]]]],[33,[[9,[[4,[29]]]]]],[33,[[9,[[4,[38]]]]]],[33,[[9,[[4,[30]]]]]],[33,[[9,[[4,[36]]]]]],[33,[[9,[[4,[28]]]]]],[33,[[9,[[4,[37]]]]]],[36,[[9,[[4,[38]]]]]],[36,[[9,[[4,[33]]]]]],[36,[[9,[[4,[28]]]]]],[36,[[9,[[4,[35]]]]]],[36,[[9,[[4,[32]]]]]],[36,[[9,[[4,[37]]]]]],[36,[[9,[[4,[27]]]]]],[36,[[9,[[4,[34]]]]]],[36,[[9,[[4,[29]]]]]],[36,[[9,[[4,[30]]]]]],[36,[[9,[[4,[36]]]]]],[36,[[9,[[4,[31]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[40,[[42,[[4,[[0,[41,1,2]]]],13]]]],[[40,27],[[42,[[4,[[0,[1,2]]]],13]]]],[32,[[9,[[4,[31]]]]]],[32,[[9,[[4,[32]]]]]],[32,[[9,[[4,[38]]]]]],[32,[[9,[[4,[37]]]]]],[32,[[9,[[4,[29]]]]]],[32,[[9,[[4,[27]]]]]],[32,[[9,[[4,[36]]]]]],[32,[[9,[[4,[34]]]]]],[32,[[9,[[4,[28]]]]]],[32,[[9,[[4,[30]]]]]],[32,[[9,[[4,[35]]]]]],[32,[[9,[[4,[33]]]]]],[37,[[9,[[4,[33]]]]]],[37,[[9,[[4,[38]]]]]],[37,[[9,[[4,[32]]]]]],[37,[[9,[[4,[30]]]]]],[37,[[9,[[4,[31]]]]]],[37,[[9,[[4,[35]]]]]],[37,[[9,[[4,[34]]]]]],[37,[[9,[[4,[28]]]]]],[37,[[9,[[4,[27]]]]]],[37,[[9,[[4,[37]]]]]],[37,[[9,[[4,[36]]]]]],[37,[[9,[[4,[29]]]]]],[[[4,[[0,[1,2,43]]]]]],[[]],[4],[[]],[4,4],[4,4],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[[[4,[[0,[1,2,3]]]]],15],[[[4,[[0,[1,2]]]]],15],[4,[[4,[[0,[1,2]]]]]],[4,4],[[4,4],4],[4,4],[[4,4],4],[4,4],[[4,4],4],[[4,4],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],4]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]]]],[4,4],[4,4],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],4],[4],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[9,[14]]]],[[[4,[[0,[1,2,[44,[37]]]]]],36],[[4,[[0,[1,2,[44,[37]]]]]]]],[[4,34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[31]]]]]],31],[[4,[[0,[1,2,[44,[31]]]]]]]],[[4,31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[31]]]]]],31],[[4,[[0,[1,2,[44,[31]]]]]]]],[[4,31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[34]]]]]],34],[[4,[[0,[1,2,[44,[34]]]]]]]],[[4,34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[34]]]]]],34],[[4,[[0,[1,2,[44,[34]]]]]]]],[[[4,[[0,[1,2,[44,[27]]]]]],27],[[4,[[0,[1,2,[44,[27]]]]]]]],[[4,27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[27]]]]]],27],[[4,[[0,[1,2,[44,[27]]]]]]]],[[4,27],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[37]]]]]],37],[[4,[[0,[1,2,[44,[37]]]]]]]],[[4,37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[37]]]]]],37],[[4,[[0,[1,2,[44,[37]]]]]]]],[[4,37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[32]]]]]],32],[[4,[[0,[1,2,[44,[32]]]]]]]],[[4,32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[32]]]]]],32],[[4,[[0,[1,2,[44,[32]]]]]]]],[[4,32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[28]]]]]],28],[[4,[[0,[1,2,[44,[28]]]]]]]],[[4,28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[28]]]]]],28],[[4,[[0,[1,2,[44,[28]]]]]]]],[[4,28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[31]]]]]],29],[[4,[[0,[1,2,[44,[31]]]]]]]],[[4,29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[31]]]]]],29],[[4,[[0,[1,2,[44,[31]]]]]]]],[[4,29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[34]]]]]],35],[[4,[[0,[1,2,[44,[34]]]]]]]],[[4,35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[34]]]]]],35],[[4,[[0,[1,2,[44,[34]]]]]]]],[[4,35],[[4,[[0,[1,2]]]]]],[[4,30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[28]]]]]],30],[[4,[[0,[1,2,[44,[28]]]]]]]],[[4,30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[28]]]]]],30],[[4,[[0,[1,2,[44,[28]]]]]]]],[[4,33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[32]]]]]],33],[[4,[[0,[1,2,[44,[32]]]]]]]],[[4,33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[32]]]]]],33],[[4,[[0,[1,2,[44,[32]]]]]]]],[[4,36],[[4,[[0,[1,2]]]]]],[[4,36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[37]]]]]],36],[[4,[[0,[1,2,[44,[37]]]]]]]],[[4,38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[27]]]]]],38],[[4,[[0,[1,2,[44,[27]]]]]]]],[[4,38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[44,[27]]]]]],38],[[4,[[0,[1,2,[44,[27]]]]]]]],[[],[[4,[[0,[2,1]]]]]],[[],[[4,[[0,[2,1]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[4,4],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[4,[[4,[[0,[1,2]]]]]],[[4,4],4],[[4,4],[[4,[[0,[1,2]]]]]],[[4,4],4],[4,4],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],4]],[[[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[4,[[4,[[0,[1,2]]]]]],[[4,4],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[4,4],4],[4,4],[[4,4],4],[4,4],[[[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],4]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[],[[4,[[0,[2,1]]]]]],[[],[[4,[[0,[2,1]]]]]],[[[4,[28]]],[[9,[39]]]],[[[4,[30]]],[[9,[39]]]],[[[4,[36]]],[[9,[39]]]],[[[4,[37]]],[[9,[39]]]],[[[4,[38]]],[[9,[39]]]],[[[4,[27]]],[[9,[39]]]],[[[4,[35]]],[[9,[39]]]],[[[4,[34]]],[[9,[39]]]],[[[4,[29]]],[[9,[39]]]],[[[4,[31]]],[[9,[39]]]],[[[4,[38]]],[[9,[33]]]],[[[4,[30]]],[[9,[33]]]],[[[4,[31]]],[[9,[33]]]],[[[4,[28]]],[[9,[33]]]],[[[4,[29]]],[[9,[33]]]],[[[4,[36]]],[[9,[33]]]],[[[4,[34]]],[[9,[33]]]],[[[4,[37]]],[[9,[33]]]],[[[4,[35]]],[[9,[33]]]],[[[4,[27]]],[[9,[33]]]],[[[4,[27]]],[[9,[36]]]],[[[4,[30]]],[[9,[36]]]],[[[4,[31]]],[[9,[36]]]],[[[4,[28]]],[[9,[36]]]],[[[4,[29]]],[[9,[36]]]],[[[4,[36]]],[[9,[36]]]],[[[4,[34]]],[[9,[36]]]],[[[4,[37]]],[[9,[36]]]],[[[4,[38]]],[[9,[36]]]],[[[4,[35]]],[[9,[36]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[],45],[[],45],[[[4,[37]]],[[9,[32]]]],[[[4,[35]]],[[9,[32]]]],[[[4,[30]]],[[9,[32]]]],[[[4,[27]]],[[9,[32]]]],[[[4,[28]]],[[9,[32]]]],[[[4,[31]]],[[9,[32]]]],[[[4,[38]]],[[9,[32]]]],[[[4,[36]]],[[9,[32]]]],[[[4,[29]]],[[9,[32]]]],[[[4,[34]]],[[9,[32]]]],[[[4,[29]]],[[9,[37]]]],[[[4,[37]]],[[9,[37]]]],[[[4,[34]]],[[9,[37]]]],[[[4,[27]]],[[9,[37]]]],[[[4,[36]]],[[9,[37]]]],[[[4,[35]]],[[9,[37]]]],[[[4,[38]]],[[9,[37]]]],[[[4,[28]]],[[9,[37]]]],[[[4,[31]]],[[9,[37]]]],[[[4,[30]]],[[9,[37]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],42],[[],42],[[],42],[[],42],[[],46],[[],46],[[],[[4,[[0,[1,2]]]]]]],"p":[[8,"Clone"],[8,"Integer"],[8,"Signed"],[3,"Ratio"],[8,"NumAssign"],[8,"FloatCore"],[8,"NumCast"],[8,"Bounded"],[4,"Option"],[8,"CheckedMul"],[8,"CheckedAdd"],[8,"CheckedSub"],[3,"ParseRatioError"],[4,"Ordering"],[15,"bool"],[8,"LowerHex"],[3,"Formatter"],[6,"Result"],[8,"UpperHex"],[8,"UpperExp"],[8,"Binary"],[8,"Octal"],[8,"LowerExp"],[8,"Display"],[8,"Debug"],[15,"f32"],[15,"u32"],[15,"usize"],[15,"i8"],[15,"isize"],[15,"u8"],[15,"u128"],[15,"i128"],[15,"u16"],[15,"i16"],[15,"i64"],[15,"u64"],[15,"i32"],[15,"f64"],[15,"str"],[8,"FromStr"],[4,"Result"],[8,"Hash"],[8,"Pow"],[3,"String"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[2,2,2,2,2,2,2,2,2,2,2,13,2,2,2,4,2,16,2,13,2,2,8,8,8,8,2,8,8,2,3,2,2,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,11,11,11,11,0,0,2,2,5,5,5,0,11,11,11,11,11,10,0,0,11,11,12,2,0,0,2,0,0,2,11,11,11,11,11,11,11,2,8,8,8,10,10,10,10,8,8,8,8,10,5,10,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,10,10,11,10,11,10,10,10,11,10,11,10,10,10,10,10,10,10,10,10,10,11,10,10,11,10,10,10,11,10,10,10,10,11,10,11,10,10,10,10,10,10,11,10,11,10,11,10,11,10,11,10,11,10,10,10,10,10,10,11,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,10,11,10,11,10,10,10,10,10,10,10,11,10,11,10,11,8,8,11,10,5,10,11,11,5,10,8,10,10,10,10,11,10,10,11,10,10,10,10,10,10,10,11,10,10,10,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,10,10,10,10,10,10,10,10,8,8,10,10,10,10,8,16,10,8,8,16,10,10,8,8,8,10,10,10,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,10,16,8,5,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,8,5,10,5,10,10,10,5,10],"n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":["num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::bounds","","","","","","","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::identities","","","","","","","","","","num_traits::int","","","","","","","","","","","","","","","","","","","","num_traits::ops","","","","","","","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops::euclid","","","","","","num_traits::ops::inv","","","num_traits::ops::mul_add","","","","","num_traits::ops::overflowing","","","","","","num_traits::ops::saturating","","","","","","","","","num_traits::ops::wrapping","","","","","","","","","","","","num_traits::pow","","","","","num_traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits::sign","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,35,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,35,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,36,37,36,38,0,0,0,0,39,0,11,40,40,40,40,40,40,40,40,40,40,40,40,40,40,13,13,13,13,13,13,13,13,13,13,13,13,13,13,41,41,41,41,41,41,41,41,41,41,0,0,0,41,41,41,41,41,41,41,41,41,42,43,42,42,42,42,42,42,42,42,42,42,43,43,42,42,42,42,43,42,42,42,42,42,43,42,43,42,43,42,43,42,42,43,42,43,42,43,42,43,42,43,42,43,42,42,42,42,42,42,43,43,42,42,43,43,42,43,42,42,43,42,43,42,43,42,42,42,43,42,43,42,43,42,43,42,42,42,42,42,42,43,42,43,42,42,43,0,0,29,30,0,29,29,30,0,30,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,46,32,47,48,49,50,51,0,0,52,52,53,53,0,54,54,0,0,55,55,56,0,0,0,57,58,59,0,0,0,0,60,61,62,60,63,0,0,0,0,0,0,64,65,66,67,68,69,70,0,0,0,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,34,0,34,34,34,0,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],28],[[],28],[[],29],[[]],[[]],[[]],[[],30],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[31,29,32]],26],[[12,[[0,[31,29,32]]]]]],[[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,33]]]]]]]]]]]]]]]]]],26],[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,[33,[[0,[31,29,33]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[34,34],[[]],[[34,34],34],[[]],[[],28],[[],28],[34,34],[[]]],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[4,"FpCategory"],[15,"bool"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"]]},\
"ouroboros":{"doc":"A crate for creating safe self-referencing structs.","t":[23],"n":["self_referencing"],"q":["ouroboros"],"d":["This macro is used to turn a regular struct into a …"],"i":[0],"f":[0],"p":[]},\
"ouroboros_macro":{"doc":"","t":[23],"n":["self_referencing"],"q":["ouroboros_macro"],"d":[""],"i":[0],"f":[0],"p":[]},\
"png":{"doc":"PNG encoder and decoder","t":[3,13,13,18,13,13,4,4,13,13,4,4,13,13,4,3,4,13,4,18,18,13,3,4,13,4,13,13,13,3,13,18,13,13,13,13,18,18,18,13,13,13,13,3,13,13,13,3,13,13,13,13,13,13,13,3,13,18,18,13,13,3,13,13,13,13,3,13,18,18,18,18,18,18,18,18,18,13,13,3,3,13,3,13,4,13,13,3,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,6,17,17,17,17,17,17,17,17,5,5,17,5,5,17,17],"n":["AnimationControl","AnimationControl","Avg","BGR","Background","Best","BitDepth","BlendOp","ChunkBegin","ChunkComplete","ColorType","Compression","CorruptFlateStream","CrcMismatch","Decoded","Decoder","DecodingError","Default","DisposeOp","EXPAND","EXPAND_16","Eight","Encoder","EncodingError","Fast","FilterType","Format","Format","Four","FrameControl","FrameControl","GRAY_TO_RGB","Grayscale","GrayscaleAlpha","Header","Huffman","IDENTITY","INVERT_ALPHA","INVERT_MONO","ImageData","ImageDataFlushed","ImageEnd","Indexed","Info","InvalidSignature","IoError","IoError","Limits","LimitsExceeded","Meter","NoFilter","None","Nothing","One","Other","OutputInfo","Over","PACKING","PACKSWAP","Paeth","PartialChunk","PixelDimensions","PixelDimensions","Previous","RGB","RGBA","Reader","Rle","SCALE_16","SHIFT","STRIP_16","STRIP_ALPHA","STRIP_FILLER","STRIP_FILLER_AFTER","STRIP_FILLER_BEFORE","SWAP_ALPHA","SWAP_ENDIAN","Sixteen","Source","StreamWriter","StreamingDecoder","Sub","Transformations","Two","Unit","Unspecified","Up","Writer","all","animation_control","animation_control","bit_depth","bit_depth","bitand","bitand_assign","bitor","bitor_assign","bits","bits_per_pixel","bitxor","bitxor_assign","blend_op","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","bytes","bytes_per_pixel","cause","cause","chunk","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color_type","color_type","complement","compression","contains","default","default","default","default","delay_den","delay_num","difference","dispose_op","drop","drop","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_control","frame_control","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_u8","from_u8","from_u8","from_u8","from_u8","from_u8","hash","height","height","height","inc_seq_num","info","insert","interlaced","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_stream_writer","into_stream_writer_with_size","is_all","is_animated","is_empty","line_size","new","new","new","new_with_limits","next_frame","next_interlaced_row","next_row","not","num_frames","num_plays","output_buffer_size","output_color_type","output_line_size","palette","partial_cmp","pixel_dims","provide","provide","raw_bytes","raw_row_length","raw_row_length_from_width","read_info","remove","reset","samples","sequence_number","set","set_color","set_compression","set_depth","set_filter","set_limits","set_palette","set_seq_num","set_transformations","set_trns","size","stream_writer","stream_writer_with_size","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","trns","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unit","update","width","width","width","write","write_chunk","write_header","write_image_data","x_offset","xppu","y_offset","yppu","chunk","crc_sum","crc_val","recover","ChunkType","IDAT","IEND","IHDR","PLTE","acTL","bKGD","fcTL","fdAT","is_critical","is_private","pHYs","reserved_set","safe_to_copy","tIME","tRNS"],"q":["pngpng::DecodingError","","","","png::chunk","","","","","","","","","","","","","","",""],"d":["Animation control information","","","Flip RGB to BGR; RGBA to BGRA","Clear buffer with the background color.","Higher compression level","Bit depth of the png file","How pixels are written into the buffer.","","","Describes the layout of samples in a pixel","The type and strength of applied compression.","","","Result of the decoding process","PNG Decoder","","Default level  ","How to reset buffer of an animated png (APNG) at the end …","Expand paletted images to RGB; expand grayscale images of …","","","PNG Encoder","","Fast minimal compression","The byte level filter applied to scanlines to prepare them …","","","","Frame control information","","","","","","","No transformation","Change alpha from opacity to transparency","Invert monochrome images","Decoded raw image data.","The last of a consecutive chunk of IDAT was done. This is …","","","PNG info struct","","","","Limits on the resources the <code>Decoder</code> is allowed too use","","","","Leave the buffer unchanged.","Nothing decoded yet","","","Output info","The new pixels are blended into the current state based on …","Expand 1; 2 and 4-bit samples to bytes","Change order of packed pixels to LSB first","","","Pixel dimensions information","","Reset the buffer to the state before the current frame.","","","PNG reader (mostly high-level interface)","","","Normalize pixels to the sBIT depth","Strip 16-bit samples to 8 bits","Discard the alpha channel","","","","Flip RGBA to ARGB or GA to AG","Byte-swap 16-bit samples","","Pixels overwrite the value at their position.","Streaming png writer","PNG StreamingDecoder (low-level interface)","","Output transformations","","Physical unit of the pixel dimensions","","","PNG writer","Returns the set containing all flags.","Returns the frame control information of the image","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the bits per pixel","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Type of frame area rendering for this frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size needed to hold a decoded frame","maximum number of bytes the decoder is allowed to …","Returns the bytes per pixel","","","Chunk types and functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Frame delay fraction denominator","Frame delay fraction numerator","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Type of frame area disposal to be done after rendering …","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the frame control information of the current frame","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Temporary solution until Rust provides a …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Using enum_primitive or transmute is probably …","u8 -&gt; Self. Temporary solution until Rust provides a …","","Height of the following frame","","","","Get information on the image.","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this into a stream writer for image data.","Turn this into a stream writer with custom buffer size.","Returns <code>true</code> if all flags are currently set.","Returns true if the image is an APNG image.","Returns <code>true</code> if no flags are currently stored.","","Creates a new StreamingDecoder","","","","Decodes the next frame into <code>buf</code>.","Returns the next processed row of the image","Returns the next processed row of the image","Returns the complement of this set of flags.","Number of frames","Number of times to loop this APNG.  0 indicates infinite …","Returns the number of bytes required to hold a …","Returns the color type and the number of bits per sample …","Returns the number of bytes required to hold a …","","","","","","Returns the number of bytes needed for one deinterlaced …","Returns the number of bytes needed for one deinterlaced row","Returns the number of bytes needed for one deinterlaced …","Reads all meta data until the first IDAT chunk","Removes the specified flags in-place.","Resets the StreamingDecoder","Returns the number of samples used per pixel of <code>ColorType</code>","Sequence number of the animation chunk, starting from 0","Inserts or removes the specified flags depending on the …","Set the color of the encoded image.","Set compression parameters.","Set the indicated depth of the image data.","Set the used filter type.","Limit resource usage","","","Set the allowed and performed transformations.","","Size of the image","Create an stream writer.","Create a stream writer with custom buffer size.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Either <em>Meter</em> or <em>Unspecified</em>","Low level StreamingDecoder interface.","Width of the following frame","","","","","","Writes the image data.","X position at which to render the following frame","Pixels per unit, X axis","Y position at which to render the following frame","Pixels per unit, Y axis","","Calculated CRC32 sum","Stored CRC32 value","bytes to skip to try to recover from this error","","Image data","Image trailer","Image header","Palette","Animation control","Background colour","Frame control","Frame data","Returns true if the chunk is critical.","Returns true if the chunk is private.","Physical pixel dimensions","Checks whether the reserved bit of the chunk name is set. …","Returns true if the chunk is safe to copy if unknown.","Image last-modification time","Transparency"],"i":[0,32,20,1,15,18,0,0,32,32,0,0,8,8,0,0,0,18,0,1,1,12,0,0,18,0,8,10,12,0,32,1,11,11,32,18,1,1,1,32,32,32,11,0,8,8,10,0,8,14,20,15,32,12,8,0,16,1,1,20,32,0,32,15,11,11,0,18,1,1,1,1,1,1,1,1,1,12,16,0,0,20,0,12,0,14,20,0,1,2,2,2,7,1,1,1,1,1,2,1,1,17,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,7,19,2,8,10,0,11,12,13,14,15,16,17,3,18,2,1,19,20,11,12,13,14,15,16,17,3,18,2,1,19,20,1,2,7,1,2,1,23,17,2,19,17,17,1,17,25,26,1,11,12,14,15,16,1,7,20,1,2,26,26,11,12,13,14,15,15,16,16,17,3,18,2,1,1,1,1,1,32,8,8,7,19,10,10,20,2,2,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,18,2,1,32,8,8,8,7,19,10,10,20,1,1,1,1,11,12,14,15,16,20,1,17,2,7,17,39,1,2,1,1,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,25,25,1,2,1,7,23,40,41,40,39,39,39,1,3,3,39,39,39,2,1,2,8,10,2,2,2,40,1,23,11,17,1,41,41,41,41,40,41,17,40,41,2,25,25,1,1,1,11,12,13,14,15,16,17,3,18,2,1,19,20,15,16,8,10,1,2,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,23,40,39,41,25,26,11,12,13,14,15,16,17,3,18,2,1,32,8,7,19,10,20,1,13,23,17,2,7,26,25,41,25,17,13,17,13,47,47,47,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"fp":[[3,"Transformations"],[3,"Info"],[3,"AnimationControl"],[4,"Option"],[15,"u32"],[15,"usize"],[3,"OutputInfo"],[4,"DecodingError"],[8,"Error"],[4,"EncodingError"],[4,"ColorType"],[4,"BitDepth"],[3,"PixelDimensions"],[4,"Unit"],[4,"DisposeOp"],[4,"BlendOp"],[3,"FrameControl"],[4,"Compression"],[3,"Limits"],[4,"FilterType"],[4,"Ordering"],[15,"bool"],[3,"StreamingDecoder"],[8,"Write"],[3,"Writer"],[3,"StreamWriter"],[8,"IntoIterator"],[4,"Result"],[6,"Result"],[3,"Formatter"],[6,"Result"],[4,"Decoded"],[3,"Error"],[4,"Compression"],[3,"Error"],[3,"String"],[15,"u8"],[8,"Read"],[3,"Reader"],[3,"Decoder"],[3,"Encoder"],[3,"Demand"],[8,"Into"],[3,"Vec"],[3,"TypeId"],[6,"ChunkType"],[13,"CrcMismatch"]]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":[13,13,13,4,3,13,3,13,13,3,3,13,13,13,3,13,4,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","provide","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":["proc_macroproc_macro2::extra","","","","","","","","","","","","","","","proc_macro2::token_stream","","","","","","","","","","","","","","",""],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[9,8,8,0,0,6,0,6,9,0,0,6,8,8,0,6,0,0,0,0,1,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,3,4,3,5,4,6,7,8,1,9,10,3,5,4,6,7,8,1,9,10,3,10,5,7,7,8,9,10,10,5,5,0,3,3,3,3,17,17,5,5,4,6,6,7,7,8,1,1,9,10,10,3,3,17,5,5,5,4,4,6,6,6,6,6,7,8,1,9,10,3,5,5,5,3,10,3,3,3,3,3,3,3,3,3,3,17,5,4,6,7,8,1,9,10,3,5,5,3,3,4,4,4,5,7,1,10,10,10,17,4,6,7,1,10,3,4,1,17,6,7,1,10,3,7,7,7,3,3,5,4,6,7,8,1,9,10,3,17,5,6,7,1,10,3,0,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,17,5,4,6,7,8,1,9,10,3,3,3,3,3,3,3,3,3,3,3,4,3,3,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],4],[2,3],[5,5],[4,4],[6,6],[7,7],[8,8],[1,1],[9,9],[10,10],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],11],[[],5],[7,12],[7,8],[[8,8],13],[[9,9],13],[10,13],[[10,10],13],[[5,14]],[[5,14]],0,[15,3],[15,3],[16,3],[16,3],[[17,18],19],[[17,18],19],[[5,18],19],[[5,18],19],[[4,18],19],[[6,18],19],[[6,18],19],[[7,18],19],[[7,18],19],[[8,18],19],[[1,18],19],[[1,18],19],[[9,18],19],[[10,18],19],[[10,18],19],[[3,18],19],[[3,18],19],[[]],[6,5],[20,5],[[]],[21,4],[[]],[3,6],[1,6],[10,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,5],[14,5],[22,[[23,[5,17]]]],[22,[[23,[3,17]]]],[10],[24,3],[24,3],[25,3],[25,3],[26,3],[26,3],[27,3],[27,3],[28,3],[28,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,29],[5,13],[30,3],[30,3],[[4,4],[[31,[4]]]],[[4,4],4],[[],4],[[],5],[[8,5],7],[[2,9],1],[[22,4],10],[[22,4],10],[[10,10],[[31,[11]]]],[32],[[4,4],4],[[6,4]],[[7,4]],[[1,4]],[[10,4]],[[3,4]],[4,[[31,[33]]]],[1,9],[17,4],[6,4],[7,4],[1,4],[10,4],[3,4],[7,4],[7,4],[7,5],[22,3],[[3,[35,[34]]],[[31,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[37,3],[37,3],[38,3],[38,3],[39,3],[39,3],[40,3],[40,3],[41,3],[41,3],[4,21],[34,3],[34,3],0,[[]],[[]],[12,12],[[]],[12,4],[[12,18],19],[[]],[[]],[12,4],[12,4],[[]],[[],23],[[],23],[[],36],0,0,[[]],[[]],[29,29],[[]],[[29,18],19],[[]],[[]],[[]],[29,[[31,[6]]]],[29],[[]],[[],23],[[],23],[[],36]],"p":[[3,"Punct"],[15,"char"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[15,"str"],[4,"Result"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"Demand"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"]]},\
"proc_macro_error":{"doc":"proc-macro-error","t":[3,8,13,4,16,8,8,16,3,13,11,14,14,5,2,11,11,11,11,11,11,11,11,11,11,14,0,11,14,14,14,14,11,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,23,2,11,11,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5],"n":["Diagnostic","DiagnosticExt","Error","Level","Ok","OptionExt","ResultExt","Some","SpanRange","Warning","abort","abort","abort_call_site","abort_if_dirty","append_dummy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_site","clone","clone_into","collapse","diagnostic","dummy","emit","emit_call_site_error","emit_call_site_warning","emit_error","emit_warning","eq","expect_or_abort","expect_or_abort","first","fmt","fmt","fmt","from","from","from","from","from_tokens","help","into","into","into","join_range","last","message","new","note","proc_macro_error","set_dummy","single_span","span","span_error","span_help","span_note","span_range_error","span_range_error","span_range_help","span_range_help","span_range_note","span_range_note","spanned","spanned_range","spanned_range","to_owned","to_tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap_or_abort","append_dummy","set_dummy"],"q":["proc_macro_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_error::dummy",""],"d":["Represents a single diagnostic message","A collection of methods that do not exist in …","","Represents a diagnostic level","","This traits expands <code>Option</code> with some handy shortcuts.","This traits expands <code>Result&lt;T, Into&lt;Diagnostic&gt;&gt;</code> with some …","","","","Abort the proc-macro’s execution and display the …","Abort proc-macro execution right now and display the error.","Shortcut for <code>abort!(Span::call_site(), msg...)</code>. This macro …","Abort macro execution and display all the emitted errors, …","","","","","","","","Create a <code>SpanRange</code> resolving at call site.","","","Collapse the range into single span, preserving as much …","Build <code>Diagnostic</code> instance from provided arguments.","Facility to emit dummy implementations (or whatever) in …","Display the diagnostic while not aborting macro execution.","Shortcut for <code>emit_error!(Span::call_site(), ...)</code>. This …","Shortcut for <code>emit_warning!(Span::call_site(), ...)</code>.","Emit an error while not aborting the proc-macro right away.","Emit a warning. Warnings are not errors and compilation won…","","Behaves like <code>Result::expect</code>: if self is <code>Ok</code> yield the …","Behaves like <code>Option::expect</code>: if self is <code>Some</code> yield the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Construct span range from a <code>TokenStream</code>. This method …","Attach a “help” note to your main message.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Join two span ranges. The resulting range will start at …","","The message of main warning/error (no notes attached)","Create a new diagnostic message that points to …","Attach a note to your main message","","","Create a range with the <code>first</code> and <code>last</code> spans being the …","","Add another error message to self such that it will be …","Attach a “help” note to your main message, the note …","Attach a note to your main message, the note will have it…","Add another error message to self such that it will be …","","Attach a “help” note to your main message, the note …","","Attach a note to your main message, the note will have it…","","Create a new diagnostic message that points to the <code>span</code>","Create a new diagnostic message that points to the …","","","","","","","","","","","","","Behaves like <code>Result::unwrap</code>: if self is <code>Ok</code> yield the …","Same as <code>set_dummy</code> but, instead of resetting, appends …","Sets dummy token stream which will be appended to …"],"i":[0,0,5,0,17,0,0,18,0,5,1,0,0,0,0,5,1,3,5,1,3,3,3,3,3,0,0,1,0,0,0,0,5,17,18,3,5,1,3,5,1,1,3,3,1,5,1,3,3,3,1,1,1,0,0,3,1,1,1,1,19,1,19,1,19,1,1,19,1,3,1,5,1,3,5,1,3,5,1,3,17,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[3,3],[[]],[3,4],0,0,[1],0,0,0,0,[[5,5],6],[7],[7],0,[[5,8],9],[[1,8],9],[[3,8],9],[[]],[[]],[10,1],[[]],[11,3],[[1,12],1],[[]],[[]],[[]],[[3,3],3],0,[1,7],[[5,12],1],[[1,12],1],0,0,[4,3],[[],4],[[1,4,12],1],[[1,4,12],1],[[1,4,12],1],[[3,12]],[[1,3,12],1],[[3,12]],[[1,3,12],1],[[3,12]],[[1,3,12],1],[[4,5,12],1],[[3,5,12]],[[3,5,12],1],[[]],[[1,13]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[]],[13],[13,[[16,[13]]]]],"p":[[3,"Diagnostic"],[15,"never"],[3,"SpanRange"],[3,"Span"],[4,"Level"],[15,"bool"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"Error"],[8,"ToTokens"],[3,"String"],[3,"TokenStream"],[4,"Result"],[3,"TypeId"],[4,"Option"],[8,"ResultExt"],[8,"OptionExt"],[8,"DiagnosticExt"]]},\
"proc_macro_error_attr":{"doc":"This is <code>#[proc_macro_error]</code> attribute to be used with …","t":[23],"n":["proc_macro_error"],"q":["proc_macro_error_attr"],"d":[""],"i":[0],"f":[0],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","t":[8,8,8,10,10,10,10,10,14,11,11,14,14,11,11,11,11,10],"n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":["quote","","","","","","","","","","","","","","","","",""],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,6,6,6,6,7,0,8,8,0,0,7,7,8,8,8],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],0,[[],3],[[],3],0,0,[[],[[5,[4]]]],[[],[[5,[4]]]],[[],3],[[],3],[3]],"p":[[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"rayon":{"doc":"Data-parallelism library that makes it easy to convert …","t":[3,13,3,13,3,3,3,3,3,3,4,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,0,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,5,5,11,11,11,11,11,11,0,11,0,11,0,0,0,11,5,11,5,11,0,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,5,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,3,8,8,3,3,3,3,8,8,8,16,16,16,16,16,16,16,16,16,16,16,3,13,3,3,3,3,3,3,3,3,8,8,8,8,8,3,3,3,3,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,10,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,16,16,16,16,16,8,8,8,16,16,16,8,8,5,5,5,10,10,10,11,10,11,10,10,10,10,11,11,10,10,10,10,10,10,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,8,2,2,2,2,2,2,2,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,8,8,3,3,3,3,3,3,3,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,8,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BroadcastContext","Executed","FnContext","Idle","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","Yield","array","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","broadcast","broadcast","build","build_global","build_scoped","clone","clone_into","collections","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","init","install","into","into","into","into","into","into","into","into","into","iter","join","join","join_context","max_num_threads","migrated","name","new","new","num_threads","num_threads","option","panic_handler","prelude","provide","range","range_inclusive","result","run","scope","scope","scope_fifo","scope_fifo","slice","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","start_handler","str","string","thread_name","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","yield_local","yield_local","yield_now","yield_now","IntoIter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","opt_len","to_owned","try_from","try_into","type_id","with_producer","binary_heap","btree_map","btree_set","hash_map","hash_set","linked_list","vec_deque","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","len","len","len","len","opt_len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","Chain","Chunks","Cloned","Copied","Either","Empty","Enumerate","Filter","FilterMap","FlatMap","FlatMapIter","Flatten","FlattenIter","Fold","FoldChunks","FoldChunksWith","FoldWith","FromParallelIterator","IndexedParallelIterator","Inspect","Interleave","InterleaveShortest","Intersperse","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","Item","Item","Item","Item","Item","Item","Iter","Iter","Iter","Iter","Iter","IterBridge","Left","Map","MapInit","MapWith","MaxLen","MinLen","MultiZip","Once","PanicFuse","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","Positions","Repeat","RepeatN","Rev","Right","Skip","SkipAny","SkipAnyWhile","Split","StepBy","Take","TakeAny","TakeAnyWhile","TryFold","TryFoldWith","Update","WhileSome","Zip","ZipEq","all","all","any","any","as_mut","as_mut","as_mut","as_mut","as_pin_mut","as_pin_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","collect","collect","collect_into_vec","copied","count","count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","either","either_into","either_with","empty","enumerate","eq","eq","expect_left","expect_right","extend","factor_err","factor_first","factor_none","factor_ok","factor_second","filter","filter_map","find","find_any","find_first","find_last","find_map","find_map_any","find_map_first","find_map_last","flat_map","flat_map_iter","flatten","flatten_iter","flip","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold_chunks","fold_chunks_with","fold_with","for_each","for_each","for_each_init","for_each_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_par_iter","ge","gt","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inspect","interleave","interleave_shortest","intersperse","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_inner","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","is_left","is_right","last","le","left","left_and_then","left_or","left_or_default","left_or_else","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","len","lt","map","map","map_init","map_left","map_right","map_with","max","max_by","max_by_key","min","min_by","min_by_key","ne","next","next_back","nth","once","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","panic_fuse","par_bridge","par_drain","par_drain","par_extend","par_extend","par_iter","par_iter_mut","partial_cmp","partial_cmp","partition","partition","partition_map","plumbing","poll","position","position_any","position_first","position_last","positions","product","reduce","reduce_with","repeat","repeatn","rev","rfind","rfold","right","right_and_then","right_or","right_or_default","right_or_else","size_hint","skip","skip_any","skip_any_while","split","step_by","sum","take","take","take_any","take_any_while","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_fold","try_fold_with","try_for_each","try_for_each_init","try_for_each_with","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reduce","try_reduce_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_left","unwrap_right","unzip","unzip_into_vecs","update","while_some","with_max_len","with_min_len","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","zip","zip","zip_eq","Consumer","Folder","Folder","IntoIter","Item","Item","Output","Producer","ProducerCallback","Reducer","Reducer","Result","Result","UnindexedConsumer","UnindexedProducer","bridge","bridge_producer_consumer","bridge_unindexed","callback","complete","consume","consume_iter","fold_with","fold_with","full","full","into_folder","into_iter","max_len","min_len","reduce","split","split_at","split_at","split_off_left","to_reducer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","FromParallelIterator","IndexedParallelIterator","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelBridge","ParallelDrainFull","ParallelDrainRange","ParallelExtend","ParallelIterator","ParallelSlice","ParallelSliceMut","ParallelString","par_bridge","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","Iter","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","fmt","from","init","into","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_into","type_id","with_producer","with_producer","IntoIter","Iter","IterMut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_par_iter","into_par_iter","into_par_iter","len","len","len","opt_len","opt_len","opt_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_producer","with_producer","with_producer","Chunks","ChunksExact","ChunksExactMut","ChunksMut","Iter","IterMut","ParallelSlice","ParallelSliceMut","RChunks","RChunksExact","RChunksExactMut","RChunksMut","Split","SplitMut","Windows","as_parallel_slice","as_parallel_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_remainder","into_remainder","len","len","len","len","len","len","len","len","len","len","len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","opt_len","par_chunks","par_chunks_exact","par_chunks_exact_mut","par_chunks_mut","par_rchunks","par_rchunks_exact","par_rchunks_exact_mut","par_rchunks_mut","par_sort","par_sort_by","par_sort_by_cached_key","par_sort_by_key","par_sort_unstable","par_sort_unstable_by","par_sort_unstable_by_key","par_split","par_split_mut","par_windows","remainder","remainder","remainder","remainder","take_remainder","take_remainder","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","with_producer","Bytes","CharIndices","Chars","EncodeUtf16","Lines","MatchIndices","Matches","ParallelString","Split","SplitTerminator","SplitWhitespace","as_parallel_string","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","into_par_iter","par_bytes","par_char_indices","par_chars","par_encode_utf16","par_lines","par_match_indices","par_matches","par_split","par_split_terminator","par_split_whitespace","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","borrow","borrow_mut","deref","deref_mut","drive_unindexed","drop","drop","fmt","from","init","into","into_par_iter","try_from","try_into","type_id","Drain","IntoIter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drive","drive","drive_unindexed","drive_unindexed","drop","drop","drop","fmt","fmt","from","from","init","init","into","into","into_par_iter","into_par_iter","len","len","opt_len","opt_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_producer","with_producer"],"q":["rayon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::array","","","","","","","","","","","","","","","","","","","","","","rayon::collections","","","","","","","rayon::collections::binary_heap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::btree_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::hash_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::linked_list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::collections::vec_deque","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::iterrayon::iter::plumbing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::option","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::prelude","","","","","","","","","","","","","","rayon::range","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::range_inclusive","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rayon::slicerayon::strrayon::string","","","","","","","","","","","","","","","","rayon::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Provides context to a closure called by <code>broadcast</code>.","Work was found and executed.","Provides the calling context to a closure called by …","No available work was found.","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","Result of <code>yield_now()</code> or <code>yield_local()</code>.","Parallel iterator types for arrays (<code>[T; N]</code>)","","","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","","","Parallel iterator types for standard collections","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Traits for writing parallel programs using an …","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Parallel iterator types for options","Normally, whenever Rayon catches a panic, it tries to …","The rayon prelude imports the various <code>ParallelIterator</code> …","","Parallel iterator types for ranges, the type for values …","Parallel iterator types for inclusive ranges, the type for …","Parallel iterator types for results","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","Parallel iterator types for slices","","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Sets a callback to be invoked on thread start.","Parallel iterator types for strings","This module contains the parallel iterator types for owned …","Sets a closure which takes a thread index and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator types for vectors (<code>Vec&lt;T&gt;</code>)","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to Rayon.","Cooperatively yields execution to Rayon.","Parallel iterator that moves out of an array.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","This module contains the parallel iterator types for heaps …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for hash …","This module contains the parallel iterator types for …","This module contains the parallel iterator types for …","Draining parallel iterator that moves out of a binary heap,","Parallel iterator over a binary heap","Parallel iterator over an immutable reference to a binary …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree map","Parallel iterator over an immutable reference to a B-Tree …","Parallel iterator over a mutable reference to a B-Tree map","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a B-Tree set","Parallel iterator over an immutable reference to a B-Tree …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Draining parallel iterator that moves out of a hash map, …","Parallel iterator over a hash map","Parallel iterator over an immutable reference to a hash map","Parallel iterator over a mutable reference to a hash map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves out of a hash set, …","Parallel iterator over a hash set","Parallel iterator over an immutable reference to a hash set","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Parallel iterator over a linked list","Parallel iterator over an immutable reference to a linked …","Parallel iterator over a mutable reference to a linked list","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator over a double-ended queue","Parallel iterator over an immutable reference to a …","Parallel iterator over a mutable reference to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Chain</code> is an iterator that joins <code>b</code> after <code>a</code> in one …","<code>Chunks</code> is an iterator that groups elements of an …","<code>Cloned</code> is an iterator that clones the elements of an …","<code>Copied</code> is an iterator that copies the elements of an …","The enum <code>Either</code> with variants <code>Left</code> and <code>Right</code> is a general …","Iterator adaptor for the <code>empty()</code> function.","<code>Enumerate</code> is an iterator that returns the current count …","<code>Filter</code> takes a predicate <code>filter_op</code> and filters out …","<code>FilterMap</code> creates an iterator that uses <code>filter_op</code> to both …","<code>FlatMap</code> maps each element to a parallel iterator, then …","<code>FlatMapIter</code> maps each element to a serial iterator, then …","<code>Flatten</code> turns each element to a parallel iterator, then …","<code>FlattenIter</code> turns each element to a serial iterator, then …","<code>Fold</code> is an iterator that applies a function over an …","<code>FoldChunks</code> is an iterator that groups elements of an …","<code>FoldChunksWith</code> is an iterator that groups elements of an …","<code>FoldWith</code> is an iterator that applies a function over an …","<code>FromParallelIterator</code> implements the creation of a …","An iterator that supports “random access” to its data, …","<code>Inspect</code> is an iterator that calls a function with a …","<code>Interleave</code> is an iterator that interleaves elements of …","<code>InterleaveShortest</code> is an iterator that works similarly to …","<code>Intersperse</code> is an iterator that inserts a particular item …","<code>IntoParallelIterator</code> implements the conversion to a …","<code>IntoParallelRefIterator</code> implements the conversion to a …","<code>IntoParallelRefMutIterator</code> implements the conversion to a …","The type of item that the parallel iterator will produce.","The type of item that the parallel iterator will produce. …","The type of item that will be produced; this is typically …","The type of item that this parallel iterator produces. For …","The type of item that the parallel iterator will produce. …","The type of item that the parallel iterator will produce. …","The parallel iterator type that will be created.","The type of the parallel iterator that will be returned.","The type of iterator that will be created.","The draining parallel iterator type that will be created.","The draining parallel iterator type that will be created.","<code>IterBridge</code> is a parallel iterator that wraps a sequential …","A value of type <code>L</code>.","<code>Map</code> is an iterator that transforms the elements of an …","<code>MapInit</code> is an iterator that transforms the elements of an …","<code>MapWith</code> is an iterator that transforms the elements of an …","<code>MaxLen</code> is an iterator that imposes a maximum length on …","<code>MinLen</code> is an iterator that imposes a minimum length on …","<code>MultiZip</code> is an iterator that zips up a tuple of parallel …","Iterator adaptor for the <code>once()</code> function.","<code>PanicFuse</code> is an adaptor that wraps an iterator with a fuse …","Conversion trait to convert an <code>Iterator</code> to a …","<code>ParallelDrainFull</code> creates a parallel iterator that moves …","<code>ParallelDrainRange</code> creates a parallel iterator that moves …","<code>ParallelExtend</code> extends an existing collection with items …","Parallel version of the standard iterator trait.","<code>Positions</code> takes a predicate <code>predicate</code> and filters out …","Iterator adaptor for the <code>repeat()</code> function.","Iterator adaptor for the <code>repeatn()</code> function.","<code>Rev</code> is an iterator that produces elements in reverse …","A value of type <code>R</code>.","<code>Skip</code> is an iterator that skips over the first <code>n</code> elements. …","<code>SkipAny</code> is an iterator that skips over <code>n</code> elements from …","<code>SkipAnyWhile</code> is an iterator that skips over elements from …","<code>Split</code> is a parallel iterator using arbitrary data and a …","<code>StepBy</code> is an iterator that skips <code>n</code> elements between each …","<code>Take</code> is an iterator that iterates over the first <code>n</code> …","<code>TakeAny</code> is an iterator that iterates over <code>n</code> elements from …","<code>TakeAnyWhile</code> is an iterator that iterates over elements …","<code>TryFold</code> is an iterator that applies a function over an …","<code>TryFoldWith</code> is an iterator that applies a function over an …","<code>Update</code> is an iterator that mutates the elements of an …","<code>WhileSome</code> is an iterator that yields the <code>Some</code> elements of …","<code>Zip</code> is an iterator that zips up <code>a</code> and <code>b</code> into a single …","An <code>IndexedParallelIterator</code> that iterates over two parallel …","","Tests that every item in the parallel iterator matches the …","","Searches for <strong>some</strong> item in the parallel iterator that …","Convert <code>&amp;mut Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;mut L, &amp;mut R&gt;</code>.","","","","Convert <code>Pin&lt;&amp;mut Either&lt;L, R&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;L, R&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;L&gt;, Pin&lt;&amp;R&gt;&gt;</code>, …","","","Convert <code>&amp;Either&lt;L, R&gt;</code> to <code>Either&lt;&amp;L, &amp;R&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes two iterators and creates a new iterator over both.","Splits an iterator up into fixed-size chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an iterator which clones all of its elements.  …","","Lexicographically compares the elements of this …","","Creates a fresh collection containing all the elements …","Collects the results of the iterator into the specified …","Creates an iterator which copies all of its elements.  …","","Counts the number of items in this parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply one of two functions depending on contents, unifying …","Convert the contained value into <code>T</code>","Like <code>either</code>, but provide some context to whichever of the …","Creates a parallel iterator that produces nothing.","Yields an index along with each item.","","Determines if the elements of this <code>ParallelIterator</code> are …","Returns the left value","Returns the right value","","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Factors out <code>None</code> from an <code>Either</code> of <code>Option</code>.","Factors out a homogenous type from an <code>Either</code> of <code>Result</code>.","Factor out a homogeneous type from an either of pairs.","Applies <code>filter_op</code> to each item of this iterator, producing …","Applies <code>filter_op</code> to each item of this iterator to get an …","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies the given predicate to the items in the parallel …","Applies <code>map_op</code> to each item of this iterator to get nested …","Applies <code>map_op</code> to each item of this iterator to get nested …","An adaptor that flattens parallel-iterable <code>Item</code>s into one …","An adaptor that flattens serial-iterable <code>Item</code>s into one …","Convert <code>Either&lt;L, R&gt;</code> to <code>Either&lt;R, L&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel fold is similar to sequential fold except that the","Splits an iterator into fixed-size chunks, performing a …","Splits an iterator into fixed-size chunks, performing a …","Applies <code>fold_op</code> to the given <code>init</code> value with each item of …","","Executes <code>OP</code> on each item produced by the iterator, in …","Executes <code>OP</code> on a value returned by <code>init</code> with each item …","Executes <code>OP</code> on the given <code>init</code> value with each item …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an instance of the collection from the parallel …","Determines if the elements of this <code>ParallelIterator</code> are …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Applies <code>inspect_op</code> to a reference to each item of this …","Interleaves elements of this iterator and the other given …","Interleaves elements of this iterator and the other given …","Intersperses clones of an element between items of this …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Extract the value of an either over two equivalent types.","","Convert the inner value to an iterator.","Converts <code>self</code> into a parallel iterator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return true if the value is the <code>Left</code> variant.","Return true if the value is the <code>Right</code> variant.","","Determines if the elements of this <code>ParallelIterator</code> are …","Convert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Return left value or given value","Return left or a default","Returns left value or computes it from a closure","Produces an exact count of how many items this iterator …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines if the elements of this <code>ParallelIterator</code> are …","Map <code>f</code> over the contained value and return the result in the","Applies <code>map_op</code> to each item of this iterator, producing a …","Applies <code>map_op</code> to a value returned by <code>init</code> with each item …","Apply the function <code>f</code> on the value in the <code>Left</code> variant if …","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Applies <code>map_op</code> to the given <code>init</code> value with each item of …","Computes the maximum of all the items in the iterator. If …","Computes the maximum of all the items in the iterator with …","Computes the item that yields the maximum value for the …","Computes the minimum of all the items in the iterator. If …","Computes the minimum of all the items in the iterator with …","Computes the item that yields the minimum value for the …","Determines if the elements of this <code>ParallelIterator</code> are …","","","","Creates a parallel iterator that produces an element …","","","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps an iterator with a fuse in case of panics, to halt …","Creates a bridge from this type to a <code>ParallelIterator</code>.","Returns a draining parallel iterator over an entire …","Returns a draining parallel iterator over a range of the …","Extends an instance of the collection with the elements …","","Converts <code>self</code> into a parallel iterator.","Creates the parallel iterator from <code>self</code>.","","Lexicographically compares the elements of this …","","Partitions the items of a parallel iterator into a pair of …","Partitions and maps the items of a parallel iterator into …","Traits and functions used to implement parallel iteration. …","","","Searches for <strong>some</strong> item in the parallel iterator that …","Searches for the sequentially <strong>first</strong> item in the parallel …","Searches for the sequentially <strong>last</strong> item in the parallel …","Searches for items in the parallel iterator that match the …","Multiplies all the items in the iterator.","Reduces the items in the iterator into one item using <code>op</code>. …","Reduces the items in the iterator into one item using <code>op</code>. …","Creates a parallel iterator that endlessly repeats <code>elt</code> (by …","Creates a parallel iterator that produces <code>n</code> repeats of <code>elt</code> …","Produces a new iterator with the elements of this iterator …","","","Convert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.","Apply the function <code>f</code> on the value in the <code>Right</code> variant if …","Return right value or given value","Return right or a default","Returns right value or computes it from a closure","","Creates an iterator that skips the first <code>n</code> elements.","Creates an iterator that skips <code>n</code> elements from <em>anywhere</em> in …","Creates an iterator that skips elements from <em>anywhere</em> in …","The <code>split</code> function takes arbitrary data and a closure that …","Creates an iterator that steps by the given amount","Sums up the items in the iterator.","Creates an iterator that yields the first <code>n</code> elements.","Takes only <code>n</code> repeats of the element, similar to the general","Creates an iterator that yields <code>n</code> elements from <em>anywhere</em> …","Creates an iterator that takes elements from <em>anywhere</em> in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a fallible parallel fold.","Performs a fallible parallel fold with a cloneable <code>init</code> …","Executes a fallible <code>OP</code> on each item produced by the …","Executes a fallible <code>OP</code> on a value returned by <code>init</code> with …","Executes a fallible <code>OP</code> on the given <code>init</code> value with each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reduces the items in the iterator into one item using a …","Reduces the items in the iterator into one item using a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the left value","Returns the right value","Unzips the items of a parallel iterator into a pair of …","Unzips the results of the iterator into the specified …","Mutates each item of this iterator before yielding it.","Creates an iterator over the <code>Some</code> items of this iterator, …","Sets the maximum length of iterators desired to process in …","Sets the minimum length of iterators desired to process in …","Internal method used to define the behavior of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over tuples <code>(A, B)</code>, where the items <code>A</code> are from …","Iterates tuples, repeating the element with items from …","The same as <code>Zip</code>, but requires that both iterators have the …","A consumer is effectively a generalized “fold” …","The <code>Folder</code> trait encapsulates the standard fold operation. …","The type of folder that this consumer can be converted …","The type of iterator we will become.","The type of item that will be produced by this producer …","The type of item returned by this producer.","The type of value returned by this callback. Analogous to …","A <code>Producer</code> is effectively a “splittable <code>IntoIterator</code>”. …","The <code>ProducerCallback</code> trait is a kind of generic closure, …","The reducer is the final step of a <code>Consumer</code> – after a …","The type of reducer that is produced if this consumer is …","The type of result that this consumer will ultimately …","The type of result that will ultimately be produced by the …","A stateless consumer can be freely copied. These consumers …","A variant on <code>Producer</code> which does not know its exact length …","This helper function is used to “connect” a parallel …","This helper function is used to “connect” a producer …","A variant of <code>bridge_producer_consumer</code> where the producer …","Invokes the callback with the given producer as argument. …","Finish consuming items, produce final result.","Consume next item and return new sequential state.","Consume items from the iterator until full, and return new …","Iterate the producer, feeding each element to <code>folder</code>, and …","Iterate the producer, feeding each element to <code>folder</code>, and …","Hint whether this <code>Consumer</code> would like to stop processing …","Hint whether this <code>Folder</code> would like to stop processing …","Convert the consumer into a folder that can consume items …","Convert <code>self</code> into an iterator; at this point, no more …","The maximum number of items that we will process …","The minimum number of items that we will process …","Reduce two final results into one; this is executed after a","Split midway into a new producer if possible, otherwise …","Split into two producers; one produces items <code>0..index</code>, the …","Divide the consumer into two consumers, one processing …","Splits off a “left” consumer and returns it. The <code>self</code> …","Creates a reducer that can be used to combine the results …","A parallel iterator over the value in <code>Some</code> variant of an …","A parallel iterator over a reference to the <code>Some</code> variant …","A parallel iterator over a mutable reference to the <code>Some</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conversion trait to convert an <code>Iterator</code> to a …","","","","","","","","Creates a bridge from this type to a <code>ParallelIterator</code>.","Parallel iterator over a range, implemented for all …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over an inclusive range, implemented for …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Parallel iterator over a result","Parallel iterator over an immutable reference to a result","Parallel iterator over a mutable reference to a result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over immutable items in a slice","Parallel iterator over mutable items in a slice","Parallel extensions for slices.","Parallel extensions for mutable slices.","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over immutable non-overlapping chunks of …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over mutable non-overlapping chunks of a …","Parallel iterator over slices separated by a predicate","Parallel iterator over mutable slices separated by a …","Parallel iterator over immutable overlapping windows of a …","Returns a plain slice, which is used to implement the rest …","Returns a plain mutable slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over at most <code>chunk_size</code> …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over <code>chunk_size</code> elements of …","Returns a parallel iterator over at most <code>chunk_size</code> …","Sorts the slice in parallel.","Sorts the slice in parallel with a comparator function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel with a key extraction function.","Sorts the slice in parallel, but might not preserve the …","Sorts the slice in parallel with a comparator function, …","Sorts the slice in parallel with a key extraction …","Returns a parallel iterator over subslices separated by …","Returns a parallel iterator over mutable subslices …","Returns a parallel iterator over all contiguous windows of …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","Return the remainder of the original slice that is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parallel iterator over the bytes of a string","Parallel iterator over the characters of a string, with …","Parallel iterator over the characters of a string","Parallel iterator over a string encoded as UTF-16","Parallel iterator over lines in a string","Parallel iterator over substrings that match a pattern, …","Parallel iterator over substrings that match a pattern","Parallel extensions for strings.","Parallel iterator over substrings separated by a pattern","Parallel iterator over substrings separated by a …","Parallel iterator over substrings separated by whitespace","Returns a plain string slice, which is used to implement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns a parallel iterator over the bytes of a string.","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over the characters of a …","Returns a parallel iterator over a string encoded as …","Returns a parallel iterator over the lines of a string, …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings that match a …","Returns a parallel iterator over substrings separated by a …","Returns a parallel iterator over substrings terminated by a","Returns a parallel iterator over the sub-slices of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draining parallel iterator that moves a range of …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Draining parallel iterator that moves a range out of a …","Parallel iterator that moves out of a vector.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,8,0,8,0,0,0,0,0,0,0,0,13,16,17,18,4,1,8,5,19,13,16,17,18,4,1,8,5,19,1,0,4,1,1,1,8,8,0,0,4,4,0,4,1,13,16,17,18,4,1,8,5,19,13,16,17,18,4,1,8,5,19,5,13,16,17,18,4,4,1,8,5,19,8,1,13,16,17,18,4,1,8,5,5,19,13,16,17,18,4,1,8,5,19,0,4,0,4,13,16,13,16,17,18,4,1,8,5,19,4,13,16,17,18,4,1,8,5,19,0,0,4,0,0,19,16,4,1,13,1,0,1,0,5,0,0,0,16,0,4,0,4,0,5,0,17,4,0,17,18,4,0,18,4,1,16,1,1,0,0,1,8,5,13,16,17,18,4,1,8,5,19,13,16,17,18,4,1,8,5,19,13,16,17,18,4,1,8,5,19,0,0,4,0,4,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,33,35,36,33,35,36,33,35,33,35,33,35,36,33,35,36,33,35,36,33,35,36,33,35,36,36,33,35,36,33,35,36,33,35,36,33,35,36,33,35,36,33,35,36,33,35,36,33,35,33,35,36,33,35,36,33,35,36,33,35,36,0,0,0,38,37,39,38,37,39,37,37,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,38,37,39,37,38,37,39,38,37,39,38,37,39,0,0,41,40,41,40,40,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,40,41,40,41,40,41,40,0,0,0,0,45,44,46,47,45,44,46,47,44,44,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,45,44,46,47,44,45,44,46,47,45,44,46,47,45,44,46,47,0,0,0,49,48,50,49,48,50,48,48,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,49,48,50,48,49,48,50,49,48,50,49,48,50,0,0,0,51,52,53,51,52,53,51,52,51,52,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,51,52,53,51,52,53,51,52,53,0,0,0,0,54,55,56,57,54,55,56,57,54,55,54,55,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,54,55,54,55,56,57,54,55,56,57,54,55,56,57,54,55,56,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,152,153,63,154,155,151,152,153,154,155,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,63,58,63,58,58,58,58,58,58,58,58,58,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,63,66,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,63,58,66,58,63,66,63,58,63,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,66,58,62,60,61,64,65,67,76,77,78,79,80,81,82,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,88,89,93,94,95,99,100,105,107,108,63,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,58,0,66,58,66,58,58,58,58,58,58,58,58,63,63,58,63,63,63,58,63,63,63,63,63,63,63,58,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,63,66,66,63,58,63,63,63,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,156,66,66,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,63,66,66,63,58,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,58,58,151,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,58,66,58,58,58,58,58,66,58,58,62,60,61,64,65,67,76,77,78,79,80,81,82,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,88,89,93,94,95,99,100,105,107,108,66,58,63,63,58,58,63,63,63,63,63,63,63,66,58,58,58,0,58,62,63,60,61,64,65,67,76,77,78,79,80,81,82,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,88,89,93,94,95,99,100,105,107,108,63,157,154,155,158,58,152,153,58,66,58,63,63,0,58,58,66,66,66,66,63,63,63,0,0,66,58,58,58,58,58,58,58,58,66,63,63,0,66,63,66,92,63,63,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,63,63,63,63,63,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,63,63,58,62,60,61,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,58,58,63,66,63,63,66,66,66,58,62,60,61,64,65,67,76,77,78,79,80,81,82,83,84,85,86,87,87,87,87,87,87,87,87,87,87,87,87,88,89,93,94,95,99,100,105,107,108,66,92,66,0,0,110,159,159,160,115,0,0,0,110,110,161,0,0,0,0,0,115,161,161,161,160,159,110,161,110,159,159,159,162,160,159,110,163,163,0,0,0,116,117,118,116,117,118,116,117,116,117,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,118,116,117,116,117,118,116,117,118,116,117,118,116,117,118,0,0,0,0,0,0,0,0,0,0,0,0,0,157,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,122,123,124,122,123,124,122,123,122,123,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,124,122,123,122,123,124,122,123,124,122,123,124,122,123,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,165,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,126,127,128,129,130,131,125,126,127,128,129,130,131,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,133,135,126,127,132,133,128,129,134,135,130,131,136,126,127,132,133,128,129,134,135,130,131,136,164,164,165,165,164,164,165,165,165,165,165,165,165,165,165,164,165,164,127,133,129,135,133,135,125,126,127,128,129,130,131,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,125,137,126,127,132,133,128,129,134,135,130,131,136,126,127,132,133,128,129,134,135,130,131,136,0,0,0,0,0,0,0,0,0,0,0,166,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,166,166,166,166,166,166,166,166,166,166,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,138,139,140,141,142,143,144,145,146,147,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,0,149,150,149,150,149,149,149,150,149,150,149,150,149,150,149,150,150,149,150,149,150,149,150,149,150,149,150,149,150,149,150,149,149,150,149,150,149,150,149,150],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[],[[3,[2]]]],[4,[[3,[2]]]],[1,[[6,[4,5]]]],[1,[[6,[5]]]],[[[1,[7]]],[[6,[5]]]],[8,8],[[]],0,[[],9],[4,9],[4,[[11,[10]]]],[[],[[11,[9]]]],[4,[[11,[9]]]],[[],[[1,[7]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[5,12],[9],[9],[9],[9],[9],[4],[9],[9],[9],[9],[[8,8],10],[1,1],[[13,14],[[6,[15]]]],[[16,14],[[6,[15]]]],[[17,14],[[6,[15]]]],[[18,14],[[6,[15]]]],[[4,14],[[6,[15]]]],[[1,14],[[6,[15]]]],[[8,14],[[6,[15]]]],[[5,14],[[6,[15]]]],[[5,14],[[6,[15]]]],[[19,14],[[6,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[[]],[4],[13,9],[16,9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[4],[[]],[[],9],[19,10],[16,[[11,[12]]]],[20,[[6,[4,[22,[21,2]]]]]],[[],[[1,[7]]]],[13,9],[[1,9],1],0,[1,1],0,[23],0,0,0,[16],[[]],[4],[[]],[4],0,[5,[[11,[21]]]],[[]],[17],[4],[[]],[17],[18],[4],[[]],[18],[4],[1,[[1,[24]]]],[16,[[11,[9]]]],[[1,9],1],[1,1],0,0,[1,1],[[]],[[],25],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],[[11,[8]]]],[4,[[11,[8]]]],[[],[[11,[8]]]],[4,[[11,[8]]]],0,[[]],[[]],[[[29,[[0,[27,28]]]]],[[29,[[0,[27,28]]]]]],[[]],[9],[9],[[[29,[28]]]],[[[29,[28]]]],[9],[[[29,[[0,[30,28]]]],14],31],[[]],[[],9],[[]],[[]],[[[29,[28]]],9],[[[29,[28]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],26],[[[29,[28]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[[0,[27,32,28]]]]],[[33,[[0,[27,32,28]]]]]],[[[35,[[0,[32,34]]]]],[[35,[[0,[32,34]]]]]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[33,[[0,[32,28]]]]]],[[[35,[[0,[32,34]]]]]],[[[36,[[0,[32,28]]]]]],[[[33,[[0,[32,28]]]]]],[[[35,[[0,[32,34]]]]]],[[[36,[[0,[32,28]]]]]],[9],[9],[9],[[[36,[[0,[32,28]]]]]],[[[33,[[0,[30,32,28]]]],14],31],[[[35,[[0,[30,32,34]]]],14],31],[[[36,[[0,[30,32,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[[0,[32,28]]]]],9],[[[35,[[0,[32,34]]]]],9],[[[36,[[0,[32,28]]]]],9],[[[33,[[0,[32,28]]]]],[[11,[9]]]],[[[35,[[0,[32,34]]]]],[[11,[9]]]],[[[36,[[0,[32,28]]]]],[[11,[9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[[33,[[0,[32,28]]]]]],[[[35,[[0,[32,34]]]]]],[[[36,[[0,[32,28]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[[0,[32,34]],34]]],[[37,[[0,[32,34]],34]]]],[[]],[9],[9],[9],[9],[9],[9],[[[38,[[0,[32,28]],28]]]],[[[37,[[0,[32,34]],34]]]],[[[39,[[0,[32,34]],28]]]],[9],[9],[9],[[[38,[[0,[30,32,28]],[0,[30,28]]]],14],31],[[[37,[[0,[30,32,34]],[0,[30,34]]]],14],31],[[[39,[[0,[30,32,34]],[0,[30,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[[0,[32,28]],28]]],[[11,[9]]]],[[[37,[[0,[32,34]],34]]],[[11,[9]]]],[[[39,[[0,[32,34]],28]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],0,0,[[]],[[]],[[]],[[]],[[[40,[[0,[32,34]]]]],[[40,[[0,[32,34]]]]]],[[]],[9],[9],[9],[9],[[[41,[[0,[32,28]]]]]],[[[40,[[0,[32,34]]]]]],[9],[9],[[[41,[[0,[30,32,28]]]],14],31],[[[40,[[0,[30,32,34]]]],14],31],[[]],[[]],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[41,[[0,[32,28]]]]],[[11,[9]]]],[[[40,[[0,[32,34]]]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[[0,[42,43,34]],34]]],[[44,[[0,[42,43,34]],34]]]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[[[45,[[0,[42,43,28]],28]]]],[[[44,[[0,[42,43,34]],34]]]],[[[46,[[0,[42,43,34]],28]]]],[[[47,[[0,[42,43,28]],28]]]],[9],[9],[9],[9],[[[45,[[0,[30,42,43,28]],[0,[30,28]]]],14],31],[[[44,[[0,[30,42,43,34]],[0,[30,34]]]],14],31],[[[46,[[0,[30,42,43,34]],[0,[30,28]]]],14],31],[[[47,[[0,[30,42,43,28]],[0,[30,28]]]],14],31],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[[0,[42,43,28]],28]]],[[11,[9]]]],[[[44,[[0,[42,43,34]],34]]],[[11,[9]]]],[[[46,[[0,[42,43,34]],28]]],[[11,[9]]]],[[[47,[[0,[42,43,28]],28]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[[0,[42,43,34]]]]],[[48,[[0,[42,43,34]]]]]],[[]],[9],[9],[9],[9],[9],[9],[[[49,[[0,[42,43,28]]]]]],[[[48,[[0,[42,43,34]]]]]],[[[50,[[0,[42,43,28]]]]]],[9],[9],[9],[[[49,[[0,[30,42,43,28]]]],14],31],[[[48,[[0,[30,42,43,34]]]],14],31],[[[50,[[0,[30,42,43,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[49,[[0,[42,43,28]]]]],[[11,[9]]]],[[[48,[[0,[42,43,34]]]]],[[11,[9]]]],[[[50,[[0,[42,43,28]]]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[[0,[27,28]]]]],[[51,[[0,[27,28]]]]]],[[[52,[34]]],[[52,[34]]]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[51,[28]]]],[[[52,[34]]]],[[[53,[28]]]],[9],[9],[9],[[[51,[[0,[30,28]]]],14],31],[[[52,[[0,[30,34]]]],14],31],[[[53,[[0,[30,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[28]]],[[11,[9]]]],[[[52,[34]]],[[11,[9]]]],[[[53,[28]]],[[11,[9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[[0,[27,28]]]]],[[54,[[0,[27,28]]]]]],[[[55,[34]]],[[55,[34]]]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[[[54,[28]]]],[[[55,[34]]]],[[[56,[28]]]],[[[57,[28]]]],[[[54,[28]]]],[[[55,[34]]]],[[[56,[28]]]],[[[57,[28]]]],[9],[9],[9],[9],[[[57,[28]]]],[[[54,[[0,[30,28]]]],14],31],[[[55,[[0,[30,34]]]],14],31],[[[56,[[0,[30,28]]]],14],31],[[[57,[[0,[30,28]]]],14],31],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[28]]],9],[[[55,[34]]],9],[[[56,[28]]],9],[[[57,[28]]],9],[[[54,[28]]],[[11,[9]]]],[[[55,[34]]],[[11,[9]]]],[[[56,[28]]],[[11,[9]]]],[[[57,[28]]],[[11,[9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],[[[54,[28]]]],[[[55,[34]]]],[[[56,[28]]]],[[[57,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[58,10],[[],10],[58,10],[[],10],[58,58],[58,12],[58],[58],[[[59,[58]]],[[58,[59,59]]]],[[[59,[58]]],[[58,[59,59]]]],[58,12],[58],[58,58],[58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[9,61],[58,58],[[[62,[28]]],[[62,[28]]]],[60,60],[61,61],[[[64,[[0,[27,63]]]]],[[64,[[0,[27,63]]]]]],[[[65,[[0,[27,63]]]]],[[65,[[0,[27,63]]]]]],[[[67,[[0,[27,66]]]]],[[67,[[0,[27,66]]]]]],[[[68,[[0,[27,63]],27]]],[[68,[[0,[27,63]],27]]]],[[[69,[[0,[27,63]],27]]],[[69,[[0,[27,63]],27]]]],[[[70,[[0,[27,63]],27]]],[[70,[[0,[27,63]],27]]]],[[[71,[[0,[27,63]],27]]],[[71,[[0,[27,63]],27]]]],[[[72,[[0,[27,63]]]]],[[72,[[0,[27,63]]]]]],[[[73,[[0,[27,63]]]]],[[73,[[0,[27,63]]]]]],[[[74,[27,27,27]]],[[74,[27,27,27]]]],[[[75,[27,27,27]]],[[75,[27,27,27]]]],[[[76,[27,27]]],[[76,[27,27]]]],[[[77,[27,27]]],[[77,[27,27]]]],[[[78,[[0,[27,63]],27]]],[[78,[[0,[27,63]],27]]]],[79,79],[80,80],[81,81],[[[82,[[0,[27,66]]]]],[[82,[[0,[27,66]]]]]],[[[83,[[0,[27,66]]]]],[[83,[[0,[27,66]]]]]],[[[84,[[0,[27,63]],27]]],[[84,[[0,[27,63]],27]]]],[[[85,[[0,[27,63]],27,27]]],[[85,[[0,[27,63]],27,27]]]],[[[86,[[0,[27,63]],27,27]]],[[86,[[0,[27,63]],27,27]]]],[[[87,[27]]],[[87,[27]]]],[[[88,[[0,[27,28]]]]],[[88,[[0,[27,28]]]]]],[[[89,[[0,[27,63]]]]],[[89,[[0,[27,63]]]]]],[[[90,[27]]],[[90,[27]]]],[[[91,[[0,[27,66]],27]]],[[91,[[0,[27,66]],27]]]],[[[92,[[0,[27,27,28]]]]],[[92,[[0,[27,27,28]]]]]],[[[93,[[0,[27,27,28]]]]],[[93,[[0,[27,27,28]]]]]],[[[94,[[0,[27,66]]]]],[[94,[[0,[27,66]]]]]],[[[95,[27]]],[[95,[27]]]],[[[96,[[0,[27,63]]]]],[[96,[[0,[27,63]]]]]],[[[97,[[0,[27,63]],27]]],[[97,[[0,[27,63]],27]]]],[[[98,[27,27]]],[[98,[27,27]]]],[[[99,[[0,[27,66]]]]],[[99,[[0,[27,66]]]]]],[[[100,[27]]],[[100,[27]]]],[[[101,[[0,[27,63]]]]],[[101,[[0,[27,63]]]]]],[[[102,[[0,[27,63]],27]]],[[102,[[0,[27,63]],27]]]],[[[103,[27,27,27,27]]],[[103,[27,27,27,27]]]],[[[104,[27,[0,[27,0]],27]]],[[104,[27,[0,[27,0]],27]]]],[[[105,[[0,[27,63]],27]]],[[105,[[0,[27,63]],27]]]],[[[106,[[0,[27,63]]]]],[[106,[[0,[27,63]]]]]],[[[107,[[0,[27,66]],[0,[27,66]]]]],[[107,[[0,[27,66]],[0,[27,66]]]]]],[[[108,[[0,[27,66]],[0,[27,66]]]]],[[108,[[0,[27,66]],[0,[27,66]]]]]],[[58,58]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[58,58],109],[[],109],[58],[[]],[3],[[],65],[58,9],[[],9],[58],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[58],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[110],[58],[[[62,[28]]]],[60],[61],[64],[65],[[67,110]],[76],[77],[78],[79],[80],[81],[[82,110]],[[83,110]],[84],[85],[86],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[[[88,[28]]]],[89],[93],[[94,110]],[[95,110]],[[99,110]],[[100,110]],[105],[107],[108],[[]],[58],[[[62,[28]]]],[60],[61],[64],[65],[67],[68],[69],[70],[71],[72],[73],[74],[75],[76],[77],[78],[79],[80],[81],[82],[83],[84],[85],[86],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[[[88,[28]]]],[89],[[[90,[[0,[111,28]]]]]],[91],[92],[93],[94],[95],[96],[97],[98],[99],[100],[101],[102],[103],[104],[105],[106],[107],[108],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[58],[58],[58],[[],[[62,[28]]]],[[],67],[[58,58],10],[[],10],[[58,12]],[[58,12]],[58],[[[58,[6,6]]],[[6,[58]]]],[58],[[[58,[11,11]]],[[11,[58]]]],[[[58,[6,6]]],[[6,[58]]]],[58],[[],68],[[],69],[58,11],[[],11],[[],11],[[],11],[58,11],[[],11],[[],11],[[],11],[[],70],[[],71],[[],72],[[],73],[58,58],[[58,14],[[6,[15]]]],[[58,14],[[6,[15]]]],[[[62,[28]],14],31],[[60,14],31],[[61,14],31],[[[64,[[0,[30,63]]]],14],31],[[[65,[[0,[30,63]]]],14],31],[[[67,[[0,[30,66]]]],14],31],[[[68,[[0,[63,30]]]],14],31],[[[69,[[0,[63,30]]]],14],31],[[[70,[[0,[63,30]]]],14],31],[[[71,[[0,[63,30]]]],14],31],[[[72,[[0,[30,63]]]],14],31],[[[73,[[0,[30,63]]]],14],31],[[[74,[[0,[63,30]]]],14],31],[[[75,[[0,[63,30]],30]],14],31],[[[76,[[0,[66,30]]]],14],31],[[[77,[[0,[66,30]],30]],14],31],[[[78,[[0,[63,30]]]],14],31],[[79,14],31],[[80,14],31],[[81,14],31],[[[82,[[0,[30,66]]]],14],31],[[[83,[[0,[30,66]]]],14],31],[[[84,[[0,[63,30]]]],14],31],[[[85,[[0,[63,30]],30]],14],31],[[[86,[[0,[63,30]]]],14],31],[[[87,[30]],14],31],[[[88,[[0,[30,28]]]],14],31],[[[89,[[0,[30,63]]]],14],31],[[[90,[30]],14],31],[[[91,[[0,[66,30]]]],14],31],[[[92,[[0,[30,27,28]]]],14],31],[[[93,[[0,[30,27,28]]]],14],31],[[[94,[[0,[30,66]]]],14],31],[[[95,[30]],14],31],[[[96,[[0,[30,63]]]],14],31],[[[97,[[0,[63,30]]]],14],31],[[[98,[30]],14],31],[[[99,[[0,[30,66]]]],14],31],[[[100,[30]],14],31],[[[101,[[0,[30,63]]]],14],31],[[[102,[[0,[63,30]]]],14],31],[[[103,[[0,[63,30]]]],14],31],[[[104,[[0,[63,30]],0]],14],31],[[[105,[[0,[63,30]]]],14],31],[[[106,[[0,[30,63]]]],14],31],[[[107,[[0,[30,66]],[0,[30,66]]]],14],31],[[[108,[[0,[30,66]],[0,[30,66]]]],14],31],[58],[[],74],[9,76],[9,77],[[],75],[58],[[]],[[]],[[]],[6,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[58],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],78],[[],79],[[],80],[[],81],[58,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58],[[]],[58,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,10],[58,10],[58,11],[[],10],[58,11],[58,58],[58],[58],[58],[[],9],[58,9],[58,9],[[[62,[28]]],9],[60,9],[61,9],[64,9],[65,9],[67,9],[76,9],[77,9],[78,9],[79,9],[80,9],[81,9],[82,9],[83,9],[84,9],[85,9],[86,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[87,9],[[[88,[28]]],9],[89,9],[93,9],[94,9],[95,9],[99,9],[100,9],[105,9],[107,9],[108,9],[[],10],[58,58],[[],84],[[],86],[58,58],[58,58],[[],85],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],10],[58,11],[58,11],[[58,9],11],[28,[[88,[28]]]],[58,[[11,[9]]]],[[[62,[28]]],[[11,[9]]]],[[],[[11,[9]]]],[60,[[11,[9]]]],[61,[[11,[9]]]],[64,[[11,[9]]]],[65,[[11,[9]]]],[67,[[11,[9]]]],[76,[[11,[9]]]],[77,[[11,[9]]]],[78,[[11,[9]]]],[79,[[11,[9]]]],[80,[[11,[9]]]],[81,[[11,[9]]]],[82,[[11,[9]]]],[83,[[11,[9]]]],[84,[[11,[9]]]],[85,[[11,[9]]]],[86,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[87,[[11,[9]]]],[[[88,[28]]],[[11,[9]]]],[89,[[11,[9]]]],[93,[[11,[9]]]],[94,[[11,[9]]]],[95,[[11,[9]]]],[99,[[11,[9]]]],[100,[[11,[9]]]],[105,[[11,[9]]]],[107,[[11,[9]]]],[108,[[11,[9]]]],[[],89],[[],90],[[]],[112],[[]],[58],[[]],[[]],[[58,58],[[11,[109]]]],[[],[[11,[109]]]],[58],[[]],[[]],0,[[[59,[58]],113],114],[58,[[11,[9]]]],[[],[[11,[9]]]],[[],[[11,[9]]]],[[],[[11,[9]]]],[[],91],[[]],[[]],[[],11],[[[0,[27,28]]],[[92,[[0,[27,28]]]]]],[[[0,[27,28]],9],[[93,[[0,[27,28]]]]]],[[],94],[58,11],[58],[58,11],[58,58],[58],[58],[58],[58],[9,95],[9,96],[[],97],[[],98],[9,99],[[]],[9,100],[[92,9],93],[9,101],[[],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],103],[[],104],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[],11],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[58],[58],[[]],[[3,3]],[[],105],[[],106],[9,83],[9,82],[115],[58],[[[62,[28]]]],[60],[61],[64],[65],[67],[76],[77],[78],[79],[80],[81],[82],[83],[84],[85],[86],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[87],[[[88,[28]]]],[89],[93],[94],[95],[99],[100],[105],[107],[108],[[],107],[92,[[107,[93]]]],[[],108],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[]],[[]],[[],9],[[],9],[[]],[[]],[9],[9],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[[0,[27,28]]]]],[[116,[[0,[27,28]]]]]],[[[117,[34]]],[[117,[34]]]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[116,[28]]]],[[[117,[34]]]],[[[118,[28]]]],[[[116,[28]]]],[[[117,[34]]]],[[[118,[28]]]],[9],[9],[9],[[[116,[[0,[30,28]]]],14],31],[[[117,[[0,[30,34]]]],14],31],[[[118,[[0,[30,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[28]]],9],[[[117,[34]]],9],[[[118,[28]]],9],[[[116,[28]]],[[11,[9]]]],[[[117,[34]]],[[11,[9]]]],[[[118,[28]]],[[11,[9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[[116,[28]]]],[[[117,[34]]]],[[[118,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],90],0,[[]],[[]],[[[119,[27]]],[[119,[27]]]],[[]],[9],[9],[[[119,[120]]]],[[[119,[0]]]],[[[119,[120]]]],[[[119,[0]]]],[9],[[[119,[30]],14],31],[[]],[[],9],[[]],[[]],[[[119,[120]]],9],[[[119,[0]]],9],[[[119,[120]]],[[11,[9]]]],[[[119,[0]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],26],[[[119,[120]]]],[[[119,[0]]]],0,[[]],[[]],[[[121,[27]]],[[121,[27]]]],[[]],[9],[9],[[[121,[0]]]],[[[121,[120]]]],[[[121,[0]]]],[[[121,[120]]]],[9],[[[121,[30]],14],31],[[]],[[],9],[[]],[[]],[[[121,[120]]],9],[[[121,[0]]],9],[[[121,[0]]],[[11,[9]]]],[[[121,[120]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],26],[[[121,[0]]]],[[[121,[120]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[122,[[0,[27,28]]]]],[[122,[[0,[27,28]]]]]],[[[123,[34]]],[[123,[34]]]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[[122,[28]]]],[[[123,[34]]]],[[[124,[28]]]],[[[122,[28]]]],[[[123,[34]]]],[[[124,[28]]]],[9],[9],[9],[[[122,[[0,[30,28]]]],14],31],[[[123,[[0,[30,34]]]],14],31],[[[124,[[0,[30,28]]]],14],31],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[[122,[28]]],9],[[[123,[34]]],9],[[[124,[28]]],9],[[[122,[28]]],[[11,[9]]]],[[[123,[34]]],[[11,[9]]]],[[[124,[28]]],[[11,[9]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[[122,[28]]]],[[[123,[34]]]],[[[124,[28]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[125,[27]]],[[125,[27]]]],[[[126,[34]]],[[126,[34]]]],[[[127,[34]]],[[127,[34]]]],[[[128,[34]]],[[128,[34]]]],[[[129,[34]]],[[129,[34]]]],[[[130,[34]]],[[130,[34]]]],[[[131,[34]]],[[131,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[126,[34]]]],[[[127,[34]]]],[[[132,[28]]]],[[[133,[28]]]],[[[128,[34]]]],[[[129,[34]]]],[[[134,[28]]]],[[[135,[28]]]],[[[130,[34]]]],[[[131,[34]]]],[[[136,[28]]]],[125],[137],[[[126,[34]]]],[[[127,[34]]]],[[[132,[28]]]],[[[133,[28]]]],[[[128,[34]]]],[[[129,[34]]]],[[[134,[28]]]],[[[135,[28]]]],[[[130,[34]]]],[[[131,[34]]]],[[[136,[28]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[125,[30]],14],31],[[[137,[30]],14],31],[[[126,[[0,[30,34]]]],14],31],[[[127,[[0,[30,34]]]],14],31],[[[132,[[0,[30,28]]]],14],31],[[[133,[[0,[30,28]]]],14],31],[[[128,[[0,[30,34]]]],14],31],[[[129,[[0,[30,34]]]],14],31],[[[134,[[0,[30,28]]]],14],31],[[[135,[[0,[30,28]]]],14],31],[[[130,[[0,[30,34]]]],14],31],[[[131,[[0,[30,34]]]],14],31],[[[136,[[0,[30,28]]]],14],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[133,[28]]]],[[[135,[28]]]],[[[126,[34]]],9],[[[127,[34]]],9],[[[132,[28]]],9],[[[133,[28]]],9],[[[128,[34]]],9],[[[129,[34]]],9],[[[134,[28]]],9],[[[135,[28]]],9],[[[130,[34]]],9],[[[131,[34]]],9],[[[136,[28]]],9],[[[126,[34]]],[[11,[9]]]],[[[127,[34]]],[[11,[9]]]],[[[132,[28]]],[[11,[9]]]],[[[133,[28]]],[[11,[9]]]],[[[128,[34]]],[[11,[9]]]],[[[129,[34]]],[[11,[9]]]],[[[134,[28]]],[[11,[9]]]],[[[135,[28]]],[[11,[9]]]],[[[130,[34]]],[[11,[9]]]],[[[131,[34]]],[[11,[9]]]],[[[136,[28]]],[[11,[9]]]],[9,126],[9,127],[9,133],[9,132],[9,128],[9,129],[9,135],[9,134],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],125],[[],137],[9,131],[[[127,[34]]]],[[[133,[28]]]],[[[129,[34]]]],[[[135,[28]]]],[[[133,[28]]]],[[[135,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[126,[34]]]],[[[127,[34]]]],[[[132,[28]]]],[[[133,[28]]]],[[[128,[34]]]],[[[129,[34]]]],[[[134,[28]]]],[[[135,[28]]]],[[[130,[34]]]],[[[131,[34]]]],[[[136,[28]]]],0,0,0,0,0,0,0,0,0,0,0,[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[140,140],[141,141],[[[142,[[0,[27,0]]]]],[[142,[[0,[27,0]]]]]],[[[143,[[0,[27,0]]]]],[[143,[[0,[27,0]]]]]],[144,144],[145,145],[[[146,[[0,[27,0]]]]],[[146,[[0,[27,0]]]]]],[[[147,[[0,[27,0]]]]],[[147,[[0,[27,0]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[138],[139],[140],[141],[[[142,[0]]]],[[[143,[0]]]],[144],[145],[[[146,[0]]]],[[[147,[0]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[138,14],31],[[139,14],31],[[140,14],31],[[141,14],31],[[[142,[[0,[30,0]]]],14],31],[[[143,[[0,[30,0]]]],14],31],[[144,14],31],[[145,14],31],[[[146,[[0,[30,0]]]],14],31],[[[147,[[0,[30,0]]]],14],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],140],[[],139],[[],138],[[],141],[[],144],0,0,0,0,[[],145],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[]],[[]],[9],[9],[148],[9],[148],[[148,14],31],[[]],[[],9],[[]],[[]],[[],6],[[],6],[[],26],0,0,[[]],[[]],[[]],[[]],[[[149,[[0,[27,28]]]]],[[149,[[0,[27,28]]]]]],[[]],[9],[9],[9],[9],[[[149,[28]]]],[[[150,[28]]]],[[[149,[28]]]],[[[150,[28]]]],[9],[9],[[[150,[28]]]],[[[149,[[0,[30,28]]]],14],31],[[[150,[[0,[30,28]]]],14],31],[[]],[[]],[[],9],[[],9],[[]],[[]],[[]],[[]],[[[149,[28]]],9],[[[150,[28]]],9],[[[149,[28]]],[[11,[9]]]],[[[150,[28]]],[[11,[9]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],26],[[],26],[[[149,[28]]]],[[[150,[28]]]]],"p":[[3,"ThreadPoolBuilder"],[3,"Global"],[3,"Vec"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[4,"Result"],[3,"DefaultSpawn"],[4,"Yield"],[15,"usize"],[15,"bool"],[4,"Option"],[15,"str"],[3,"BroadcastContext"],[3,"Formatter"],[3,"Error"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"FnContext"],[3,"Configuration"],[8,"Error"],[3,"Box"],[3,"Demand"],[3,"CustomSpawn"],[3,"String"],[3,"TypeId"],[8,"Clone"],[8,"Send"],[3,"IntoIter"],[8,"Debug"],[6,"Result"],[8,"Ord"],[3,"IntoIter"],[8,"Sync"],[3,"Iter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[8,"Hash"],[8,"Eq"],[3,"Iter"],[3,"IntoIter"],[3,"IterMut"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[4,"Either"],[3,"Pin"],[3,"Chain"],[3,"Chunks"],[3,"Empty"],[8,"ParallelIterator"],[3,"Cloned"],[3,"Copied"],[8,"IndexedParallelIterator"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapIter"],[3,"Flatten"],[3,"FlattenIter"],[3,"Fold"],[3,"FoldWith"],[3,"FoldChunks"],[3,"FoldChunksWith"],[3,"Inspect"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"MinLen"],[3,"MaxLen"],[3,"Map"],[3,"MapWith"],[3,"MapInit"],[3,"MultiZip"],[3,"Once"],[3,"PanicFuse"],[3,"IterBridge"],[3,"Positions"],[3,"Repeat"],[3,"RepeatN"],[3,"Rev"],[3,"Skip"],[3,"SkipAny"],[3,"SkipAnyWhile"],[3,"Split"],[3,"StepBy"],[3,"Take"],[3,"TakeAny"],[3,"TakeAnyWhile"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Update"],[3,"WhileSome"],[3,"Zip"],[3,"ZipEq"],[4,"Ordering"],[8,"Consumer"],[8,"Iterator"],[8,"RangeBounds"],[3,"Context"],[4,"Poll"],[8,"ProducerCallback"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[15,"char"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"Chunks"],[3,"ChunksExact"],[3,"RChunks"],[3,"RChunksExact"],[3,"Iter"],[3,"Windows"],[3,"ChunksMut"],[3,"ChunksExactMut"],[3,"RChunksMut"],[3,"RChunksExactMut"],[3,"IterMut"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelDrainFull"],[8,"ParallelDrainRange"],[8,"FromParallelIterator"],[8,"ParallelBridge"],[8,"ParallelExtend"],[8,"Producer"],[8,"UnindexedProducer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"]]},\
"rayon_core":{"doc":"Rayon-core houses the core stable APIs of Rayon.","t":[3,3,13,3,13,3,3,3,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,5,11,11,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11],"n":["BroadcastContext","Configuration","Executed","FnContext","Idle","Scope","ScopeFifo","ThreadBuilder","ThreadPool","ThreadPoolBuildError","ThreadPoolBuilder","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadth_first","breadth_first","broadcast","broadcast","build","build","build_global","build_scoped","clone","clone_into","current_num_threads","current_num_threads","current_thread_has_pending_tasks","current_thread_has_pending_tasks","current_thread_index","current_thread_index","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","exit_handler","exit_handler","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","in_place_scope","in_place_scope","in_place_scope_fifo","in_place_scope_fifo","index","index","init","init","init","init","init","init","init","init","init","init","initialize","install","into","into","into","into","into","into","into","into","into","into","join","join","join_context","max_num_threads","migrated","name","new","new","new","num_threads","num_threads","num_threads","panic_handler","panic_handler","provide","run","scope","scope","scope_fifo","scope_fifo","source","spawn","spawn","spawn","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_broadcast","spawn_fifo","spawn_fifo","spawn_fifo","spawn_handler","stack_size","stack_size","stack_size","start_handler","start_handler","thread_name","thread_name","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","yield_local","yield_local","yield_now","yield_now"],"q":["rayon_cored":["Provides context to a closure called by <code>broadcast</code>.","Contains the rayon thread pool configuration. Use …","Work was found and executed.","Provides the calling context to a closure called by …","No available work was found.","Represents a fork-join scope which can be used to spawn …","Represents a fork-join scope which can be used to spawn …","Thread builder used for customization via …","Represents a user created thread-pool.","Error when initializing a thread pool.","Used to create a new <code>ThreadPool</code> or to configure the global …","Result of <code>yield_now()</code> or <code>yield_local()</code>.","","","","","","","","","","","","","","","","","","","","","<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute …","Deprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.","Executes <code>op</code> within every thread in the current threadpool. …","Executes <code>op</code> within every thread in the threadpool. Any …","Creates a new <code>ThreadPool</code> initialized using this …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Initializes the global thread pool. This initialization is …","Creates a scoped <code>ThreadPool</code> initialized using this …","","","Returns the number of threads in the current registry. If …","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread, indicates whether …","Returns true if the current worker thread currently has “…","If called from a Rayon worker thread, returns the index of …","If called from a Rayon worker thread in this thread-pool, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets a callback to be invoked on thread exit.","Deprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that spawns work into this thread-pool.","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that spawns work into this thread-pool in …","Our index amongst the broadcast threads (ranges from …","Gets the index of this thread in the pool, within …","","","","","","","","","","","Deprecated in favor of <code>ThreadPoolBuilder::build_global</code>.","Executes <code>op</code> within the threadpool. Any attempts to use <code>join</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Takes two closures and <em>potentially</em> runs them in parallel. …","Execute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return …","Identical to <code>join</code>, except that the closures have a …","Returns the maximum number of threads that Rayon supports …","Returns <code>true</code> if the closure was called from a different …","Gets the string that was specified by …","Deprecated in favor of <code>ThreadPoolBuilder::build</code>.","Creates and returns a valid rayon thread pool builder, but …","Creates and return a valid rayon thread pool …","The number of threads receiving the broadcast in the …","Sets the number of threads to be used in the rayon …","Deprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.","Normally, whenever Rayon catches a panic, it tries to …","Deprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.","","Executes the main loop for this thread. This will not …","Creates a “fork-join” scope <code>s</code> and invokes the closure …","Creates a scope that executes within this thread-pool. …","Creates a “fork-join” scope <code>s</code> with FIFO order, and …","Creates a scope that executes within this thread-pool. …","","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Spawns an asynchronous task on every thread in this …","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns a job into every thread of the fork-join scope <code>self</code>…","Spawns an asynchronous task on every thread in this …","Fires off a task into the Rayon threadpool in the “static…","Spawns a job into the fork-join scope <code>self</code>. This job will …","Spawns an asynchronous task in this thread-pool. This task …","Sets a custom function for spawning threads.","Gets the value that was specified by …","Sets the stack size of the worker threads","Deprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.","Sets a callback to be invoked on thread start.","Deprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.","Sets a closure which takes a thread index and returns the …","Deprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to local Rayon work.","Cooperatively yields execution to Rayon.","Cooperatively yields execution to Rayon."],"i":[0,0,9,0,9,0,0,0,0,0,0,0,14,17,18,19,4,1,9,5,2,20,14,17,18,19,4,1,9,5,2,20,1,2,0,4,1,2,1,1,9,9,0,4,0,4,0,4,1,2,14,17,18,19,4,1,9,5,2,20,14,17,18,19,4,1,9,5,2,20,5,14,17,18,19,4,4,1,9,5,2,20,9,1,2,14,17,18,19,4,1,9,5,5,2,20,14,17,18,19,4,1,9,5,2,20,0,4,0,4,14,17,14,17,18,19,4,1,9,5,2,20,0,4,14,17,18,19,4,1,9,5,2,20,0,4,0,0,20,17,4,1,2,14,1,2,1,2,5,17,0,4,0,4,5,0,18,4,0,18,19,4,0,19,4,1,17,1,2,1,2,1,2,9,5,14,17,18,19,4,1,9,5,2,20,14,17,18,19,4,1,9,5,2,20,14,17,18,19,4,1,9,5,2,20,0,4,0,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[[],3],[4,3],[1,[[6,[4,5]]]],[2,[[6,[4,[8,[7]]]]]],[1,[[6,[5]]]],[1,[[6,[5]]]],[9,9],[[]],[[],10],[4,10],[[],[[12,[11]]]],[4,[[12,[11]]]],[[],[[12,[10]]]],[4,[[12,[10]]]],[[],1],[[],2],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[5,13],[10],[10],[10],[10],[10],[4],[10],[10],[10],[10],[10],[[9,9],11],[1,1],[2,2],[[14,15],16],[[17,15],16],[[18,15],16],[[19,15],16],[[4,15],16],[[1,15],16],[[9,15],16],[[5,15],16],[[5,15],16],[[2,15],16],[[20,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[[]],[4],[14,10],[17,10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2,[[6,[[8,[7]]]]]],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[[]],[[],10],[20,11],[17,[[12,[13]]]],[2,[[6,[4,[8,[7]]]]]],[[],1],[[],2],[14,10],[[1,10],1],[[2,10],2],[1,1],[2,2],[21],[17],[[]],[4],[[]],[4],[5,[[12,[7]]]],[[]],[18],[4],[[]],[18],[19],[4],[[]],[19],[4],[1,[[1,[0]]]],[17,[[12,[10]]]],[[1,10],1],[[2,10],2],[1,1],[2,2],[1,1],[2,2],[[]],[[],22],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],[[12,[9]]]],[4,[[12,[9]]]],[[],[[12,[9]]]],[4,[[12,[9]]]]],"p":[[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"Vec"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[4,"Result"],[8,"Error"],[3,"Box"],[4,"Yield"],[15,"usize"],[15,"bool"],[4,"Option"],[15,"str"],[3,"BroadcastContext"],[3,"Formatter"],[6,"Result"],[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"FnContext"],[3,"Demand"],[3,"String"],[3,"TypeId"]]},\
"rtic_monotonic":{"doc":"Core abstractions of the Real-Time Interrupt-driven …","t":[18,16,16,8,10,11,11,10,11,10,10,10],"n":["DISABLE_INTERRUPT_ON_EMPTY_QUEUE","Duration","Instant","Monotonic","clear_compare_flag","disable_timer","enable_timer","now","on_interrupt","reset","set_compare","zero"],"q":["rtic_monotonic","","","","","","","","","","",""],"d":["This tells RTIC if it should disable the interrupt bound …","The type for duration, defining an duration of time.","The type for instant, defining an instant in time.","A monotonic clock / counter definition.","Clear the compare interrupt flag.","Optional. This is used to save power, this is called when …","Optional. This is used to save power, this is called when …","Get the current time.","Optional. Commonly used for performing housekeeping of a …","Optionally resets the counter to <em>zero</em> for a fixed baseline …","Set the compare value of the timer interrupt.","The time at time zero. Used by RTIC before the monotonic …"],"i":[1,1,1,0,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[8,"Monotonic"]]},\
"scoped_threadpool":{"doc":"This crate provides a stable, safe and scoped threadpool.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Pool","Scope","borrow","borrow","borrow_mut","borrow_mut","drop","drop","execute","from","from","into","into","join_all","new","scoped","thread_count","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["scoped_threadpool","","","","","","","","","","","","","","","","","","","","","",""],"d":["A threadpool that acts as a handle to a number of threads …","Handle to the scope during which the threadpool is …","","","","","","","Execute a job on the threadpool.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Blocks until all currently queued jobs have run to …","Construct a threadpool with the given number of threads. …","Borrows the pool and allows executing jobs on other …","Returns the number of threads inside this pool.","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,1,2,1,2,2,1,1,1,1,2,1,2,1,2],"f":[0,0,[[]],[[]],[[]],[[]],[1],[2],[2],[[]],[[]],[[]],[[]],[2],[3,1],[1],[1,3],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5]],"p":[[3,"Pool"],[3,"Scope"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":[4,3,8,11,11,11,11,14,11,11,11,11,11,11,11,5,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":["scopeguard","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,4,1,4,0,1,1,1,1,4,1,4,0,1,4,1,8,4,1,4,1,4,1,4,1],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[1],[1],[1],[[1,2],3],[[4,2],3],[[]],[[]],[[],[[1,[4]]]],[[]],[[]],[1],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],1]],"p":[[3,"ScopeGuard"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"],[8,"Strategy"]]},\
"sdl2":{"doc":"Getting started","t":[3,4,3,3,3,3,4,13,3,13,13,3,13,13,3,3,13,3,13,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,0,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,5,5,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,3,8,3,3,4,8,3,3,3,3,4,16,3,13,13,13,13,13,13,13,13,13,18,13,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,13,4,13,4,13,13,4,13,13,13,13,3,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,3,4,3,3,3,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,11,11,11,5,5,11,5,5,5,5,11,11,11,13,13,13,13,3,4,3,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,18,13,13,18,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,18,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,18,13,13,18,13,13,18,18,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,3,4,13,13,18,18,18,13,13,13,3,3,3,18,18,13,4,18,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,13,13,13,13,13,4,3,3,3,4,13,13,3,3,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,18,13,13,13,13,18,13,13,13,13,13,13,18,13,13,13,13,18,18,18,3,18,18,18,13,13,13,13,13,13,18,3,3,4,3,18,11,13,13,13,13,13,13,11,18,13,13,13,13,13,13,18,18,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,3,16,3,13,13,13,13,13,13,13,13,13,13,13,13,13,8,3,3,3,13,13,13,13,13,13,6,13,4,3,4,3,3,4,4,4,13,13,13,13,6,13,13,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,11,11,11,11,11,11,11,11,11,6,6,5,5,5,5,13,4,13,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,11,11,11,11,11,5,13,13,13,13,3,3,4,3,13,4,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,6,6,13,3,4,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AudioSubsystem","Error","EventPump","EventSubsystem","GameControllerSubsystem","HapticSubsystem","IntegerOrSdlError","IntegerOverflows","JoystickSubsystem","NoMemError","ReadError","Sdl","SdlError","SeekError","SensorSubsystem","TimerSubsystem","UnsupportedError","VideoSubsystem","WriteError","add_event_watch","add_mapping","add_timer","audio","audio","audio_capture_device_name","audio_playback_device_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_error","clipboard","clipboard","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closest_display_mode","controller","cpuinfo","current_audio_driver","current_display_mode","current_video_driver","delay","description","description","desktop_display_mode","device_guid","disable_event","disable_screen_saver","display_bounds","display_dpi","display_mode","display_name","display_orientation","display_usable_bounds","drop","enable_event","enable_screen_saver","eq","eq","event","event","event_pump","event_sender","event_state","event_state","filesystem","flush_event","flush_events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","game_controller","get_error","get_platform","gl_attr","gl_extension_supported","gl_get_current_window_id","gl_get_proc_address","gl_get_swap_interval","gl_load_library","gl_load_library_default","gl_release_current_context","gl_set_swap_interval","gl_unload_library","haptic","haptic","hash","hint","init","into","into","into","into","into","into","into","into","into","into","into","into","is_event_enabled","is_game_controller","is_screen_saver_enabled","joystick","joystick","keyboard","keyboard","keyboard_state","load_mappings","load_mappings_from_read","load_mappings_from_rw","log","mapping_for_guid","messagebox","mouse","mouse","mouse_state","name_for_index","name_for_index","num_audio_capture_devices","num_audio_playback_devices","num_display_modes","num_joysticks","num_joysticks","num_video_displays","open","open","open_capture","open_from_joystick_id","open_playback","open_queue","peek_events","performance_counter","performance_frequency","pixels","poll_event","poll_iter","provide","provide","pump_events","push_custom_event","push_event","rect","register_custom_event","register_event","register_events","relative_mouse_state","render","rwops","sdl","sdl","sdl","sdl","sdl","sdl","sdl","sdl","sensor","set_error","set_error_from_code","set_event_state","set_event_state","surface","text_input","ticks","timer","timer","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","touch","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","url","version","video","video","vulkan_get_proc_address_function","vulkan_load_library","vulkan_load_library_default","vulkan_unload_library","wait_event","wait_event_timeout","wait_iter","wait_timeout_iter","window","AudioCVT","AudioCallback","AudioDevice","AudioDeviceLockGuard","AudioFormat","AudioFormatNum","AudioQueue","AudioSpec","AudioSpecDesired","AudioSpecWAV","AudioStatus","Channel","DriverIterator","F32LSB","F32MSB","Paused","Playing","S16LSB","S16MSB","S32LSB","S32MSB","S8","SILENCE","Stopped","U16LSB","U16MSB","U8","audio_format","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","callback","capacity","channels","channels","channels","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_and_get_callback","convert","deref","deref_mut","drivers","drop","drop","eq","eq","eq","f32_sys","fmt","fmt","fmt","format","format","freq","freq","freq","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_iter","is_conversion_needed","load_wav","load_wav_rw","lock","new","next","open_capture","open_playback","open_queue","pause","pause","queue","queue_audio","resume","resume","s16_sys","s32_sys","samples","samples","silence","size","size","size_hint","spec","spec","status","status","subsystem","subsystem","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u16_sys","ClipboardUtil","borrow","borrow_mut","clipboard_text","from","has_clipboard_text","into","set_clipboard_text","try_from","try_into","type_id","A","AddMappingError","Added","Axis","B","Back","Button","DPadDown","DPadLeft","DPadRight","DPadUp","GameController","Guide","InvalidFilePath","InvalidMapping","LeftShoulder","LeftStick","LeftX","LeftY","MappingStatus","Misc1","Paddle1","Paddle2","Paddle3","Paddle4","ReadError","RightShoulder","RightStick","RightX","RightY","SdlError","Start","Touchpad","TriggerLeft","TriggerRight","Updated","X","Y","attached","axis","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","description","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ll","from_ll","from_string","from_string","hash","hash","hash","instance_id","into","into","into","into","into","mapping","name","provide","set_rumble","string","string","subsystem","to_ll","to_ll","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","CACHELINESIZE","cpu_cache_line_size","cpu_count","has_3d_now","has_alti_vec","has_avx","has_avx2","has_avx512f","has_mmx","has_rdtsc","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","system_ram","AppDidEnterBackground","AppDidEnterBackground","AppDidEnterForeground","AppDidEnterForeground","AppLowMemory","AppLowMemory","AppTerminating","AppTerminating","AppWillEnterBackground","AppWillEnterBackground","AppWillEnterForeground","AppWillEnterForeground","AudioDeviceAdded","AudioDeviceAdded","AudioDeviceRemoved","AudioDeviceRemoved","ClipboardUpdate","ClipboardUpdate","Close","Connected","ControllerAxisMotion","ControllerAxisMotion","ControllerButtonDown","ControllerButtonDown","ControllerButtonUp","ControllerButtonUp","ControllerDeviceAdded","ControllerDeviceAdded","ControllerDeviceRemapped","ControllerDeviceRemapped","ControllerDeviceRemoved","ControllerDeviceRemoved","Disconnected","Display","Display","DisplayEvent","DollarGesture","DollarGesture","DollarRecord","DollarRecord","DropBegin","DropBegin","DropComplete","DropComplete","DropFile","DropFile","DropText","DropText","Enter","Event","EventPollIterator","EventSender","EventType","EventWaitIterator","EventWaitTimeoutIterator","EventWatch","EventWatchCallback","Exposed","FingerDown","FingerDown","FingerMotion","FingerMotion","FingerUp","FingerUp","First","FocusGained","FocusLost","Hidden","HitTest","JoyAxisMotion","JoyAxisMotion","JoyBallMotion","JoyBallMotion","JoyButtonDown","JoyButtonDown","JoyButtonUp","JoyButtonUp","JoyDeviceAdded","JoyDeviceAdded","JoyDeviceRemoved","JoyDeviceRemoved","JoyHatMotion","JoyHatMotion","KeyDown","KeyDown","KeyUp","KeyUp","Last","Leave","Maximized","Minimized","MouseButtonDown","MouseButtonDown","MouseButtonUp","MouseButtonUp","MouseMotion","MouseMotion","MouseWheel","MouseWheel","Moved","MultiGesture","MultiGesture","None","None","Orientation","Quit","Quit","RenderDeviceReset","RenderDeviceReset","RenderTargetsReset","RenderTargetsReset","Resized","Restored","Shown","SizeChanged","TakeFocus","TextEditing","TextEditing","TextInput","TextInput","Unknown","User","User","Window","Window","WindowEvent","activate","activated","as_user_event_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deactivate","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_timestamp","get_window_id","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_audio","is_controller","is_dollar","is_drop","is_finger","is_joy","is_keyboard","is_mouse","is_render","is_same_kind_as","is_same_kind_as","is_same_kind_as","is_text","is_unknown","is_user","is_user_event","is_window","next","next","next","push_custom_event","push_event","set_activated","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","axis","axis_idx","ball_idx","button","button","button_idx","button_idx","clicks","clicks","code","d_dist","d_theta","data1","data2","direction","display_event","display_index","dx","dx","dx","dy","dy","dy","error","error","filename","filename","finger_id","finger_id","finger_id","gesture_id","gesture_id","hat_idx","iscapture","iscapture","keycode","keycode","keymod","keymod","length","mouse_btn","mouse_btn","mousestate","num_fingers","num_fingers","num_fingers","pressure","pressure","pressure","repeat","repeat","scancode","scancode","start","state","text","text","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","touch_id","touch_id","touch_id","touch_id","touch_id","touch_id","type_","type_","value","value","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","win_event","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","window_id","x","x","x","x","x","x","x","x","x","x","xrel","xrel","y","y","y","y","y","y","y","y","y","y","yrel","yrel","InvalidApplicationName","InvalidOrganizationName","PrefPathError","SdlError","base_path","borrow","borrow_mut","clone","clone_into","description","fmt","fmt","from","into","pref_path","provide","to_owned","to_string","try_from","try_into","type_id","Haptic","borrow","borrow_mut","drop","from","into","rumble_play","rumble_stop","subsystem","try_from","try_into","type_id","Default","Hint","Normal","Override","borrow","borrow_mut","from","get","get_video_minimize_on_focus_loss","into","set","set_video_minimize_on_focus_loss","set_video_minimize_on_focus_loss_with_priority","set_with_priority","try_from","try_into","type_id","Centered","Down","Empty","Full","Guid","HatState","Joystick","Left","LeftDown","LeftUp","Low","Medium","PowerLevel","Right","RightDown","RightUp","Unknown","Up","Wired","attached","axis","ball","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","clone","clone","clone","clone_into","clone_into","clone_into","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_ll","from_raw","from_string","guid","hash","hash","hat","instance_id","into","into","into","into","is_zero","name","num_axes","num_balls","num_buttons","num_hats","power_level","raw","set_rumble","string","subsystem","to_ll","to_owned","to_owned","to_owned","to_raw","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","A","A","AcBack","AcBack","AcBookmarks","AcBookmarks","AcForward","AcForward","AcHome","AcHome","AcRefresh","AcRefresh","AcSearch","AcSearch","AcStop","AcStop","Again","Again","AltErase","AltErase","Ampersand","Apostrophe","App1","App2","Application","Application","Asterisk","At","AudioMute","AudioMute","AudioNext","AudioNext","AudioPlay","AudioPlay","AudioPrev","AudioPrev","AudioStop","AudioStop","B","B","Backquote","Backslash","Backslash","Backspace","Backspace","BrightnessDown","BrightnessDown","BrightnessUp","BrightnessUp","C","C","CAPSMOD","Calculator","Calculator","Cancel","Cancel","CapsLock","CapsLock","Caret","Clear","Clear","ClearAgain","ClearAgain","Colon","Comma","Comma","Computer","Computer","Copy","Copy","CrSel","CrSel","CurrencySubUnit","CurrencySubUnit","CurrencyUnit","CurrencyUnit","Cut","Cut","D","D","DecimalSeparator","DecimalSeparator","Delete","Delete","DisplaySwitch","DisplaySwitch","Dollar","Down","Down","E","E","Eject","Eject","End","End","Equals","Equals","Escape","Escape","ExSel","ExSel","Exclaim","Execute","Execute","F","F","F1","F1","F10","F10","F11","F11","F12","F12","F13","F13","F14","F14","F15","F15","F16","F16","F17","F17","F18","F18","F19","F19","F2","F2","F20","F20","F21","F21","F22","F22","F23","F23","F24","F24","F3","F3","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","Find","Find","G","G","Grave","Greater","H","H","Hash","Help","Help","Home","Home","I","I","Insert","Insert","International1","International2","International3","International4","International5","International6","International7","International8","International9","J","J","K","K","KbdIllumDown","KbdIllumDown","KbdIllumToggle","KbdIllumToggle","KbdIllumUp","KbdIllumUp","KeyboardState","KeyboardUtil","Keycode","Kp0","Kp0","Kp00","Kp00","Kp000","Kp000","Kp1","Kp1","Kp2","Kp2","Kp3","Kp3","Kp4","Kp4","Kp5","Kp5","Kp6","Kp6","Kp7","Kp7","Kp8","Kp8","Kp9","Kp9","KpA","KpA","KpAmpersand","KpAmpersand","KpAt","KpAt","KpB","KpB","KpBackspace","KpBackspace","KpBinary","KpBinary","KpC","KpC","KpClear","KpClear","KpClearEntry","KpClearEntry","KpColon","KpColon","KpComma","KpComma","KpD","KpD","KpDblAmpersand","KpDblAmpersand","KpDblVerticalBar","KpDblVerticalBar","KpDecimal","KpDecimal","KpDivide","KpDivide","KpE","KpE","KpEnter","KpEnter","KpEquals","KpEquals","KpEqualsAS400","KpEqualsAS400","KpExclam","KpExclam","KpF","KpF","KpGreater","KpGreater","KpHash","KpHash","KpHexadecimal","KpHexadecimal","KpLeftBrace","KpLeftBrace","KpLeftParen","KpLeftParen","KpLess","KpLess","KpMemAdd","KpMemAdd","KpMemClear","KpMemClear","KpMemDivide","KpMemDivide","KpMemMultiply","KpMemMultiply","KpMemRecall","KpMemRecall","KpMemStore","KpMemStore","KpMemSubtract","KpMemSubtract","KpMinus","KpMinus","KpMultiply","KpMultiply","KpOctal","KpOctal","KpPercent","KpPercent","KpPeriod","KpPeriod","KpPlus","KpPlus","KpPlusMinus","KpPlusMinus","KpPower","KpPower","KpRightBrace","KpRightBrace","KpRightParen","KpRightParen","KpSpace","KpSpace","KpTab","KpTab","KpVerticalBar","KpVerticalBar","KpXor","KpXor","L","L","LALTMOD","LAlt","LAlt","LCTRLMOD","LCtrl","LCtrl","LGUIMOD","LGui","LGui","LSHIFTMOD","LShift","LShift","Lang1","Lang2","Lang3","Lang4","Lang5","Lang6","Lang7","Lang8","Lang9","Left","Left","LeftBracket","LeftBracket","LeftParen","Less","M","M","MODEMOD","Mail","Mail","MediaSelect","MediaSelect","Menu","Menu","Minus","Minus","Mod","Mode","Mode","Mute","Mute","N","N","NOMOD","NUMMOD","NonUsBackslash","NonUsHash","Num","Num0","Num0","Num1","Num1","Num2","Num2","Num3","Num3","Num4","Num4","Num5","Num5","Num6","Num6","Num7","Num7","Num8","Num8","Num9","Num9","NumLockClear","NumLockClear","O","O","Oper","Oper","Out","Out","P","P","PageDown","PageDown","PageUp","PageUp","Paste","Paste","Pause","Pause","Percent","Period","Period","Plus","Power","Power","PressedScancodeIterator","PrintScreen","PrintScreen","Prior","Prior","Q","Q","Question","Quote","Quotedbl","R","R","RALTMOD","RAlt","RAlt","RCTRLMOD","RCtrl","RCtrl","RESERVEDMOD","RGUIMOD","RGui","RGui","RSHIFTMOD","RShift","RShift","Return","Return","Return2","Return2","Right","Right","RightBracket","RightBracket","RightParen","S","S","Scancode","ScancodeIterator","ScrollLock","ScrollLock","Select","Select","Semicolon","Semicolon","Separator","Separator","Slash","Slash","Sleep","Sleep","Space","Space","Stop","Stop","SysReq","Sysreq","T","T","Tab","Tab","TextInputUtil","ThousandsSeparator","ThousandsSeparator","U","U","Underscore","Undo","Undo","Up","Up","V","V","VolumeDown","VolumeDown","VolumeUp","VolumeUp","W","W","Www","Www","X","X","Y","Y","Z","Z","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused_window_id","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_i32","from_i32","from_iter","from_keycode","from_name","from_name","from_scancode","has_screen_keyboard_support","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into_iter","into_iter","is_active","is_all","is_empty","is_scancode_pressed","is_screen_keyboard_shown","mod_state","name","name","new","next","next","not","partial_cmp","pressed_scancodes","remove","scancodes","set","set_mod_state","set_rect","start","stop","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","Application","Assert","Audio","Category","Critical","Custom","Debug","Error","Error","Info","Input","Priority","Render","System","Test","Unknown","Verbose","Video","Warn","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","from","from","hash","hash","into","into","log","set_output_function","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ButtonData","ClickedButton","CloseButton","CustomButton","ERROR","ESCAPEKEY_DEFAULT","INFORMATION","InvalidButton","InvalidMessage","InvalidTitle","MessageBoxButtonFlag","MessageBoxColorScheme","MessageBoxFlag","NOTHING","RETURNKEY_DEFAULT","SdlError","ShowMessageError","WARNING","all","all","background","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button_background","button_border","button_id","button_selected","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","description","difference","difference","empty","empty","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","not","not","partial_cmp","partial_cmp","provide","remove","remove","set","set","show_message_box","show_simple_message_box","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","text","text","to_owned","to_owned","to_owned","to_string","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","Arrow","Crosshair","Cursor","Flipped","Hand","IBeam","Left","Middle","MouseButton","MouseButtonIterator","MouseState","MouseUtil","MouseWheelDirection","No","Normal","PressedMouseButtonIterator","RelativeMouseState","Right","SizeAll","SizeNESW","SizeNS","SizeNWSE","SizeWE","SystemCursor","Unknown","Unknown","Wait","WaitArrow","X1","X2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","focused_window_id","from","from","from","from","from","from","from","from","from","from_ll","from_ll","from_sdl_state","from_sdl_state","from_surface","from_system","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_cursor_showing","is_mouse_button_pressed","is_mouse_button_pressed","left","left","middle","middle","mouse_buttons","mouse_buttons","new","new","new","next","next","pressed_mouse_buttons","pressed_mouse_buttons","relative_mouse_mode","right","right","set","set_relative_mouse_mode","show_cursor","to_ll","to_owned","to_owned","to_owned","to_owned","to_owned","to_sdl_state","to_sdl_state","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warp_mouse_in_window","x","x","x1","x1","x2","x2","y","y","ABGR1555","ABGR32","ABGR4444","ABGR8888","ARGB1555","ARGB2101010","ARGB32","ARGB4444","ARGB8888","BGR24","BGR555","BGR565","BGR888","BGRA32","BGRA4444","BGRA5551","BGRA8888","BGRX8888","BLACK","BLUE","CYAN","Color","GRAY","GREEN","GREY","IYUV","Index1LSB","Index1MSB","Index4LSB","Index4MSB","Index8","MAGENTA","Palette","PixelFormat","PixelFormatEnum","PixelMasks","RED","RGB","RGB24","RGB332","RGB444","RGB555","RGB565","RGB888","RGBA","RGBA32","RGBA4444","RGBA5551","RGBA8888","RGBX8888","UYVY","Unknown","WHITE","YELLOW","YUY2","YV12","YVYU","a","amask","b","bmask","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","byte_size_from_pitch_and_height","byte_size_of_pixels","byte_size_per_pixel","clone","clone","clone_into","clone_into","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ll","from_masks","from_u32","g","gmask","hash","hash","into","into","into","into","into","into","into_masks","invert","is_empty","len","new","r","raw","raw","rgb","rgba","rmask","supports_alpha","to_owned","to_owned","to_u32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_colors","Point","Rect","add","add_assign","as_mut","as_mut","as_ref","as_ref","bitand","bitor","borrow","borrow","borrow_mut","borrow_mut","bottom","bottom_left","bottom_right","center","center_on","clone","clone","clone_into","clone_into","contains_point","contains_rect","deref","deref","deref_mut","deref_mut","div","div_assign","eq","eq","fmt","fmt","from","from","from","from","from","from","from_center","from_enclose_points","from_ll","from_ll","has_intersection","hash","hash","height","intersect_line","intersection","into","into","into","into","into","into","left","max_int_value","min_int_value","mul","mul_assign","neg","new","new","offset","offset","raw","raw","raw_mut","raw_slice","raw_slice","reposition","resize","right","scale","set_bottom","set_height","set_right","set_width","set_x","set_y","size","sub","sub_assign","sum","to_owned","to_owned","top","top_left","top_right","try_from","try_from","try_into","try_into","type_id","type_id","union","width","x","x","y","y","Add","Blend","BlendMode","Canvas","CanvasBuilder","Context","DriverIterator","HeightMustBeMultipleOfTwoForFormat","HeightMustBeMultipleOfTwoForFormat","HeightOverflows","Invalid","InvalidPlaneLength","Mod","Mul","None","NotSupported","PitchMustBeMultipleOfTwoForFormat","PitchOverflows","PitchOverflows","RectNotInsideTexture","RenderTarget","RendererContext","RendererInfo","SdlError","SdlError","SdlError","SdlError","SdlError","Static","Streaming","SurfaceCanvas","Target","TargetRenderError","Texture","TextureAccess","TextureCreator","TextureQuery","TextureValueError","UpdateTextureError","UpdateTextureYUVError","WidthMustBeMultipleOfTwoForFormat","WidthMustBeMultipleOfTwoForFormat","WidthMustBeMultipleOfTwoForFormat","WidthOverflows","WindowCanvas","XMustBeMultipleOfTwoForFormat","XMustBeMultipleOfTwoForFormat","YMustBeMultipleOfTwoForFormat","YMustBeMultipleOfTwoForFormat","accelerated","access","alpha_mod","blend_mode","blend_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clear","clip_rect","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_mod","copy","copy_ex","create_texture","create_texture_from_surface","create_texture_static","create_texture_streaming","create_texture_target","default_pixel_format","default_pixel_format","deref","description","description","description","description","description","draw_color","draw_line","draw_lines","draw_point","draw_points","draw_rect","draw_rects","drivers","drop","drop","eq","eq","eq","eq","fill_rect","fill_rects","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ll","from_ll","from_surface","from_surface","gl_bind_texture","gl_unbind_texture","gl_with_bind","hash","hash","hash","hash","height","index","info","integer_scale","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_surface","into_window","logical_size","max_texture_height","max_texture_width","name","new","next","output_size","present","present_vsync","provide","provide","provide","provide","provide","query","raw","raw","raw","raw","raw_create_texture","read_pixels","render_flush","render_target_supported","scale","set_alpha_mod","set_blend_mode","set_blend_mode","set_clip_rect","set_color_mod","set_draw_color","set_integer_scale","set_logical_size","set_scale","set_viewport","size_hint","software","surface","surface_mut","target_texture","texture_creator","texture_creator","texture_formats","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update_yuv","viewport","width","window","window_mut","with_lock","with_multiple_texture_canvas","with_texture_canvas","height","length","pitch","plane","plane","value","RWops","borrow","borrow_mut","drop","flush","from","from_bytes","from_bytes_mut","from_file","from_ll","from_read","into","is_empty","len","raw","read","seek","try_from","try_into","type_id","write","Surface","SurfaceContext","SurfaceRef","alpha_mod","as_mut","as_ref","as_ref","as_texture","blend_mode","blit","blit_scaled","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clip_rect","color_key","color_mod","context","convert","convert_format","deref","deref_mut","disable_RLE","drop","enable_RLE","fill_rect","fill_rects","from","from","from","from_data","from_data_pixelmasks","from_ll","from_ll","from_ll_mut","from_pixelmasks","height","into","into","into","into_canvas","load_bmp","load_bmp_rw","lower_blit","lower_blit_scaled","must_lock","new","pitch","pixel_format","pixel_format_enum","raw","rect","save_bmp","save_bmp_rw","set_alpha_mod","set_blend_mode","set_clip_rect","set_color_key","set_color_mod","set_palette","size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","with_lock","with_lock_mut","without_lock","without_lock_mut","Timer","TimerCallback","borrow","borrow_mut","drop","from","into","into_inner","try_from","try_into","type_id","Finger","TouchDevice","num_touch_devices","num_touch_fingers","touch_device","touch_finger","InvalidUrl","OpenUrlError","SdlError","borrow","borrow_mut","clone","clone_into","description","fmt","fmt","from","into","open_url","provide","to_owned","to_string","try_from","try_into","type_id","Version","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from_ll","hash","into","major","minor","patch","revision","revision_number","to_owned","to_string","try_from","try_into","type_id","version","Centered","Compatibility","Core","Desktop","DisplayMode","DriverIterator","FullscreenType","GLContext","GLES","GLProfile","HeightOverflows","Immediate","InvalidTitle","Landscape","LandscapeFlipped","LateSwapTearing","Off","Orientation","Portrait","PortraitFlipped","Positioned","SdlError","SwapInterval","True","Undefined","Unknown","Unknown","VSync","VkInstance","VkSurfaceKHR","WidthOverflows","Window","WindowBuildError","WindowBuilder","WindowContext","WindowPos","WindowSurfaceRef","allow_highdpi","border_size","borderless","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brightness","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","deref","deref_mut","description","display_index","display_mode","drawable_size","drivers","drop","drop","eq","eq","eq","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ll","from_ll","from_ll","from_ll","from_ref","from_window_flags","fullscreen","fullscreen_desktop","fullscreen_state","gamma_ramp","gl_attr","gl_create_context","gl_get_current_context","gl_make_current","gl_set_context_to_current","gl_swap_window","grab","h","hash","hash","hash","hash","hash","hash","hidden","hide","id","input_grabbed","into","into","into","into","into","into","into","into","into","into","into","into","into","into_canvas","into_iter","is_current","maximize","maximized","maximum_size","minimize","minimized","minimum_size","new","new","next","opacity","opengl","position","position","position_centered","provide","raise","raw","raw","refresh_rate","resizable","restore","set_bordered","set_brightness","set_display_mode","set_fullscreen","set_gamma_ramp","set_grab","set_icon","set_maximum_size","set_minimum_size","set_opacity","set_position","set_size","set_title","set_window_flags","show","size","size_hint","subsystem","surface","title","to_ll","to_ll","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_window","update_window_rects","vulkan","vulkan_create_surface","vulkan_drawable_size","vulkan_instance_extensions","w","window_flags","window_flags","window_pixel_format","ContextFlags","ContextFlagsBuilder","GLAttr","accelerated_visual","accum_alpha_size","accum_blue_size","accum_green_size","accum_red_size","alpha_size","blue_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_size","context_flags","context_major_version","context_minor_version","context_no_error","context_profile","context_version","debug","depth_size","double_buffer","forward_compatible","framebuffer_srgb_compatible","from","from","from","green_size","has_debug","has_forward_compatible","has_reset_isolation","has_robust_access","into","into","into","multisample_buffers","multisample_samples","red_size","reset_isolation","robust_access","set","set_accelerated_visual","set_accum_alpha_size","set_accum_blue_size","set_accum_green_size","set_accum_red_size","set_alpha_size","set_blue_size","set_buffer_size","set_context_flags","set_context_major_version","set_context_minor_version","set_context_no_error","set_context_profile","set_context_version","set_depth_size","set_double_buffer","set_framebuffer_srgb_compatible","set_green_size","set_multisample_buffers","set_multisample_samples","set_red_size","set_share_with_current_context","set_stencil_size","set_stereo","share_with_current_context","stencil_size","stereo","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["sdlsdl2::audiosdl2::clipboard","","","","","","","","","","","sdl2::controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::cpuinfo","","","","","","","","","","","","","","","","sdl2::eventsdl2::event::Eventsdl2::filesystem","","","","","","","","","","","","","","","","","","","","","sdl2::haptic","","","","","","","","","","","","sdl2::hint","","","","","","","","","","","","","","","","","sdl2::joystick","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::keyboardsdl2::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::messageboxsdl2::mousesdl2::pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::rect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::rendersdl2::render::UpdateTextureYUVError","","","","","","sdl2::rwops","","","","","","","","","","","","","","","","","","","","","sdl2::surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","sdl2::timer","","","","","","","","","","","sdl2::touch","","","","","","sdl2::url","","","","","","","","","","","","","","","","","","","sdl2::version","","","","","","","","","","","","","","","","","","","","","","","sdl2::videosdl2::video::gl_attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A thread-safe type that encapsulates SDL event-pumping …","","","","A given integer was so big that its representation as a C …","","","","","The SDL context type. Initialize with <code>sdl2::init()</code>.","","","","","","","","Create an event watcher which is called every time an …","Add a new controller input mapping from a mapping string.","Constructs a new timer using the boxed closure <code>callback</code>.","Audio Functions","Initializes the audio subsystem.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sleeps the current thread for the specified amount of …","","","","Get the GUID for the joystick at index <code>joystick_index</code>","Disable an event type. Returns if the event type was …","","","Return a triplet <code>(ddpi, hdpi, vdpi)</code> containing the …","","Get the name of the display at the index <code>display_name</code>.","Return orientation of a display or Unknown if orientation …","","","Enable an event type. Returns if the event type was …","","","","Event Handling","Initializes the event subsystem.","Obtains the SDL event pump.","Create an event sender that can be sent to other threads.","Return <code>true</code> if controller events are processed.","Return <code>true</code> if joystick events are processed.","","Removes all events in the event queue that match the …","Removes all events in the event queue that match the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the game controller subsystem.","","Get platform name","Obtains access to the OpenGL window attributes.","","","Gets the pointer to the named OpenGL function.","","Loads the OpenGL library using a platform-dependent OpenGL …","Loads the default OpenGL library.","Releases the thread’s current OpenGL context, i.e. sets …","","Unloads the current OpenGL library.","Haptic Functions","Initializes the haptic subsystem.","","","Initializes the SDL library. This must be called before …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Query if an event type is enabled.","Return true if the joystick at index <code>joystick_index</code> is a …","","","Initializes the joystick subsystem.","","","","Load controller input mappings from a file.","Load controller input mappings from a <code>Read</code> object.","Load controller input mappings from an SDL <code>RWops</code> object.","","","","","","","Return the name of the controller at index <code>joystick_index</code>.","Return the name of the joystick at index <code>joystick_index</code>.","","","","Retrieve the total number of attached joysticks <em>and</em> …","Retrieve the total number of attached joysticks <em>and</em> …","","Attempt to open the controller at index <code>joystick_index</code> and …","Attempt to open the joystick at index <code>joystick_index</code> and …","Opens a new audio device for capture (given the desired …","Attempt to open the joystick at index <code>joystick_index</code> and …","Opens a new audio device given the desired parameters and …","Opens a new audio device which uses queueing rather than …","Reads the events at the front of the event queue, until …","","","","Polls for currently pending events.","Returns a polling iterator that calls <code>poll_event()</code>. The …","","","Pumps the event loop, gathering events from the input …","Push a custom event","Pushes an event to the event queue.","Rectangles and points.","Register a custom event","Register a custom SDL event.","Registers custom SDL events.","","2D accelerated rendering","","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Obtain an SDL context.","Initializes the game controller subsystem.","","","If state is <code>true</code> controller events are processed, otherwise","If state is <code>true</code> joystick events are processed, otherwise …","","","Gets the number of milliseconds elapsed since the timer …","","Initializes the timer subsystem.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Force controller update when not using the event loop","Force joystick update when not using the event loop","Opening URLs in default system handlers","Querying SDL Version","","Initializes the video subsystem.","Gets the pointer to the <code>vkGetInstanceProcAddr</code> Vulkan …","Loads the Vulkan library using a platform-dependent Vulkan …","Loads the default Vulkan library.","Unloads the current Vulkan library.","Waits indefinitely for the next available event.","Waits until the specified timeout (in milliseconds) for …","Returns a waiting iterator that calls <code>wait_event()</code>.","Returns a waiting iterator that calls <code>wait_event_timeout()</code>.","Initializes a new <code>WindowBuilder</code>; a convenience method that …","","","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used by …","Similar to <code>std::sync::MutexGuard</code>, but for use with …","","A phantom type for retrieving the <code>SDL_AudioFormat</code> of a …","Wraps <code>SDL_AudioDeviceID</code> and owns the callback data used by …","","","","","","","32-bit floating point samples, little-endian","32-bit floating point samples, big-endian","","","Signed 16-bit samples, little-endian","Signed 16-bit samples, big-endian","Signed 32-bit samples, little-endian","Signed 32-bit samples, big-endian","Signed 8-bit samples","The appropriately typed silence value for the audio format …","","Unsigned 16-bit samples, little-endian","Unsigned 16-bit samples, big-endian","Unsigned 8-bit samples","","","","","","","","","","","","","","","","","","","","","","","","Gets the buffer capacity that can contain both the …","","Number of separate audio channels. Set to None for the …","","Clears all data from the current audio queue.","","","","","","","","","","","","","Closes the audio device and saves the callback data from …","Convert audio data to a desired audio format.","","","Gets an iterator of all audio drivers compiled into the …","","","","","","32-bit floating point samples, native endian","","","","","","","DSP frequency (samples per second). Set to None for the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if any conversion is needed. i.e. if the buffer …","Loads a WAVE from the file path.","Loads a WAVE from the data source.","Locks the audio device using <code>SDL_LockAudioDevice</code>.","","","Opens a new audio device for capture (given the desired …","Opens a new audio device for playback (given the desired …","Opens a new audio device given the desired parameters and …","Pauses playback of the audio device.","Pauses playback of the audio device.","Adds data to the audio queue.","Adds data to the audio queue.","Starts playback of the audio device.","Starts playback of the audio device.","Signed 16-bit samples, native endian","Signed 32-bit samples, native endian","Audio buffer size in samples (power of 2). Set to None for …","","The silence value calculated by SDL2. Note that it’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsigned 16-bit samples, native endian","Clipboard utility functions. Access with …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Wrapper around the <code>SDL_GameController</code> object","","","","","","","","Possible return values for <code>add_mapping</code>","","","","","","","","","","","","","","","","","","","Return true if the controller has been opened and currently","Get the position of the given <code>axis</code>","","","","","","","","","","","Returns <code>true</code> if <code>button</code> is pressed.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Return the Axis from a string description in the same …","Return the Button from a string description in the same …","","","","Return the joystick instance id of this controller","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a String describing the controller’s button and …","Return the name of the controller or an empty string if no …","","Set the rumble motors to their specified intensities, if …","Return a string for a given axis in the same format using …","Return a string for a given button in the same format …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum of display events.","","","","","","","","","","","","","","Different event types.","An iterator that calls <code>EventPump::poll_event()</code>.","A sendible type that can push events to the event queue.","Types of events that can be delivered.","An iterator that calls <code>EventPump::wait_event()</code>.","An iterator that calls <code>EventPump::wait_event_timeout()</code>.","An handler for the event watch callback. One must bind …","A callback trait for [<code>EventSubsystem::add_event_watch</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enum of window events.","Activates the event watch. Does nothing if it is already …","Returns if the event watch is activated.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deactivates the event watch. Does nothing if it is already …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the <code>timestamp</code> field of the event.","Returns the <code>window_id</code> field of the event if it’s present …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if this is an audio event.","Returns <code>true</code> if this is a controller event.","Returns <code>true</code> if this is a dollar event.","Returns <code>true</code> if this is a drop event.","Returns <code>true</code> if this is a finger event.","Returns <code>true</code> if this is a joy event.","Returns <code>true</code> if this is a keyboard event.","Returns <code>true</code> if this is a mouse event.","Returns <code>true</code> if this is a render event.","","","Returns <code>true</code> if they are the same “kind” of events.","Returns <code>true</code> if this is a text event.","Returns <code>true</code> if this is an unknown event.","Returns <code>true</code> if this is a user event.","","Returns <code>true</code> if this is a window event.","","","","Push a custom event","Pushes an event to the event queue.","Set the activation state of the event watch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The joystick’s <code>id</code>","The joystick’s <code>id</code>","The joystick’s <code>id</code>","The joystick’s <code>id</code>","The joystick’s <code>id</code>","The newly added joystick’s <code>joystick_index</code>","The joystick’s <code>id</code>","The controller’s joystick <code>id</code>","The controller’s joystick <code>id</code>","The controller’s joystick <code>id</code>","The newly added controller’s <code>joystick_index</code>","The controller’s joystick <code>id</code>","The controller’s joystick <code>id</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return the preferred directory for the application to …","","","","","","","Wrapper around the <code>SDL_Haptic</code> object","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Run a simple rumble effect on the haptic device.","Stop the simple rumble on the haptic device.","","","","","","","","","","","Returns the argument unchanged.","","A hint that specifies whether a fullscreen Window will be …","Calls <code>U::from(self)</code>.","","A hint that specifies whether a fullscreen Window will be …","A hint that specifies whether a fullscreen Window will be …","","","","","","","","","Wrapper around a <code>SDL_JoystickGUID</code>, a globally unique …","This is represented in SDL2 as a bitfield but obviously …","Wrapper around the <code>SDL_Joystick</code> object","","","","","","","","","","","","","Return true if the joystick has been opened and currently …","Gets the position of the given <code>axis</code>.","Return a pair <code>(dx, dy)</code> containing the difference in axis …","","","","","","","","","Return <code>Ok(true)</code> if <code>button</code> is pressed.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a GUID from a string representation.","Retrieve the joystick’s GUID","","","Return the position of <code>hat</code> for this joystick","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return <code>true</code> if GUID is full 0s","Return the name of the joystick or an empty string if no …","Retrieve the number of axes for this joystick","Retrieve the number of balls for this joystick","Retrieve the number of buttons for this joystick","Retrieve the number of balls for this joystick","Retrieve the battery level of this joystick","Return a copy of the internal SDL_JoystickGUID","Set the rumble motors to their specified intensities, if …","Return a String representation ofeyboard utility functions. Access with <code>Sdl::keyboard()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Text input utility functions. Access with …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Gets the id of the window which currently has keyboard …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Gets the scancode from a virtual key. Returns None if …","","","Gets the virtual key from a scancode. Returns None if …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns true if the scancode is pressed.","","","","","","","","Returns the complement of this set of flags.","","Returns an iterator of pressed scancodes.","Removes the specified flags in-place.","Returns an iterator all scancodes with a boolean …","Inserts or removes the specified flags depending on the …","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Standard log function which takes as priority INFO and as …","","","","","","","","","","<code>button_id</code> is the integer that will be returned by …","","","","","","","Second argument of the tuple (i32) corresponds to the …","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Show a customizable message box.","Show a simple message box, meant to be informative only.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","Mouse utility functions. Access with <code>Sdl::mouse()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the id of the window which currently has mouse focus.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the mouse button is pressed.","Returns true if the mouse button is pressed.","Returns true if the left mouse button is pressed.","Returns true if the left mouse button is pressed.","Tests if the middle mouse button was pressed.","Tests if the middle mouse button was pressed.","Returns an iterator all mouse buttons with a boolean …","Returns an iterator all mouse buttons with a boolean …","","","","","","Returns an iterator of pressed mouse buttons.","Returns an iterator of pressed mouse buttons.","","Tests if the right mouse button was pressed.","Tests if the right mouse button was pressed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the x coordinate of the state","Returns the x coordinate of the state","Tests if the X1 mouse button was pressed.","Tests if the X1 mouse button was pressed.","Tests if the X2 mouse button was pressed.","Tests if the X2 mouse button was pressed.","Returns the y coordinate of the state","Returns the y coordinate of the state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The alpha mask","","The blue mask","","","","","","","","","","","Bits per pixel; usually 15, 16, or 32","Calculates the total byte size of an image buffer, given …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","The green mask","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","Creates a new, uninitialized palette","","","","","","The red mask","","","","","","","","","","","","","","","","","","","","","","Creates a palette from the provided colors","Immutable point type, consisting of x and y.","A (non-empty) rectangle.","","","","","","","","","","","","","Returns the y-position of the bottom side of this …","Returns the bottom-left corner of this rectangle.","Returns the bottom-right corner of this rectangle.","Returns the center position of this rectangle.","Centers the rectangle on the given point.","","","","","Checks whether this rectangle contains a given point.","Checks whether this rectangle completely contains another …","Example","Example","Example","Example","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a new rectangle centered on the given position.","Calculate a minimal rectangle enclosing a set of points. …","","","Determines whether two rectangles intersect.","","","The height of this rectangle.","Calculates the intersection of a rectangle and a line …","Calculates the intersection of two rectangles.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the x-position of the left side of this rectangle.","The maximal integer value that can be used for rectangles.","The minimal integer value that can be used for rectangle …","","","","Creates a new rectangle from the given values.","Creates a new point from the given coordinates.","Move this rect and clamp the positions to prevent …","Returns a new point by shifting this point’s coordinates …","Returns the underlying C Rect.","","","","","Moves this rect to the given position after clamping the …","Resizes this rect to the given size after clamping the …","Returns the x-position of the right side of this rectangle.","Returns a new point by multiplying this point’s …","Sets the position of the bottom side of this rectangle to …","Sets the height of this rectangle to the given value, …","Sets the position of the right side of this rectangle to …","Sets the width of this rectangle to the given value, …","Sets the horizontal position of this rectangle to the …","Sets the vertical position of this rectangle to the given …","Returns the width and height of this rectangle.","","","","","","Returns the y-position of the top side of this rectangle.","Returns the top-left corner of this rectangle.","Returns the top-right corner of this rectangle.","","","","","","","Calculates the union of two rectangles (i.e. the smallest …","The width of this rectangle.","The horizontal position of this rectangle.","Returns the x-coordinate of this point.","The vertical position of this rectangle.","Returns the y-coordinate of this point.","Additive blending","Alpha blending","Blend mode for <code>Canvas</code>, <code>Texture</code> or <code>Surface</code>.","Manages and owns a target (<code>Surface</code> or <code>Window</code>) and allows …","The type that allows you to build Window-based renderers.","","","","","","Invalid blending mode (indicates error)","","Color modulate","Color multiply","no blending (replace destination with source).","","","","","","Represents structs which can be the target of a …","Manages what keeps a <code>SDL_Renderer</code> alive","A structure that contains information on the capabilities …","Contains the description of an error returned by SDL","","","","","","","Alias for a <code>Canvas</code> that was created out of a <code>Surface</code>","","Possible errors returned by targeting a <code>Canvas</code> to render …","A texture for a rendering context.","","Creates Textures that cannot outlive the creator","","","","","","","","","","","","","","Set the renderer to use hardware acceleration. This flag …","","Gets the additional alpha value multiplied into render …","Gets the blend mode used for drawing operations.","Gets the blend mode used for texture copy operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the renderer.","Clears the current rendering target with the drawing color.","Gets the clip rectangle for the current target.","","","","","","","","","","","","","","","","","","","","","Gets the additional color value multiplied into render …","Copies a portion of the texture to the current rendering …","Copies a portion of the texture to the current rendering …","Creates a texture for a rendering context.","Creates a texture from an existing surface.","Shorthand for …","Shorthand for …","Shorthand for …","","","","","","","","","Gets the color used for drawing operations (Rect, Line and …","Draws a line on the current rendering target. Errors if …","Draws a series of connected lines on the current rendering …","Draws a point on the current rendering target. Errors if …","Draws multiple points on the current rendering target. …","Draws a rectangle on the current rendering target. Errors …","Draws some number of rectangles on the current rendering …","Gets an iterator of all render drivers compiled into the …","","","","","","","Fills a rectangle on the current rendering target with the …","Fills some number of rectangles on the current rendering …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a 2D software rendering context for a surface.","A convenience function for …","Binds an OpenGL/ES/ES2 texture to the current context for …","Unbinds an OpenGL/ES/ES2 texture from the current context.","Binds and unbinds an OpenGL/ES/ES2 texture from the …","","","","","","Sets the index of the rendering driver to initialize. If …","Gets information about the rendering context.","Gets whether integer scales are forced for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Gets the associated surface of the Canvas and destroys the …","Gets the associated window of the Canvas and destroys the …","Gets device independent resolution for rendering.","","","","Initializes a new <code>CanvasBuilder</code>.","","Gets the output size of a rendering context.","Updates the screen with any rendering performed since the …","Synchronize renderer <code>present</code> method calls with the refresh …","","","","","","Queries the attributes of the texture.","Gets the raw pointer to the SDL_Renderer","","","","Create a texture from its raw <code>SDL_Texture</code>.","Reads pixels from the current rendering target.","","Determine whether a window supports the use of render …","Gets the drawing scale for the current target.","Sets an additional alpha value multiplied into render copy …","Sets the blend mode used for drawing operations (Fill and …","Sets the blend mode used for drawing operations (Fill and …","Sets the clip rectangle for rendering on the specified …","Sets an additional color value multiplied into render copy …","Sets the color used for drawing operations (Rect, Line and …","Sets whether to force integer scales for …","Sets a device independent resolution for rendering.","Sets the drawing scale for rendering on the current target.","Sets the drawing area for rendering on the current target.","","Set the renderer to a software fallback. This flag is …","Gets a reference to the associated surface of the Canvas","Gets a mutable reference to the associated surface of the …","Set the renderer to support rendering to a texture. This …","Returns a <code>TextureCreator</code> that can create Textures to be …","Returns a <code>TextureCreator</code> that can create Textures to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the given texture rectangle with new pixel data.","Updates a rectangle within a planar YV12 or IYUV texture …","Gets the drawing area for the current target.","","Gets a reference to the associated window of the Canvas","Gets a mutable reference to the associated window of the …","Locks the texture for <strong>write-only</strong> pixel access. The texture …","Same as <code>with_texture_canvas</code>, but allows to change multiple …","Temporarily sets the target of <code>Canvas</code> to a <code>Texture</code>. This …","","","","","","","A structure that provides an abstract interface to stream …","","","","","Returns the argument unchanged.","Prepares a read-only memory buffer for use with <code>RWops</code>.","Prepares a read-write memory buffer for use with <code>RWops</code>.","Creates an SDL file stream.","","Reads a <code>Read</code> object into a buffer and then passes it to …","Calls <code>U::from(self)</code>.","","Gets the stream’s total size in bytes.","","","","","","","","Holds a <code>Rc&lt;SurfaceContext&gt;</code>.","Holds a <code>SDL_Surface</code>","An unsized Surface reference.","","","","","A convenience function for …","","Performs surface blitting (surface copying).","Performs scaled surface bliting (surface copying).","","","","","","","Gets the clip rectangle for the surface.","The function will fail if the surface doesn’t have color …","","","Copies the surface into a new one that is optimized for …","Copies the surface into a new one of a specified pixel …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new surface from an existing buffer, using a …","Creates a new surface from an existing buffer, using pixel …","","","","Creates a new surface using pixel masks.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a Software Canvas to allow rendering in the …","","","Performs low-level surface blitting.","Performs low-level scaled surface blitting.","Returns true if the Surface needs to be locked before …","Creates a new surface using a pixel format.","","","","","","","","","The function will fail if the blend mode is not supported …","Sets the clip rectangle for the surface.","","","","","","","","","","","","","","","Locks a surface so that the pixels can be directly …","Locks a surface so that the pixels can be directly …","Returns the Surface’s pixel buffer if the Surface doesn…","Returns the Surface’s pixel buffer if the Surface doesn…","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the closure as a trait-object and cancels the timer","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Opens a URL/URI in the default system-provided application.","","","","","","","A structure that contains information about the version of …","","","","","","","","Returns the argument unchanged.","Convert a raw *SDL_version to Version.","","Calls <code>U::from(self)</code>.","major version","minor version","update version (patchlevel)","Get the code revision of SDL that is linked against your …","Get the revision number of SDL that is linked against your …","","","","","","Get the version of SDL that is linked against your program.","","OpenGL compatibility profile - deprecated functions are …","OpenGL core profile - deprecated functions are disabled","","","","","","OpenGL ES profile - only a subset of the base OpenGL …","","","","","The display is in landscape mode, with the right side up, …","The display is in landscape mode, with the left side up, …","","","Represents orientation of a display.","The display is in portrait mode","The display is in portrait mode, upside down","","","Represents a setting for vsync/swap interval.","","","Unknown profile - SDL will tend to return 0 if you ask …","The display orientation can’t be determined","","","","","Represents the “shell” of a <code>Window</code>.","","The type that allows you to build windows.","Holds a <code>SDL_Window</code>","","","Creates the window in high-DPI mode if supported (&gt;= SDL …","Use this function to get the size of a window’s borders …","Removes the window decoration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","","","","","","","Gets an iterator of all video drivers compiled into the …","","","","","","","","","Gives up this WindowSurfaceRef, allowing to use the window …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Unsafe if the <code>*mut SDL_Window</code> is used after the …","","","","Create a new <code>Window</code> without taking ownership of the …","","Sets the window to fullscreen.","Sets the window to fullscreen at the current desktop …","","","OpenGL context getters and setters","","","","Set the window’s OpenGL context to the current context …","","","","","","","","","","Hides the window.","","","Sets the window to have grabbed input focus.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initializes a new <code>CanvasBuilder</code>; a convenience method that …","","Returns true if the OpenGL context is the current one in …","","Maximizes the window.","","","Minimizes the window.","","","Initializes a new <code>WindowBuilder</code>.","","Returns the transparency of the window, as a value between …","Sets the window to be usable with an OpenGL context","","Sets the window position.","Centers the window.","","","","","","Sets the window to be resizable.","","","","","","","","Use this function to set the icon for a window.","","","Set the transparency of the window. The given value will …","","","","Sets the underlying window flags. This will effectively …","","","","","Returns a WindowSurfaceRef, which can be used like a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the change made to the inner Surface to the Window …","Same as <code>update_window</code>, but only update the parts included …","Sets the window to be usable with a Vulkan instance","Create a Vulkan rendering surface for a window.","","Get the names of the Vulkan instance extensions needed to …","","","Gets the underlying window flags.","","","The type that allows you to build a OpenGL context …","OpenGL context getters and setters. Obtain with …","<strong>Gets</strong> the attribute:  whether to require hardware …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","","","","","","","<strong>Gets</strong> the attribute:  the minimum number of bits for frame …","<strong>Gets</strong> the applied OpenGL context configuration flags.","<strong>Gets</strong> the attribute:  OpenGL context major version","<strong>Gets</strong> the attribute:  OpenGL context minor version","<strong>Gets</strong> the attribute:  disables OpenGL error checking; …","<strong>Gets</strong> the attribute:  type of GL context (Core, …","<strong>Gets</strong> the OpenGL context major and minor versions as a …","Sets the context into “debug” mode.","<strong>Gets</strong> the attribute:  the minimum number of bits in the …","<strong>Gets</strong> the attribute:  whether the output is single or …","Sets the context into “forward compatible” mode.","<strong>Gets</strong> the attribute:  requests sRGB capable visual; …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<strong>Gets</strong> the attribute:  the number of buffers used for …","<strong>Gets</strong> the attribute:  the number of samples used around the …","<strong>Gets</strong> the attribute:  the minimum number of bits for the …","","","Finishes the builder and applies the GL context flags to …","<strong>Sets</strong> the attribute:  whether to require hardware …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the minimum number of bits for frame …","<strong>Sets</strong> any combination of OpenGL context configuration flags.","<strong>Sets</strong> the attribute:  OpenGL context major version","<strong>Sets</strong> the attribute:  OpenGL context minor version","<strong>Sets</strong> the attribute:  disables OpenGL error checking; …","<strong>Sets</strong> the attribute:  type of GL context (Core, …","<strong>Sets</strong> the OpenGL context major and minor versions.","<strong>Sets</strong> the attribute:  the minimum number of bits in the …","<strong>Sets</strong> the attribute:  whether the output is single or …","<strong>Sets</strong> the attribute:  requests sRGB capable visual; …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  the number of buffers used for …","<strong>Sets</strong> the attribute:  the number of samples used around the …","<strong>Sets</strong> the attribute:  the minimum number of bits for the …","<strong>Sets</strong> the attribute:  OpenGL context sharing; defaults to …","<strong>Sets</strong> the attribute:  the minimum number of bits in the …","<strong>Sets</strong> the attribute:  whether the output is stereo 3D; …","<strong>Gets</strong> the attribute:  OpenGL context sharing; defaults to …","<strong>Gets</strong> the attribute:  the minimum number of bits in the …","<strong>Gets</strong> the attribute:  whether the output is stereo 3D; …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,22,0,18,18,0,22,18,0,0,18,0,18,1,4,9,0,13,14,14,26,18,13,14,4,19,20,16,9,1,21,22,26,18,13,14,4,19,20,16,9,1,21,22,0,0,16,18,13,14,4,19,20,16,9,1,21,22,18,13,14,4,19,20,16,9,1,21,22,16,0,0,14,16,16,9,18,22,16,20,26,16,16,16,16,16,16,16,26,26,16,18,22,0,13,13,1,4,20,0,1,1,18,18,14,4,19,20,16,22,22,26,18,13,14,4,19,20,16,9,1,21,22,13,0,0,16,16,16,16,16,16,16,16,16,16,0,13,18,0,0,26,18,13,14,4,19,20,16,9,1,21,22,26,4,16,0,13,0,13,26,4,4,4,0,4,0,0,13,26,4,20,14,14,16,4,20,16,4,20,14,19,14,14,1,9,9,0,26,26,18,22,26,1,1,0,1,1,1,26,0,0,14,4,19,20,16,9,1,21,13,0,0,4,20,0,16,9,0,13,18,13,14,4,19,20,16,9,1,21,22,18,22,0,26,18,13,14,4,19,20,16,9,1,21,22,26,18,13,14,4,19,20,16,9,1,21,22,26,18,13,14,4,19,20,16,9,1,21,22,4,20,0,0,0,13,16,16,16,16,26,26,26,26,16,0,0,0,0,0,0,0,0,0,0,0,72,0,64,64,69,69,64,64,64,64,64,68,69,64,64,64,68,65,50,48,74,64,69,70,47,71,66,65,50,48,74,64,69,70,47,71,66,65,72,66,65,47,71,50,64,69,70,47,71,66,64,69,70,47,71,66,48,66,74,74,0,65,74,64,69,71,64,64,69,71,65,71,65,47,71,65,50,48,74,64,69,70,47,71,66,64,69,71,65,50,48,74,64,69,70,47,71,66,70,66,65,65,48,66,70,48,48,50,50,48,50,50,50,48,64,64,47,71,71,50,71,70,50,48,50,48,50,48,64,69,70,47,71,66,65,50,48,74,64,69,69,70,47,71,66,65,50,48,74,64,69,70,47,71,66,65,50,48,74,64,69,70,47,71,66,64,0,17,17,17,17,17,17,17,17,17,17,77,0,6,0,77,77,0,77,77,77,77,0,77,7,7,77,77,75,75,0,77,77,77,77,77,7,77,77,75,75,7,77,77,75,75,6,77,77,45,45,45,7,75,77,6,45,7,75,77,6,45,7,75,77,6,7,75,77,6,7,45,75,77,6,7,7,75,77,6,45,7,75,77,6,75,77,75,77,75,77,6,45,45,7,75,77,6,45,45,7,45,75,77,45,75,77,7,75,77,6,7,45,7,75,77,6,45,7,75,77,6,45,7,75,77,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,52,27,52,27,52,27,52,27,52,27,52,27,52,27,52,27,52,82,81,27,52,27,52,27,52,27,52,27,52,27,52,81,27,52,0,27,52,27,52,27,52,27,52,27,52,27,52,82,0,0,0,0,0,0,0,0,82,27,52,27,52,27,52,27,82,82,82,82,27,52,27,52,27,52,27,52,27,52,27,52,27,52,27,52,27,52,27,82,82,82,27,52,27,52,27,52,27,52,82,27,52,81,82,81,27,52,27,52,27,52,82,82,82,82,82,27,52,27,52,52,27,52,27,52,0,3,3,52,53,61,62,31,3,27,81,82,52,53,61,62,31,3,27,81,82,52,2,27,81,82,52,27,81,82,52,3,3,27,81,82,52,27,81,82,52,53,61,62,31,3,27,81,82,52,52,52,27,81,82,53,61,62,31,3,27,81,82,52,53,61,62,52,52,52,52,52,52,52,52,52,81,82,52,52,52,52,52,52,53,61,62,31,31,3,27,81,82,52,53,61,62,31,3,27,27,81,82,52,53,61,62,31,3,27,81,82,52,53,61,62,31,3,27,81,82,52,177,178,179,180,181,182,183,184,185,186,187,187,186,186,188,189,189,190,191,192,190,191,192,193,194,195,196,190,191,192,193,194,197,198,199,200,201,200,201,202,184,185,203,193,194,187,190,191,192,200,201,200,201,202,197,202,204,205,206,207,208,209,210,211,189,212,200,201,202,204,203,184,185,188,178,179,197,182,183,213,214,177,180,181,215,216,217,190,191,192,193,194,187,218,195,196,219,220,198,199,221,222,186,223,190,191,192,193,194,187,186,223,178,177,203,184,185,188,178,179,197,182,183,213,214,177,180,181,215,216,217,198,199,212,212,200,201,202,204,203,184,185,188,195,196,219,220,186,203,184,185,188,190,191,192,193,194,187,203,179,203,184,185,188,190,191,192,193,194,187,203,179,83,83,0,83,0,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,0,49,49,49,49,49,49,49,49,49,49,49,85,0,85,85,85,85,85,0,0,85,0,0,0,0,85,85,85,87,87,86,86,0,0,0,87,87,87,86,86,0,87,87,87,86,87,86,46,46,46,46,86,25,87,46,86,25,87,46,86,25,87,86,25,87,46,86,25,87,86,25,87,46,86,25,87,86,87,25,46,86,87,46,46,46,86,25,87,25,46,46,46,46,46,46,25,46,25,46,86,86,25,87,87,25,46,86,25,87,46,86,25,87,46,86,25,87,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,93,93,92,93,92,92,92,93,92,93,92,93,92,93,92,93,92,93,92,92,93,92,93,92,93,92,93,92,93,91,92,93,92,93,92,93,92,92,93,92,93,92,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,93,92,92,93,92,92,93,92,93,92,93,92,93,93,93,93,93,93,93,93,93,93,92,93,92,93,92,93,92,93,92,93,0,0,0,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,91,92,93,91,92,93,91,92,93,91,92,93,93,93,93,93,93,93,93,93,93,92,93,92,93,92,92,92,93,91,92,93,92,93,92,93,92,93,0,92,93,92,93,92,93,91,91,93,93,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,92,93,92,92,93,0,92,93,92,93,92,93,92,92,92,92,93,91,92,93,91,92,93,91,91,92,93,91,92,93,92,93,92,93,92,93,92,93,92,92,93,0,0,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,93,92,92,93,92,93,0,92,93,92,93,92,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,92,93,91,91,91,91,91,91,91,91,40,97,98,39,59,92,93,91,40,97,98,39,59,92,93,91,92,93,91,92,93,91,91,91,91,91,91,92,93,91,91,92,92,93,93,91,91,91,91,91,91,39,40,97,98,39,59,92,93,91,91,91,91,92,93,91,93,92,93,92,59,92,93,91,91,91,91,40,97,98,39,59,92,93,91,97,98,59,91,91,40,59,39,92,93,40,97,98,91,91,40,91,40,91,39,59,59,59,91,91,91,92,93,91,92,93,91,91,40,97,98,39,59,92,93,91,40,97,98,39,59,92,93,91,40,97,98,39,59,92,93,91,91,99,99,99,0,100,99,100,99,100,100,99,0,99,99,99,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,0,0,99,100,99,100,99,100,99,100,0,0,106,106,101,102,101,103,103,103,0,0,0,102,102,103,0,101,101,102,104,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,104,105,106,103,101,102,104,105,106,103,104,104,105,104,101,102,103,101,102,103,101,102,101,102,101,102,103,101,102,101,102,101,102,101,102,105,101,101,101,101,101,102,102,102,102,102,104,105,106,103,103,101,102,104,104,105,106,103,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,104,104,105,106,103,101,102,101,102,101,102,101,102,103,101,102,101,102,0,0,101,102,101,102,101,102,104,105,101,102,103,103,101,102,101,102,104,105,106,103,101,102,104,105,106,103,101,102,104,105,106,103,101,102,108,108,0,109,108,108,110,110,0,0,0,0,0,108,109,0,0,110,108,108,108,108,108,0,109,110,108,108,110,110,111,113,114,42,57,108,109,110,43,111,113,114,42,57,108,109,110,43,42,57,108,109,110,43,57,108,109,110,43,111,57,108,109,110,43,108,109,110,43,42,111,113,114,42,57,108,109,110,43,109,110,57,43,111,111,57,108,109,110,43,111,113,114,42,57,108,109,110,43,113,114,42,57,43,57,43,57,43,57,43,111,57,43,113,114,57,43,42,57,43,111,42,42,109,57,108,109,110,43,57,43,111,113,114,42,57,108,109,110,43,111,113,114,42,57,108,109,110,43,111,113,114,42,57,108,109,110,43,42,57,43,57,43,57,43,57,43,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,115,115,115,0,115,115,115,116,116,116,116,116,116,115,0,0,0,0,115,115,116,116,116,116,116,116,115,116,116,116,116,116,116,116,115,115,116,116,116,115,121,115,121,117,121,119,115,116,117,121,119,115,116,121,116,116,116,115,116,115,116,117,115,116,115,116,117,121,119,115,115,115,115,116,116,119,116,115,115,121,115,116,117,121,119,115,115,116,116,115,117,117,117,115,117,119,115,115,121,116,115,116,115,117,121,119,119,115,116,116,117,121,119,115,116,117,121,119,115,116,117,0,0,123,123,29,123,29,123,29,29,29,123,29,123,29,29,29,29,29,29,123,29,123,29,29,29,123,29,123,123,123,29,123,29,123,29,29,29,123,123,123,29,29,29,123,29,29,123,29,29,29,29,29,29,123,123,123,29,0,0,123,123,123,29,123,29,123,29,123,29,29,123,29,29,29,123,29,29,29,29,29,29,29,123,123,123,29,123,29,29,29,29,123,29,123,29,123,29,29,29,123,29,123,131,131,0,0,0,129,0,139,140,137,131,140,131,131,131,134,139,139,140,140,0,0,0,0,134,137,139,140,135,135,0,135,0,0,0,0,0,0,0,0,137,139,140,137,0,139,140,139,140,127,138,128,130,128,144,130,143,127,128,133,134,135,136,131,137,138,139,140,141,144,130,143,127,128,133,134,135,136,131,137,138,139,140,141,127,130,130,133,134,135,136,131,137,138,139,140,141,133,134,135,136,131,137,138,139,140,141,128,130,130,143,143,143,143,143,130,143,130,133,134,137,139,140,130,130,130,130,130,130,130,0,144,128,135,136,131,138,130,130,136,133,133,134,134,135,136,131,137,137,138,139,139,140,140,138,144,130,143,127,127,128,133,134,135,136,131,137,138,139,140,141,144,136,130,128,128,128,128,135,136,131,138,138,127,144,130,144,130,143,127,128,133,134,135,136,131,137,138,139,140,141,141,130,130,130,136,136,136,127,141,130,130,127,133,134,137,139,140,128,144,130,143,128,143,130,130,130,130,128,130,128,130,128,130,130,130,130,130,141,127,130,130,127,130,130,136,133,134,135,136,131,137,138,139,140,141,133,134,137,139,140,144,130,143,127,128,133,134,135,135,136,131,131,137,138,139,140,141,144,130,143,127,128,133,134,135,136,131,137,138,139,140,141,144,130,143,127,128,133,134,135,136,131,137,138,139,140,141,128,128,130,138,130,130,128,130,130,224,224,224,225,224,225,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,112,148,148,112,148,112,112,112,152,148,112,152,148,112,112,112,112,148,112,112,148,148,112,152,112,112,112,152,148,112,148,148,148,112,112,148,112,152,148,112,148,148,148,112,112,112,148,112,112,112,112,112,112,112,112,112,112,112,112,112,112,152,148,112,152,148,112,152,148,112,112,112,112,112,112,0,0,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,159,0,159,159,159,159,159,159,159,159,159,159,0,159,159,159,159,159,159,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,160,160,160,160,160,0,165,163,163,164,0,0,0,0,163,0,162,35,162,30,30,35,164,0,30,30,165,162,0,164,165,163,30,35,0,0,162,0,0,0,0,0,0,63,96,63,167,168,151,96,163,24,164,165,35,30,162,63,166,167,168,151,96,163,24,164,165,35,30,162,63,166,96,63,163,24,164,165,35,30,162,166,163,24,164,165,35,30,162,166,96,167,167,162,96,96,96,0,168,151,163,24,164,165,35,30,167,163,24,164,165,35,30,162,162,63,24,167,168,151,96,96,163,24,164,165,165,35,35,30,162,63,166,151,96,24,30,96,164,63,63,96,96,0,96,96,96,96,96,96,24,163,24,164,165,35,30,63,96,96,63,167,168,151,96,163,24,164,165,35,30,162,63,166,96,166,168,96,63,96,96,63,96,24,63,166,96,63,96,63,63,162,96,168,96,24,63,96,96,96,96,96,96,96,96,96,96,96,96,96,96,63,96,96,166,96,96,96,24,30,163,24,164,165,35,30,162,166,162,167,168,151,96,163,24,164,165,35,30,162,63,166,167,168,151,96,163,24,164,165,35,30,162,63,166,167,168,151,96,163,24,164,165,35,30,162,63,166,167,167,63,96,96,96,24,96,63,96,0,0,0,34,34,34,34,34,34,34,34,176,175,34,176,175,34,34,34,34,34,34,34,176,34,34,176,34,34,176,175,34,175,175,175,175,34,176,175,34,34,34,176,176,176,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,176,175,34,176,175,34,176,175],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[3,[2]]]],[[4,5],[[8,[6,7]]]],[[9,10,11],12],0,[13,[[8,[14,15]]]],[[14,10],[[8,[15,15]]]],[[14,10],[[8,[15,15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[16,17],[18,18],[13,13],[14,14],[4,4],[19,19],[20,20],[16,16],[9,9],[1,1],[21,21],[22,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,23,24],[[8,[24,15]]]],0,0,[14,5],[[16,23],[[8,[24,15]]]],[16,5],[[9,10]],[18,5],[22,5],[[16,23],[[8,[24,15]]]],[[20,10],[[8,[25,22]]]],[[26,27],28],[16],[[16,23],[[8,[29,15]]]],[[16,23],[[8,[15]]]],[[16,23,23],[[8,[24,15]]]],[[16,23],[[8,[15,15]]]],[[16,23],30],[[16,23],[[8,[29,15]]]],[26],[[26,27],28],[16],[[18,18],28],[[22,22],28],0,[13,[[8,[1,15]]]],[13,[[8,[26,15]]]],[1,31],[4,28],[20,28],0,[[1,27]],[[1,10,10]],[[18,32],33],[[18,32],33],[[14,32],33],[[4,32],33],[[19,32],33],[[20,32],33],[[16,32],33],[[22,32],33],[[22,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[8,[4,15]]]],[[],15],[[],5],[16,34],[[16,5],28],[16,[[8,[10,15]]]],[[16,5]],[16,35],[[16,[37,[36]]],[[8,[15]]]],[16,[[8,[15]]]],[16,[[8,[15]]]],[[16,[38,[35]]],[[8,[15]]]],[16],0,[13,[[8,[19,15]]]],[18],0,[[],[[8,[13,15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27],28],[[4,10],28],[16,28],0,[13,[[8,[20,15]]]],0,[13,39],[26,40],[[4,[37,[36]]],[[8,[23,7]]]],[4,[[8,[23,7]]]],[[4,41],[[8,[23,7]]]],0,[[4,25],[[8,[15,15]]]],0,0,[13,42],[26,43],[[4,10],[[8,[15,22]]]],[[20,10],[[8,[15,22]]]],[14,[[44,[10]]]],[14,[[44,[10]]]],[[16,23],[[8,[23,15]]]],[4,[[8,[10,15]]]],[20,[[8,[10,15]]]],[16,[[8,[23,15]]]],[[4,10],[[8,[45,22]]]],[[20,10],[[8,[46,22]]]],[[14,47],[[8,[48,15]]]],[[19,10],[[8,[49,22]]]],[[14,47],[[8,[48,15]]]],[[14,47],[[8,[50,15]]]],[[1,10]],[9,51],[9,51],0,[26,[[44,[52]]]],[26,53],[54],[54],[26],[[1,55],[[8,[15]]]],[[1,52],[[8,[15]]]],0,[1,[[8,[15]]]],[1,[[8,[10,15]]]],[[1,10],[[8,[[56,[10]],15]]]],[26,57],0,0,[14,13],[4,13],[19,13],[20,13],[16,13],[9,13],[1,13],[21,13],[13,[[8,[21,15]]]],[5,[[8,[58]]]],[18],[[4,28]],[[20,28]],0,[16,59],[9,10],0,[13,[[8,[9,15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[4],[20],0,0,0,[13,[[8,[16,15]]]],[16,[[8,[15]]]],[[16,[37,[36]]],[[8,[15]]]],[16,[[8,[15]]]],[16],[26,52],[[26,10],[[44,[52]]]],[26,61],[[26,10],62],[[16,5,10,10],63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65],[[]],[[66,67],67],0,0,0,[[[50,[68]]]],[64,64],[69,69],[70,70],[47,47],[71,71],[66,66],[[]],[[]],[[]],[[]],[[]],[[]],[[[48,[72]]],72],[[66,[56,[73]]],[[56,[73]]]],[[[74,[72]]]],[[[74,[72]]]],[[],70],[65],[[[74,[72]]]],[[64,64],28],[[69,69],28],[[71,71],28],[[],64],[[64,32],33],[[69,32],33],[[71,32],33],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64],[69],[71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,28],[[[37,[36]]],[[8,[65,15]]]],[41,[[8,[65,15]]]],[[[48,[72]]],[[74,[72]]]],[[64,73,23,64,73,23],[[8,[66,15]]]],[70,[[44,[5]]]],[[14,47],[[8,[[48,[72]],15]]]],[[14,47],[[8,[[48,[72]],15]]]],[[14,[38,[[44,[5]]]],47],[[8,[[50,[68]],15]]]],[[[50,[68]]]],[[[48,[72]]]],[[[50,[68]]],28],[[[50,[68]]],[[8,[15]]]],[[[50,[68]]]],[[[48,[72]]]],[[],64],[[],64],0,0,0,[[[50,[68]]],10],0,[70],[[[50,[68]]],71],[[[48,[72]]],71],[[[50,[68]]],69],[[[48,[72]]],69],[[[50,[68]]],14],[[[48,[72]]],14],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[10,[[8,[69]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],64],0,[[]],[[]],[17,[[8,[15,15]]]],[[]],[17,28],[[]],[[17,5],[[8,[15]]]],[[],8],[[],8],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[45,28],[[45,75],76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,77],28],[7,7],[75,75],[77,77],[6,6],[[]],[[]],[[]],[[]],[7,5],[45],[[75,75],28],[[77,77],28],[[6,6],28],[[7,32],33],[[7,32],33],[[75,32],33],[[77,32],33],[[6,32],33],[[]],[[]],[[]],[[]],[[]],[78,[[44,[75]]]],[79,[[44,[77]]]],[5,[[44,[75]]]],[5,[[44,[77]]]],[75],[77],[6],[45,10],[[]],[[]],[[]],[[]],[[]],[45,15],[45,15],[54],[[45,80,80,10],[[8,[22]]]],[75,15],[77,15],[45,4],[75,78],[77,79],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],0,[[],23],[[],23],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[2]]]],[[[3,[2]]],28],[52,[[44,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52],[27,27],[81,81],[82,82],[52,52],[[]],[[]],[[]],[[]],[[[3,[2]]]],[[[3,[2]]]],[[27,27],28],[[81,81],28],[[82,82],28],[[52,52],28],[[27,32],33],[[81,32],33],[[82,32],33],[[52,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,10],[52,[[44,[10]]]],[27],[81],[82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52,28],[52,28],[52,28],[52,28],[52,28],[52,28],[52,28],[52,28],[52,28],[[81,81],28],[[82,82],28],[[52,52],28],[52,28],[52,28],[52,28],[52,28],[52,28],[53,[[44,[52]]]],[61,[[44,[52]]]],[62,[[44,[52]]]],[[31,55],[[8,[15]]]],[[31,52],[[8,[15]]]],[[[3,[2]],28]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[10,[[8,[27]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[8,[15,15]]]],[[]],[[]],[83,83],[[]],[83,5],[[83,32],33],[[83,32],33],[[]],[[]],[[5,5],[[8,[15,83]]]],[54],[[]],[[],15],[[],8],[[],8],[[],60],0,[[]],[[]],[49],[[]],[[]],[[49,84,10]],[49],[49,19],[[],8],[[],8],[[],60],0,0,0,0,[[]],[[]],[[]],[5,[[44,[15]]]],[[],28],[[]],[[5,5],28],[28,28],[[28,85],28],[[5,5,85],28],[[],8],[[],8],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[46,28],[[46,10],[[8,[76,22]]]],[[46,10],[[8,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,10],[[8,[28,22]]]],[86,86],[25,25],[87,87],[[]],[[]],[[]],[46],[[86,86],28],[[25,25],28],[[87,87],28],[[86,32],33],[[25,32],[[8,[88]]]],[[87,32],33],[[]],[[]],[[]],[[]],[89,86],[73,87],[5,[[8,[25,58]]]],[46,25],[86],[87],[[46,10],[[8,[87,22]]]],[46,10],[[]],[[]],[[]],[[]],[25,28],[46,15],[46,10],[46,10],[46,10],[46,10],[46,[[8,[86,22]]]],[25,90],[[46,80,80,10],[[8,[22]]]],[25,15],[46,20],[86,89],[[]],[[]],[[]],[87,73],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],91],[[91,91],91],[[91,91]],[[91,91],91],[[91,91]],[91,80],[[91,91],91],[[91,91]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,92],[93,93],[91,91],[[]],[[]],[[]],[[91,91],94],[91,91],[[91,91],28],[[91,91],91],[[],91],[[92,92],28],[[93,93],28],[[91,91],28],[[91,95]],[[92,32],33],[[92,32],[[8,[88]]]],[[93,32],[[8,[88]]]],[[93,32],33],[[91,32],33],[[91,32],33],[[91,32],33],[[91,32],33],[[91,32],33],[[91,32],33],[39,[[44,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,[[44,[91]]]],[80,91],[80,91],[23,[[44,[92]]]],[23,[[44,[93]]]],[95,91],[92,[[44,[93]]]],[5,[[44,[92]]]],[5,[[44,[93]]]],[93,[[44,[92]]]],[59,28],[92],[93],[91],[[91,91]],[[91,91],91],[[91,91],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,28],[91,28],[91,28],[[40,93],28],[[59,96],28],[39,91],[92,15],[93,5],[26,40],[97,44],[98,[[44,[93]]]],[91,91],[[91,91],[[44,[94]]]],[40,98],[[91,91]],[40,97],[[91,91,28]],[[39,91]],[[59,29]],[59],[59],[[91,91],91],[[91,91]],[[91,91],91],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[91,91]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[91,91],91],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[99,99],[100,100],[[]],[[]],[[99,99],28],[[100,100],28],[[99,32],33],[[100,32],33],[[]],[[]],[99],[100],[[]],[[]],[5],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],101],[[],102],0,[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[101,10],[102,10],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[101,101],[102,102],[103,103],[[]],[[]],[[]],[[101,101],94],[[102,102],94],[101,101],[102,102],[[101,101],28],[[102,102],28],[103,5],[[101,101],101],[[102,102],102],[[],101],[[],102],[[101,101],28],[[102,102],28],[[101,95]],[[102,95]],0,[[101,32],33],[[101,32],33],[[101,32],33],[[101,32],33],[[101,32],33],[[102,32],33],[[102,32],33],[[102,32],33],[[102,32],33],[[102,32],33],[[104,32],33],[[105,32],33],[[106,32],33],[[103,32],33],[[103,32],33],[[]],[[]],[107,104],[[]],[[]],[[]],[[]],[10,[[44,[101]]]],[10,[[44,[102]]]],[10,101],[10,102],[10,101],[10,102],[95,101],[95,102],[101],[102],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],[[101,101],28],[[102,102],28],[[]],[[]],[104,107],[[]],[[]],[[]],[[]],[101,28],[102,28],[101,28],[102,28],[101,101],[102,102],[[101,101],[[44,[94]]]],[[102,102],[[44,[94]]]],[54],[[101,101]],[[102,102]],[[101,101,28]],[[102,102,28]],[[101,5,5],[[8,[106,103]]]],[[101,5,5],[[8,[103]]]],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],0,0,[[]],[[]],[[]],[[],15],[[101,101]],[[102,102]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[101,101],101],[[102,102],102],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,28]],[57,57],[108,108],[109,109],[110,110],[43,43],[[]],[[]],[[]],[[]],[[]],[111],[[57,57],28],[[108,108],28],[[109,109],28],[[110,110],28],[[43,43],28],[[108,32],33],[[109,32],33],[[110,32],33],[[43,32],33],[42,[[44,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,109],[73,110],[10,57],[10,43],[[[37,[112]],23,23],[[8,[111,15]]]],[108,[[8,[111,15]]]],[57],[108],[109],[110],[43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,28],[[57,110],28],[[43,110],28],[57,28],[43,28],[57,28],[43,28],[57,113],[43,113],[[23,23,23,23],[[8,[111,15]]]],[26,57],[26,43],[113,44],[114,[[44,[110]]]],[57,114],[43,114],[42,28],[57,28],[43,28],[111],[[42,28]],[[42,28]],[109,10],[[]],[[]],[[]],[[]],[[]],[57,10],[43,10],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[42,96,23,23]],[57,23],[43,23],[57,28],[43,28],[57,28],[43,28],[57,23],[43,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[73,73,73],115],0,0,0,0,0,0,[[73,73,73,73],115],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[116,67,67],67],[[116,67],67],[116,67],[115,115],[116,116],[[]],[[]],[117],[[115,115],28],[[116,116],28],[[115,32],33],[[116,32],33],[[]],[[]],[[]],[[],115],[[]],[118,115],[[],115],[119,116],[[]],[120,119],[121,116],[[119,10],115],0,0,[115],[116],[[]],[[]],[[]],[[]],[115,118],[[]],[116,[[8,[121,15]]]],[115,115],[117,28],[117,67],[67,[[8,[117,15]]]],0,[117,122],[119,120],[115],[115],0,[116,28],[[]],[[]],[[115,119],10],[[],8],[[],8],[116,[[8,[119]]]],[[],8],[[],8],[10,[[8,[116]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],[[8,[117,15]]]],0,0,[[123,123],123],[[123,123]],[29,124],[123,125],[29,124],[123,125],[[29,29],[[44,[29]]]],[[29,29],29],[[]],[[]],[[]],[[]],[29,23],[29,123],[29,123],[29,123],[29],[29,29],[123,123],[[]],[[]],[29,28],[[29,29],28],[29,124],[123,125],[29,124],[123,125],[[123,23],123],[[123,23]],[[29,29],28],[[123,123],28],[[29,32],[[8,[88]]]],[[123,32],[[8,[88]]]],[[],29],[124,29],[[]],[125,123],[[],123],[[]],[[10,10],29],[[],[[44,[29]]]],[124,29],[125,123],[[29,29],28],[29],[123],[29,10],[[29,123,123],44],[[29,29],[[44,[29]]]],[29],[29,124],[[]],[[]],[123],[123,125],[29,23],[[],10],[[],23],[[123,23],123],[[123,23]],[123,123],[[23,23,10,10],29],[[23,23],123],[[29,23,23]],[[123,23,23],123],[29,124],[123,125],[29,124],[[],124],[[],125],[29],[[29,10,10]],[29,23],[[123,23],123],[[29,23]],[[29,10]],[[29,23]],[[29,10]],[[29,23]],[[29,23]],[29],[[123,123],123],[[123,123]],[126,123],[[]],[[]],[29,23],[29,123],[29,123],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[29,29],29],[29,10],[29,23],[123,23],[29,23],[123,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[127,127],0,[128,73],[[[130,[129]]],131],[128,131],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,[[8,[132,22]]]],[[[130,[129]]]],[[[130,[129]]],[[44,[29]]]],[133,133],[134,134],[135,135],[136,136],[131,131],[137,137],[138,138],[139,139],[140,140],[141,141],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128],[[[130,[129]],128],[[8,[15]]]],[[[130,[129]],128,142,28,28],[[8,[15]]]],[[143,135,10,10],[[8,[128,137]]]],[[143,[37,[112]]],[[8,[128,137]]]],[[143,10,10],[[8,[128,137]]]],[[143,10,10],[[8,[128,137]]]],[[143,10,10],[[8,[128,137]]]],[[[130,[96]]],116],[143,116],[[[130,[129]]],144],[133,5],[134,5],[137,5],[139,5],[140,5],[[[130,[129]]],115],[[[130,[129]],[38,[123]],[38,[123]]],[[8,[15]]]],[[[130,[129]],38],[[8,[15]]]],[[[130,[129]],[38,[123]]],[[8,[15]]]],[[[130,[129]],38],[[8,[15]]]],[[[130,[129]],29],[[8,[15]]]],[[[130,[129]]],[[8,[15]]]],[[],141],[144],[128],[[135,135],28],[[136,136],28],[[131,131],28],[[138,138],28],[[[130,[129]],[38,[[44,[29]]]]],[[8,[15]]]],[[[130,[129]]],[[8,[15]]]],0,[[133,32],33],[[133,32],33],[[134,32],33],[[134,32],33],[[135,32],33],[[136,32],33],[[131,32],33],[[137,32],33],[[137,32],33],[[138,32],33],[[139,32],33],[[139,32],33],[[140,32],33],[[140,32],33],0,[[]],[[]],[[]],[96,127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[145,146],144],[147,136],[148,[[8,[[130,[148]],15]]]],[[148,143],[[8,[128,137]]]],[128],[128],[[128,149]],[135],[136],[131],[138],0,[[127,10],127],[144,136],[[[130,[129]]],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[130,[148]]],148],[[[130,[96]]],96],[[[130,[129]]]],0,0,0,[96,127],[141,[[44,[136]]]],[[[130,[129]]],[[8,[15]]]],[[[130,[129]]]],[127,127],[54],[54],[54],[54],[54],[128,138],[144,145],[[[130,[129]]],145],[143,145],[128,150],[[143,150],128],[[[130,[129]],[38,[[44,[29]]]],116],[[8,[[56,[73]],15]]]],[[[130,[129]]]],[[[130,[129]]],28],[[[130,[129]]]],[[128,73]],[[[130,[129]],131]],[[128,131]],[[[130,[129]],[38,[[44,[29]]]]]],[[128,73,73,73]],[[[130,[129]],[38,[115]]]],[[[130,[129]],28],[[8,[15]]]],[[[130,[129]],10,10],[[8,[22]]]],[[[130,[129]],84,84],[[8,[15]]]],[[[130,[129]],[38,[[44,[29]]]]]],[141],[127,127],[[[130,[148]]],112],[[[130,[148]]],112],[127,127],[[[130,[96]]],[[143,[151]]]],[[[130,[148]]],[[143,[152]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[10,[[8,[135]]]],[[],8],[[],8],[[],8],[10,[[8,[131]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[128,67],[[8,[139]]]],[[128,67,67,67],[[8,[140]]]],[[[130,[129]]],29],0,[[[130,[96]]],96],[[[130,[96]]],96],[128,[[8,[15]]]],[[[130,[129]]],[[8,[134]]]],[[[130,[129]],128],[[8,[134]]]],0,0,0,0,0,0,0,[[]],[[]],[41],[41,153],[[]],[[],[[8,[41,15]]]],[[],[[8,[41,15]]]],[[[37,[36]],5],[[8,[41,15]]]],[154,41],[56,[[8,[41,15]]]],[[]],[41,28],[41,[[44,[67]]]],[41,154],[41,[[153,[67]]]],[[41,155],[[153,[51]]]],[[],8],[[],8],[[],60],[41,[[153,[67]]]],0,0,0,[112,73],[148,112],[148,112],[112,112],[[148,143],[[8,[128,137]]]],[112,131],[[112,112],[[8,[[44,[29]],15]]]],[[112,112],[[8,[[44,[29]],15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[112,[[44,[29]]]],[112,[[8,[115,15]]]],[112,115],[148,[[146,[152]]]],[[112,119],[[8,[148,15]]]],[[112,116],[[8,[148,15]]]],[148,112],[148,112],[112],[152],[112],[[112,115],[[8,[15]]]],[[112,115],[[8,[15]]]],[[]],[[]],[[]],[[10,10,10,116],[[8,[148,15]]]],[[10,10,10,121],[[8,[148,15]]]],[156,148],[156,112],[156,112],[[10,10,121],[[8,[148,15]]]],[112,10],[[]],[[]],[[]],[148,[[8,[[130,[148]],15]]]],[[[37,[36]]],[[8,[148,15]]]],[41,[[8,[148,15]]]],[[112,112],[[8,[15]]]],[[112,112],[[8,[15]]]],[112,28],[[10,10,116],[[8,[148,15]]]],[112,10],[112,119],[112,116],[112,156],[112,29],[[112,[37,[36]]],[[8,[15]]]],[[112,41],[[8,[15]]]],[[112,73]],[[112,131],[[8,[15]]]],[112,28],[[112,28,115],[[8,[15]]]],[[112,115]],[[112,117],[[8,[15]]]],[112],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[112,10],[[112,149]],[[112,149]],[112,44],[112,44],0,0,[[]],[[]],[12],[[]],[[]],[12,11],[[],8],[[],8],[[],60],0,0,[[],23],[157,23],[23,157],[[157,23],[[44,[158]]]],0,0,0,[[]],[[]],[159,159],[[]],[159,5],[[159,32],33],[[159,32],33],[[]],[[]],[5,[[8,[159]]]],[54],[[]],[[],15],[[],8],[[],8],[[],60],0,[[]],[[]],[160,160],[[]],[[160,160],28],[[160,32],33],[[160,32],33],[[]],[161,160],[160],[[]],0,0,0,[[],15],[[],23],[[]],[[],15],[[],8],[[],8],[[],60],[[],160],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,63],[96,[[8,[15]]]],[63,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,142],[63,[[8,[96,162]]]],[163,163],[24,24],[164,164],[165,165],[35,35],[30,30],[162,162],[166,166],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,[[146,[151]]]],[167,112],[167,112],[162,5],[96,[[8,[23,15]]]],[96,[[8,[24,15]]]],[96],[[],166],[168],[151],[[163,163],28],[[24,24],28],[[164,164],28],[[165,165],28],[[35,35],28],[[30,30],28],[167,[[8,[15]]]],[[163,32],33],[[24,32],33],[[164,32],33],[[165,32],33],[[35,32],33],[[30,32],33],[[162,32],33],[[162,32],33],[[63,32],33],0,[[]],[[]],[[]],[151,96],[[]],[[]],[[]],[[]],[[]],[23,165],[[]],[23,35],[[]],[[]],[[]],[[]],[[16,169],151],[[16,169],96],[170,24],[171,30],[[[146,[151]]],96],[10,164],[63,63],[63,63],[96,164],[96,[[8,[15]]]],0,[96,[[8,[168,15]]]],[96,[[44,[168]]]],[[96,168],[[8,[15]]]],[96,[[8,[15]]]],[96],[96,28],0,[163],[24],[164],[165],[35],[30],[63,63],[96],[96,10],[63,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,127],[[]],[168,28],[96],[63,63],[96],[96],[63,63],[96],[[116,23,23,23],24],[[16,5,10,10],63],[166,[[44,[5]]]],[96,[[8,[84,15]]]],[63,63],[96],[[63,23,23],63],[63,63],[54],[96],[168,172],[96,169],0,[63,63],[96],[[96,28]],[[96,142],[[8,[15]]]],[96,[[8,[15]]]],[[96,164],[[8,[15]]]],[96,[[8,[15]]]],[[96,28]],[[96,[37,[112]]]],[[96,10,10],[[8,[22]]]],[[96,10,10],[[8,[22]]]],[[96,84],[[8,[15]]]],[[96,165,165]],[[96,10,10],[[8,[22]]]],[[96,5],[[8,[58]]]],[[63,10],63],[96],[96],[166],[96,16],[[96,26],[[8,[167,15]]]],[96,5],[24,170],[30,171],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[167,[[8,[15]]]],[167,[[8,[15]]]],[63,63],[[96,173],[[8,[174,15]]]],[96],[96,[[8,[[56,[5]],15]]]],0,[96,10],[63,10],[96,116],0,0,0,[34,28],[34,73],[34,73],[34,73],[34,73],[34,73],[34,73],[[]],[[]],[[]],[[]],[[]],[[]],[34,73],[34,175],[34,73],[34,73],[34,28],[34,163],[34],[176,176],[34,73],[34,28],[176,176],[34,28],[[]],[[]],[[]],[34,73],[175,28],[175,28],[175,28],[175,28],[[]],[[]],[[]],[34,73],[34,73],[34,73],[176,176],[176,176],[176],[[34,28]],[[34,73]],[[34,73]],[[34,73]],[[34,73]],[[34,73]],[[34,73]],[[34,73]],[34,176],[[34,73]],[[34,73]],[[34,28]],[[34,163]],[[34,73,73]],[[34,73]],[[34,28]],[[34,28]],[[34,73]],[[34,73]],[[34,73]],[[34,73]],[[34,28]],[[34,73]],[[34,28]],[34,28],[34,73],[34,28],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],60],[[],60],[[],60]],"p":[[3,"EventSubsystem"],[8,"EventWatchCallback"],[3,"EventWatch"],[3,"GameControllerSubsystem"],[15,"str"],[4,"MappingStatus"],[4,"AddMappingError"],[4,"Result"],[3,"TimerSubsystem"],[15,"u32"],[6,"TimerCallback"],[3,"Timer"],[3,"Sdl"],[3,"AudioSubsystem"],[3,"String"],[3,"VideoSubsystem"],[3,"ClipboardUtil"],[4,"Error"],[3,"HapticSubsystem"],[3,"JoystickSubsystem"],[3,"SensorSubsystem"],[4,"IntegerOrSdlError"],[15,"i32"],[3,"DisplayMode"],[3,"Guid"],[3,"EventPump"],[4,"EventType"],[15,"bool"],[3,"Rect"],[4,"Orientation"],[3,"EventSender"],[3,"Formatter"],[6,"Result"],[3,"GLAttr"],[4,"SwapInterval"],[3,"Path"],[8,"AsRef"],[8,"Into"],[3,"KeyboardUtil"],[3,"KeyboardState"],[3,"RWops"],[3,"MouseUtil"],[3,"MouseState"],[4,"Option"],[3,"GameController"],[3,"Joystick"],[3,"AudioSpecDesired"],[3,"AudioDevice"],[3,"Haptic"],[3,"AudioQueue"],[15,"u64"],[4,"Event"],[3,"EventPollIterator"],[3,"Demand"],[8,"Any"],[3,"Vec"],[3,"RelativeMouseState"],[3,"NulError"],[3,"TextInputUtil"],[3,"TypeId"],[3,"EventWaitIterator"],[3,"EventWaitTimeoutIterator"],[3,"WindowBuilder"],[4,"AudioFormat"],[3,"AudioSpecWAV"],[3,"AudioCVT"],[15,"usize"],[8,"AudioFormatNum"],[4,"AudioStatus"],[3,"DriverIterator"],[3,"AudioSpec"],[8,"AudioCallback"],[15,"u8"],[3,"AudioDeviceLockGuard"],[4,"Axis"],[15,"i16"],[4,"Button"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[15,"u16"],[4,"DisplayEvent"],[4,"WindowEvent"],[4,"PrefPathError"],[15,"f32"],[4,"Hint"],[4,"PowerLevel"],[4,"HatState"],[3,"Error"],[4,"SDL_JoystickPowerLevel"],[3,"SDL_JoystickGUID"],[3,"Mod"],[4,"Keycode"],[4,"Scancode"],[4,"Ordering"],[8,"IntoIterator"],[3,"Window"],[3,"ScancodeIterator"],[3,"PressedScancodeIterator"],[4,"Category"],[4,"Priority"],[3,"MessageBoxFlag"],[3,"MessageBoxButtonFlag"],[4,"ShowMessageError"],[3,"MessageBoxColorScheme"],[3,"ButtonData"],[4,"ClickedButton"],[3,"SDL_MessageBoxColorScheme"],[4,"SystemCursor"],[4,"MouseWheelDirection"],[4,"MouseButton"],[3,"Cursor"],[3,"SurfaceRef"],[3,"MouseButtonIterator"],[3,"PressedMouseButtonIterator"],[3,"Color"],[4,"PixelFormatEnum"],[3,"Palette"],[3,"SDL_Color"],[3,"PixelFormat"],[3,"SDL_PixelFormat"],[3,"PixelMasks"],[3,"SDL_Palette"],[3,"Point"],[3,"SDL_Rect"],[3,"SDL_Point"],[8,"Iterator"],[3,"CanvasBuilder"],[3,"Texture"],[8,"RenderTarget"],[3,"Canvas"],[4,"BlendMode"],[6,"WindowCanvas"],[3,"SdlError"],[4,"TargetRenderError"],[4,"TextureAccess"],[3,"RendererInfo"],[4,"TextureValueError"],[3,"TextureQuery"],[4,"UpdateTextureError"],[4,"UpdateTextureYUVError"],[3,"DriverIterator"],[15,"f64"],[3,"TextureCreator"],[3,"RendererContext"],[3,"SDL_Renderer"],[3,"Rc"],[3,"SDL_RendererInfo"],[3,"Surface"],[8,"FnOnce"],[3,"SDL_Texture"],[3,"WindowContext"],[3,"SurfaceContext"],[6,"Result"],[3,"SDL_RWops"],[4,"SeekFrom"],[3,"SDL_Surface"],[6,"TouchDevice"],[6,"Finger"],[4,"OpenUrlError"],[3,"Version"],[3,"SDL_version"],[4,"WindowBuildError"],[4,"GLProfile"],[4,"FullscreenType"],[4,"WindowPos"],[3,"DriverIterator"],[3,"WindowSurfaceRef"],[3,"GLContext"],[3,"SDL_Window"],[3,"SDL_DisplayMode"],[4,"SDL_DisplayOrientation"],[6,"SDL_GLContext"],[6,"VkInstance"],[6,"VkSurfaceKHR"],[3,"ContextFlags"],[3,"ContextFlagsBuilder"],[13,"ControllerAxisMotion"],[13,"JoyAxisMotion"],[13,"JoyBallMotion"],[13,"ControllerButtonDown"],[13,"ControllerButtonUp"],[13,"JoyButtonDown"],[13,"JoyButtonUp"],[13,"MouseButtonDown"],[13,"MouseButtonUp"],[13,"User"],[13,"MultiGesture"],[13,"MouseWheel"],[13,"Display"],[13,"FingerDown"],[13,"FingerUp"],[13,"FingerMotion"],[13,"DollarGesture"],[13,"DollarRecord"],[13,"DropFile"],[13,"DropText"],[13,"JoyHatMotion"],[13,"AudioDeviceAdded"],[13,"AudioDeviceRemoved"],[13,"KeyDown"],[13,"KeyUp"],[13,"TextEditing"],[13,"MouseMotion"],[13,"TextInput"],[13,"Quit"],[13,"AppTerminating"],[13,"AppLowMemory"],[13,"AppWillEnterBackground"],[13,"AppDidEnterBackground"],[13,"AppWillEnterForeground"],[13,"AppDidEnterForeground"],[13,"Window"],[13,"JoyDeviceAdded"],[13,"JoyDeviceRemoved"],[13,"ControllerDeviceAdded"],[13,"ControllerDeviceRemoved"],[13,"ControllerDeviceRemapped"],[13,"ClipboardUpdate"],[13,"DropBegin"],[13,"DropComplete"],[13,"RenderTargetsReset"],[13,"RenderDeviceReset"],[13,"Unknown"],[13,"InvalidPlaneLength"],[13,"PitchOverflows"]],"a":{"sdl_addtimer":[21],"sdl_allocformat":[2311],"sdl_allocpalette":[2298],"sdl_buildaudiocvt":[405],"sdl_capturemouse":[2069],"sdl_clearerror":[50],"sdl_clearqueuedaudio":[345],"sdl_convertaudio":[359],"sdl_convertsurface":[2795],"sdl_convertsurfaceformat":[2796],"sdl_createcolorcursor":[2104],"sdl_createcursor":[2131],"sdl_createrenderer":[2514],"sdl_creatergbsurface":[2812],"sdl_creatergbsurfacefrom":[2808],"sdl_createsoftwarerenderer":[2603],"sdl_createsystemcursor":[2105],"sdl_createtexturefromsurface":[2541],"sdl_createwindow":[2978],"sdl_delay":[81],"sdl_destroyrenderer":[2561],"sdl_destroytexture":[2562],"sdl_destroywindow":[3004],"sdl_disablescreensaver":[87],"sdl_enablescreensaver":[96],"sdl_enclosepoints":[2369],"sdl_error":[218],"sdl_eventstate":[86,95,159],"sdl_fillrect":[2802],"sdl_flushevent":[106],"sdl_flushevents":[107],"sdl_freecursor":[2080],"sdl_freepalette":[2267],"sdl_freesurface":[2800],"sdl_freewav":[363],"sdl_gamecontrolleraddmapping":[20],"sdl_gamecontrolleraddmappingsfromrw":[169],"sdl_gamecontrollerclose":[539],"sdl_gamecontrollereventstate":[103,219],"sdl_gamecontrollergetattached":[517],"sdl_gamecontrollergetaxis":[518],"sdl_gamecontrollergetaxisfromstring":[555],"sdl_gamecontrollergetbutton":[529],"sdl_gamecontrollergetbuttonfromstring":[556],"sdl_gamecontrollergetjoystick":[560],"sdl_gamecontrollergetstringforaxis":[570],"sdl_gamecontrollergetstringforbutton":[571],"sdl_gamecontrollermapping":[566],"sdl_gamecontrollermappingforguid":[171],"sdl_gamecontrollername":[567],"sdl_gamecontrollernameforindex":[176],"sdl_gamecontrolleropen":[184],"sdl_gamecontrollerrumble":[569],"sdl_gamecontrollerupdate":[276],"sdl_getaudiodevicename":[24,25],"sdl_getaudiodevicestatus":[428,429],"sdl_getaudiodriver":[303,362],"sdl_getbasepath":[1034],"sdl_getclipboardtext":[471],"sdl_getcliprect":[2791],"sdl_getclosestdisplaymode":[75],"sdl_getcolorkey":[2792],"sdl_getcpucachelinesize":[596],"sdl_getcpucount":[597],"sdl_getcurrentaudiodriver":[78],"sdl_getcurrentdisplaymode":[79],"sdl_getcurrentvideodriver":[80],"sdl_getdesktopdisplaymode":[84],"sdl_getdisplaybounds":[88],"sdl_getdisplaydpi":[89],"sdl_getdisplaymode":[90],"sdl_getdisplayname":[91],"sdl_getdisplayorientation":[92],"sdl_getdisplayusablebounds":[93],"sdl_geterror":[146],"sdl_gethint":[1070],"sdl_getkeyboardfocus":[1715],"sdl_getkeyboardstate":[1759],"sdl_getkeyfromname":[1731],"sdl_getkeyfromscancode":[1733],"sdl_getkeyname":[1757],"sdl_getmodstate":[1756],"sdl_getmousefocus":[2090],"sdl_getmousestate":[2133],"sdl_getnumaudiodevices":[178,179],"sdl_getnumdisplaymodes":[180],"sdl_getnumrenderdrivers":[2560],"sdl_getnumtouchdevices":[2865],"sdl_getnumtouchfingers":[2866],"sdl_getnumvideodisplays":[183],"sdl_getperformancecounter":[191],"sdl_getperformancefrequency":[192],"sdl_getplatform":[131],"sdl_getprefpath":[1044],"sdl_getqueuedaudiosize":[421],"sdl_getrelativemousemode":[2138],"sdl_getrelativemousestate":[2132],"sdl_getrenderdrawblendmode":[2482],"sdl_getrenderdrawcolor":[2553],"sdl_getrenderdriverinfo":[2639],"sdl_getrendererinfo":[2614],"sdl_getrendereroutputsize":[2640],"sdl_getrevision":[2903],"sdl_getrevisionnumber":[2904],"sdl_getrgba":[2283],"sdl_getscancodefromkey":[1730],"sdl_getscancodefromname":[1732],"sdl_getscancodename":[1758],"sdl_getsurfacealphamod":[2777],"sdl_getsurfaceblendmode":[2782],"sdl_getsurfacecolormod":[2793],"sdl_getsystemram":[610],"sdl_getticks":[223],"sdl_gettouchdevice":[2867],"sdl_gettouchfinger":[2868],"sdl_getversion":[2910],"sdl_getvideodriver":[2916,3002],"sdl_getwindowborderssize":[2949],"sdl_getwindowbrightness":[2977],"sdl_getwindowdisplayindex":[2999],"sdl_getwindowdisplaymode":[3000],"sdl_getwindowflags":[3180],"sdl_getwindowgammaramp":[3047],"sdl_getwindowgrab":[3054],"sdl_getwindowid":[3064],"sdl_getwindowmaximumsize":[3084],"sdl_getwindowminimumsize":[3087],"sdl_getwindowopacity":[3091],"sdl_getwindowpixelformat":[3182],"sdl_getwindowposition":[3093],"sdl_getwindowsize":[3118],"sdl_getwindowsurface":[3121],"sdl_getwindowtitle":[3122],"sdl_gl_createcontext":[3049],"sdl_gl_deletecontext":[3003],"sdl_gl_extensionsupported":[133],"sdl_gl_getcurrentcontext":[3050,3081],"sdl_gl_getcurrentwindow":[134],"sdl_gl_getdrawablesize":[3001],"sdl_gl_getprocaddress":[135],"sdl_gl_getswapinterval":[136],"sdl_gl_loadlibrary":[137,138],"sdl_gl_makecurrent":[139,3051,3052],"sdl_gl_setswapinterval":[140],"sdl_gl_swapwindow":[3053],"sdl_gl_unloadlibrary":[141],"sdl_hapticclose":[1054],"sdl_hapticrumbleplay":[1059],"sdl_hapticrumblestop":[1058],"sdl_has3dnow":[598],"sdl_hasaltivec":[599],"sdl_hasavx":[600],"sdl_hasavx2":[601],"sdl_hasavx512f":[602],"sdl_hasclipboardtext":[473],"sdl_hasintersection":[2372],"sdl_hasmmx":[603],"sdl_hasrdtsc":[604],"sdl_hasscreenkeyboardsupport":[1734],"sdl_hassse":[605],"sdl_hassse2":[606],"sdl_hassse3":[607],"sdl_hassse41":[608],"sdl_hassse42":[609],"sdl_hidewindow":[3063],"sdl_intersectrect":[2377],"sdl_intersectrectandline":[2376],"sdl_isgamecontroller":[160],"sdl_isscreenkeyboardshown":[1755],"sdl_isscreensaverenabled":[161],"sdl_istextinputactive":[1751],"sdl_joystickclose":[1117],"sdl_joystickcurrentpowerlevel":[1146],"sdl_joystickeventstate":[104,220],"sdl_joystickgetattached":[1099],"sdl_joystickgetaxis":[1100],"sdl_joystickgetball":[1101],"sdl_joystickgetbutton":[1110],"sdl_joystickgetdeviceguid":[85],"sdl_joystickgetguid":[1131],"sdl_joystickgetguidfromstring":[1130],"sdl_joystickgetguidstring":[1149],"sdl_joystickgethat":[1134],"sdl_joystickinstanceid":[1135],"sdl_joystickname":[1141],"sdl_joysticknameforindex":[177],"sdl_joysticknumaxes":[1142],"sdl_joysticknumballs":[1143],"sdl_joysticknumbuttons":[1144],"sdl_joysticknumhats":[1145],"sdl_joystickopen":[185,187],"sdl_joystickrumble":[1148],"sdl_joystickupdate":[277],"sdl_loadbmp_rw":[2819],"sdl_loadwav_rw":[403],"sdl_lockaudiodevice":[404],"sdl_locksurface":[2848,2849],"sdl_log":[1844],"sdl_logsetoutputfunction":[1845],"sdl_maprgba":[2308],"sdl_maskstopixelformatenum":[2282],"sdl_maximizewindow":[3082],"sdl_minimizewindow":[3085],"sdl_numjoysticks":[181,182],"sdl_openaudiodevice":[409],"sdl_openurl":[2881],"sdl_pauseaudiodevice":[410,411,414,415],"sdl_peepevents":[190],"sdl_pixelformatenumtomasks":[2294],"sdl_point":[2335,2398],"sdl_pumpevents":[198],"sdl_pushevent":[824],"sdl_queueaudio":[412,413],"sdl_quitsubsystem":[94],"sdl_raisewindow":[3097],"sdl_rect":[2397],"sdl_removetimer":[2856],"sdl_renderclear":[2515],"sdl_rendercopy":[2538],"sdl_rendercopyex":[2539],"sdl_renderdrawline":[2554],"sdl_renderdrawlines":[2555],"sdl_renderdrawpoint":[2556],"sdl_renderdrawpoints":[2557],"sdl_renderdrawrect":[2558],"sdl_renderdrawrects":[2559],"sdl_renderfillrect":[2567],"sdl_renderfillrects":[2568],"sdl_renderflush":[2655],"sdl_rendergetcliprect":[2516],"sdl_rendergetintegerscale":[2615],"sdl_rendergetlogicalsize":[2634],"sdl_rendergetscale":[2657],"sdl_rendergetviewport":[2740],"sdl_renderpresent":[2641],"sdl_renderreadpixels":[2654],"sdl_rendersetcliprect":[2661],"sdl_rendersetintegerscale":[2664],"sdl_rendersetlogicalsize":[2665],"sdl_rendersetscale":[2666],"sdl_rendersetviewport":[2667],"sdl_rendertargetsupported":[2656],"sdl_restorewindow":[3102],"sdl_rwfromconstmem":[2759],"sdl_rwfromfile":[2761],"sdl_rwfrommem":[2760],"sdl_savebmp_rw":[2830],"sdl_setclipboardtext":[475],"sdl_setcliprect":[2833],"sdl_setcolorkey":[2834],"sdl_setcursor":[2141],"sdl_seterror":[217],"sdl_sethint":[1073],"sdl_sethintwithpriority":[1076],"sdl_setmodstate":[1768],"sdl_setpalettecolors":[2326],"sdl_setrelativemousemode":[2142],"sdl_setrenderdrawblendmode":[2659],"sdl_setrenderdrawcolor":[2663],"sdl_setsurfacealphamod":[2831],"sdl_setsurfaceblendmode":[2832],"sdl_setsurfacecolormod":[2835],"sdl_setsurfacepalette":[2836],"sdl_setsurfacerle":[2799,2801],"sdl_settextinputrect":[1769],"sdl_setwindowbordered":[3103],"sdl_setwindowbrightness":[3104],"sdl_setwindowdisplaymode":[3105],"sdl_setwindowfullscreen":[3106],"sdl_setwindowgammaramp":[3107],"sdl_setwindowgrab":[3108],"sdl_setwindowicon":[3109],"sdl_setwindowmaximumsize":[3110],"sdl_setwindowminimumsize":[3111],"sdl_setwindowopacity":[3112],"sdl_setwindowposition":[3113],"sdl_setwindowsize":[3114],"sdl_setwindowtitle":[3115],"sdl_showcursor":[2122,2143],"sdl_showmessagebox":[1985],"sdl_showsimplemessagebox":[1986],"sdl_showwindow":[3117],"sdl_starttextinput":[1770],"sdl_stoptextinput":[1771],"sdl_surface":[2827],"sdl_unionrect":[2424],"sdl_unlockaudiodevice":[360],"sdl_updatewindowsurface":[3173],"sdl_updatewindowsurfacerects":[3174],"sdl_upperblit":[2783],"sdl_upperblitscaled":[2784],"sdl_vulkan_createsurface":[3176],"sdl_vulkan_getdrawablesize":[3177],"sdl_vulkan_getinstanceextensions":[3178],"sdl_vulkan_getvkgetinstanceprocaddr":[282],"sdl_vulkan_loadlibrary":[283,284],"sdl_vulkan_unloadlibrary":[285],"sdl_warpmouseinwindow":[2179]}},\
"sdl2_sys":{"doc":"This crate was mainly generated by <code>bindgen</code>. It should be …","tn":["AUDIO_F32","AUDIO_F32LSB","AUDIO_F32MSB","AUDIO_F32SYS","AUDIO_S16","AUDIO_S16LSB","AUDIO_S16MSB","AUDIO_S16SYS","AUDIO_S32","AUDIO_S32LSB","AUDIO_S32MSB","AUDIO_S32SYS","AUDIO_S8","AUDIO_U16","AUDIO_U16LSB","AUDIO_U16MSB","AUDIO_U16SYS","AUDIO_U8","Above","AllTemporary","AllocAll","AllocNone","AllowExposures","Aloss","AlreadyGrabbed","Always","Amask","AnyButton","AnyKey","AnyModifier","AnyPropertyType","ArcChord","ArcPieSlice","Ashift","AsyncBoth","AsyncKeyboard","AsyncPointer","Atom","AutoRepeatModeDefault","AutoRepeatModeOff","AutoRepeatModeOn","BIG_ENDIAN","BYTE_ORDER","BadAccess","BadAlloc","BadAtom","BadColor","BadCursor","BadDrawable","BadFont","BadGC","BadIDChoice","BadImplementation","BadLength","BadMatch","BadName","BadPixmap","BadRequest","BadValue","BadWindow","Below","BitsPerPixel","Bloss","Bmask","BottomIf","Bshift","Button1","Button1Mask","Button1MotionMask","Button2","Button2Mask","Button2MotionMask","Button3","Button3Mask","Button3MotionMask","Button4","Button4Mask","Button4MotionMask","Button5","Button5Mask","Button5MotionMask","ButtonMotionMask","ButtonPress","ButtonPressMask","ButtonRelease","ButtonReleaseMask","BytesPerPixel","CWBackPixel","CWBackPixmap","CWBackingPixel","CWBackingPlanes","CWBackingStore","CWBitGravity","CWBorderPixel","CWBorderPixmap","CWBorderWidth","CWColormap","CWCursor","CWDontPropagate","CWEventMask","CWHeight","CWOverrideRedirect","CWSaveUnder","CWSibling","CWStackMode","CWWidth","CWWinGravity","CWX","CWY","CapButt","CapNotLast","CapProjecting","CapRound","CenterGravity","CirculateNotify","CirculateRequest","ClientMessage","ClipByChildren","Colormap","ColormapChangeMask","ColormapInstalled","ColormapNotify","ColormapUninstalled","Complex","ConfigureNotify","ConfigureRequest","ControlMapIndex","ControlMask","Convex","CoordModeOrigin","CoordModePrevious","CopyFromParent","CreateNotify","CurrentTime","Cursor","CursorShape","DUMMY_ENUM_VALUE","DefaultBlanking","DefaultExposures","Depth","DestroyAll","DestroyNotify","DirectColor","DisableAccess","DisableScreenInterval","DisableScreenSaver","Display","DoBlue","DoGreen","DoRed","DontAllowExposures","DontPreferBlanking","Drawable","EXIT_FAILURE","EXIT_SUCCESS","EastGravity","EnableAccess","EnterNotify","EnterWindowMask","EvenOddRule","Expose","ExposureMask","FD_SETSIZE","FUNCPROTO","False","FamilyChaos","FamilyDECnet","FamilyInternet","FamilyInternet6","FamilyServerInterpreted","FillOpaqueStippled","FillSolid","FillStippled","FillTiled","FirstExtensionError","FocusChangeMask","FocusIn","FocusOut","Font","FontChange","FontLeftToRight","FontRightToLeft","ForgetGravity","GC","GCArcMode","GCBackground","GCCapStyle","GCClipMask","GCClipXOrigin","GCClipYOrigin","GCDashList","GCDashOffset","GCFillRule","GCFillStyle","GCFont","GCForeground","GCFunction","GCGraphicsExposures","GCJoinStyle","GCLastBit","GCLineStyle","GCLineWidth","GCPlaneMask","GCStipple","GCSubwindowMode","GCTile","GCTileStipXOrigin","GCTileStipYOrigin","GContext","GXand","GXandInverted","GXandReverse","GXclear","GXcopy","GXcopyInverted","GXequiv","GXinvert","GXnand","GXnoop","GXnor","GXor","GXorInverted","GXorReverse","GXset","GXxor","GenericEvent","Gloss","Gmask","GrabFrozen","GrabInvalidTime","GrabModeAsync","GrabModeSync","GrabNotViewable","GrabSuccess","GraphicsExpose","GravityNotify","GrayScale","Gshift","HAVE_GCC_SYNC_LOCK_TEST_AND_SET","HAVE_STDARG_H","HAVE_STDDEF_H","HAVE_STDINT_H","HostDelete","HostInsert","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","IncludeInferiors","InputFocus","InputOnly","InputOutput","IsUnmapped","IsUnviewable","IsViewable","JoinBevel","JoinMiter","JoinRound","KBAutoRepeatMode","KBBellDuration","KBBellPercent","KBBellPitch","KBKey","KBKeyClickPercent","KBLed","KBLedMode","KMOD_ALT","KMOD_CAPS","KMOD_CTRL","KMOD_GUI","KMOD_LALT","KMOD_LCTRL","KMOD_LGUI","KMOD_LSHIFT","KMOD_MODE","KMOD_NONE","KMOD_NUM","KMOD_RALT","KMOD_RCTRL","KMOD_RESERVED","KMOD_RGUI","KMOD_RSHIFT","KMOD_SHIFT","KeyCode","KeyPress","KeyPressMask","KeyRelease","KeyReleaseMask","KeySym","KeymapNotify","KeymapStateMask","LASTEvent","LITTLE_ENDIAN","LSBFirst","LastExtensionError","LeaveNotify","LeaveWindowMask","LedModeOff","LedModeOn","LineDoubleDash","LineOnOffDash","LineSolid","LockMapIndex","LockMask","LowerHighest","MSBFirst","M_PI","MapNotify","MapRequest","MappingBusy","MappingFailed","MappingKeyboard","MappingModifier","MappingNotify","MappingPointer","MappingSuccess","Mask","Mod1MapIndex","Mod1Mask","Mod2MapIndex","Mod2Mask","Mod3MapIndex","Mod3Mask","Mod4MapIndex","Mod4Mask","Mod5MapIndex","Mod5Mask","MotionNotify","NeedFunctionPrototypes","NeedNestedPrototypes","NeedVarargsPrototypes","NeedWidePrototypes","NoEventMask","NoExpose","NoSymbol","Nonconvex","None","NorthEastGravity","NorthGravity","NorthWestGravity","NotUseful","NotifyAncestor","NotifyDetailNone","NotifyGrab","NotifyHint","NotifyInferior","NotifyNonlinear","NotifyNonlinearVirtual","NotifyNormal","NotifyPointer","NotifyPointerRoot","NotifyUngrab","NotifyVirtual","NotifyWhileGrabbed","Opposite","OwnerGrabButtonMask","PDP_ENDIAN","PTRDIFF_MAX","PTRDIFF_MIN","ParentRelative","Pixmap","PlaceOnBottom","PlaceOnTop","PointerMotionHintMask","PointerMotionMask","PointerRoot","PointerWindow","PreferBlanking","PropModeAppend","PropModePrepend","PropModeReplace","PropertyChangeMask","PropertyDelete","PropertyNewValue","PropertyNotify","PseudoColor","QueuedAfterFlush","QueuedAfterReading","QueuedAlready","RAND_MAX","RW_SEEK_CUR","RW_SEEK_END","RW_SEEK_SET","RaiseLowest","ReparentNotify","ReplayKeyboard","ReplayPointer","ResizeRedirectMask","ResizeRequest","RetainPermanent","RetainTemporary","RevertToParent","Rloss","Rmask","Rshift","SDLK_0","SDLK_1","SDLK_2","SDLK_3","SDLK_4","SDLK_5","SDLK_6","SDLK_7","SDLK_8","SDLK_9","SDLK_AC_BACK","SDLK_AC_BOOKMARKS","SDLK_AC_FORWARD","SDLK_AC_HOME","SDLK_AC_REFRESH","SDLK_AC_SEARCH","SDLK_AC_STOP","SDLK_AGAIN","SDLK_ALTERASE","SDLK_AMPERSAND","SDLK_APP1","SDLK_APP2","SDLK_APPLICATION","SDLK_ASTERISK","SDLK_AT","SDLK_AUDIOFASTFORWARD","SDLK_AUDIOMUTE","SDLK_AUDIONEXT","SDLK_AUDIOPLAY","SDLK_AUDIOPREV","SDLK_AUDIOREWIND","SDLK_AUDIOSTOP","SDLK_BACKQUOTE","SDLK_BACKSLASH","SDLK_BACKSPACE","SDLK_BRIGHTNESSDOWN","SDLK_BRIGHTNESSUP","SDLK_CALCULATOR","SDLK_CANCEL","SDLK_CAPSLOCK","SDLK_CARET","SDLK_CLEAR","SDLK_CLEARAGAIN","SDLK_COLON","SDLK_COMMA","SDLK_COMPUTER","SDLK_COPY","SDLK_CRSEL","SDLK_CURRENCYSUBUNIT","SDLK_CURRENCYUNIT","SDLK_CUT","SDLK_DECIMALSEPARATOR","SDLK_DELETE","SDLK_DISPLAYSWITCH","SDLK_DOLLAR","SDLK_DOWN","SDLK_EJECT","SDLK_END","SDLK_EQUALS","SDLK_ESCAPE","SDLK_EXCLAIM","SDLK_EXECUTE","SDLK_EXSEL","SDLK_F1","SDLK_F10","SDLK_F11","SDLK_F12","SDLK_F13","SDLK_F14","SDLK_F15","SDLK_F16","SDLK_F17","SDLK_F18","SDLK_F19","SDLK_F2","SDLK_F20","SDLK_F21","SDLK_F22","SDLK_F23","SDLK_F24","SDLK_F3","SDLK_F4","SDLK_F5","SDLK_F6","SDLK_F7","SDLK_F8","SDLK_F9","SDLK_FIND","SDLK_GREATER","SDLK_HASH","SDLK_HELP","SDLK_HOME","SDLK_INSERT","SDLK_KBDILLUMDOWN","SDLK_KBDILLUMTOGGLE","SDLK_KBDILLUMUP","SDLK_KP_0","SDLK_KP_00","SDLK_KP_000","SDLK_KP_1","SDLK_KP_2","SDLK_KP_3","SDLK_KP_4","SDLK_KP_5","SDLK_KP_6","SDLK_KP_7","SDLK_KP_8","SDLK_KP_9","SDLK_KP_A","SDLK_KP_AMPERSAND","SDLK_KP_AT","SDLK_KP_B","SDLK_KP_BACKSPACE","SDLK_KP_BINARY","SDLK_KP_C","SDLK_KP_CLEAR","SDLK_KP_CLEARENTRY","SDLK_KP_COLON","SDLK_KP_COMMA","SDLK_KP_D","SDLK_KP_DBLAMPERSAND","SDLK_KP_DBLVERTICALBAR","SDLK_KP_DECIMAL","SDLK_KP_DIVIDE","SDLK_KP_E","SDLK_KP_ENTER","SDLK_KP_EQUALS","SDLK_KP_EQUALSAS400","SDLK_KP_EXCLAM","SDLK_KP_F","SDLK_KP_GREATER","SDLK_KP_HASH","SDLK_KP_HEXADECIMAL","SDLK_KP_LEFTBRACE","SDLK_KP_LEFTPAREN","SDLK_KP_LESS","SDLK_KP_MEMADD","SDLK_KP_MEMCLEAR","SDLK_KP_MEMDIVIDE","SDLK_KP_MEMMULTIPLY","SDLK_KP_MEMRECALL","SDLK_KP_MEMSTORE","SDLK_KP_MEMSUBTRACT","SDLK_KP_MINUS","SDLK_KP_MULTIPLY","SDLK_KP_OCTAL","SDLK_KP_PERCENT","SDLK_KP_PERIOD","SDLK_KP_PLUS","SDLK_KP_PLUSMINUS","SDLK_KP_POWER","SDLK_KP_RIGHTBRACE","SDLK_KP_RIGHTPAREN","SDLK_KP_SPACE","SDLK_KP_TAB","SDLK_KP_VERTICALBAR","SDLK_KP_XOR","SDLK_LALT","SDLK_LCTRL","SDLK_LEFT","SDLK_LEFTBRACKET","SDLK_LEFTPAREN","SDLK_LESS","SDLK_LGUI","SDLK_LSHIFT","SDLK_MAIL","SDLK_MEDIASELECT","SDLK_MENU","SDLK_MINUS","SDLK_MODE","SDLK_MUTE","SDLK_NUMLOCKCLEAR","SDLK_OPER","SDLK_OUT","SDLK_PAGEDOWN","SDLK_PAGEUP","SDLK_PASTE","SDLK_PAUSE","SDLK_PERCENT","SDLK_PERIOD","SDLK_PLUS","SDLK_POWER","SDLK_PRINTSCREEN","SDLK_PRIOR","SDLK_QUESTION","SDLK_QUOTE","SDLK_QUOTEDBL","SDLK_RALT","SDLK_RCTRL","SDLK_RETURN","SDLK_RETURN2","SDLK_RGUI","SDLK_RIGHT","SDLK_RIGHTBRACKET","SDLK_RIGHTPAREN","SDLK_RSHIFT","SDLK_SCANCODE_MASK","SDLK_SCROLLLOCK","SDLK_SELECT","SDLK_SEMICOLON","SDLK_SEPARATOR","SDLK_SLASH","SDLK_SLEEP","SDLK_SPACE","SDLK_STOP","SDLK_SYSREQ","SDLK_TAB","SDLK_THOUSANDSSEPARATOR","SDLK_UNDERSCORE","SDLK_UNDO","SDLK_UNKNOWN","SDLK_UP","SDLK_VOLUMEDOWN","SDLK_VOLUMEUP","SDLK_WWW","SDLK_a","SDLK_b","SDLK_c","SDLK_d","SDLK_e","SDLK_f","SDLK_g","SDLK_h","SDLK_i","SDLK_j","SDLK_k","SDLK_l","SDLK_m","SDLK_n","SDLK_o","SDLK_p","SDLK_q","SDLK_r","SDLK_s","SDLK_t","SDLK_u","SDLK_v","SDLK_w","SDLK_x","SDLK_y","SDLK_z","SDL_ADDEVENT","SDL_ALPHA_OPAQUE","SDL_ALPHA_TRANSPARENT","SDL_APP_DIDENTERBACKGROUND","SDL_APP_DIDENTERFOREGROUND","SDL_APP_LOWMEMORY","SDL_APP_TERMINATING","SDL_APP_WILLENTERBACKGROUND","SDL_APP_WILLENTERFOREGROUND","SDL_ARRAYORDER_ABGR","SDL_ARRAYORDER_ARGB","SDL_ARRAYORDER_BGR","SDL_ARRAYORDER_BGRA","SDL_ARRAYORDER_NONE","SDL_ARRAYORDER_RGB","SDL_ARRAYORDER_RGBA","SDL_ASSERTION_ABORT","SDL_ASSERTION_ALWAYS_IGNORE","SDL_ASSERTION_BREAK","SDL_ASSERTION_IGNORE","SDL_ASSERTION_RETRY","SDL_ASSERT_LEVEL","SDL_AUDIOCVT_MAX_FILTERS","SDL_AUDIODEVICEADDED","SDL_AUDIODEVICEREMOVED","SDL_AUDIO_ALLOW_ANY_CHANGE","SDL_AUDIO_ALLOW_CHANNELS_CHANGE","SDL_AUDIO_ALLOW_FORMAT_CHANGE","SDL_AUDIO_ALLOW_FREQUENCY_CHANGE","SDL_AUDIO_ALLOW_SAMPLES_CHANGE","SDL_AUDIO_DRIVER_DUMMY","SDL_AUDIO_MASK_BITSIZE","SDL_AUDIO_MASK_DATATYPE","SDL_AUDIO_MASK_ENDIAN","SDL_AUDIO_MASK_SIGNED","SDL_AUDIO_PAUSED","SDL_AUDIO_PLAYING","SDL_AUDIO_STOPPED","SDL_AddEventWatch","SDL_AddHintCallback","SDL_AddTimer","SDL_AllocFormat","SDL_AllocPalette","SDL_AllocRW","SDL_ArrayOrder","SDL_AssertData","SDL_AssertState","SDL_AssertionHandler","SDL_AtomicAdd","SDL_AtomicCAS","SDL_AtomicCASPtr","SDL_AtomicGet","SDL_AtomicGetPtr","SDL_AtomicLock","SDL_AtomicSet","SDL_AtomicSetPtr","SDL_AtomicTryLock","SDL_AtomicUnlock","SDL_AudioCVT","SDL_AudioCallback","SDL_AudioDeviceEvent","SDL_AudioDeviceID","SDL_AudioFilter","SDL_AudioFormat","SDL_AudioInit","SDL_AudioQuit","SDL_AudioSpec","SDL_AudioStatus","SDL_AudioStream","SDL_AudioStreamAvailable","SDL_AudioStreamClear","SDL_AudioStreamFlush","SDL_AudioStreamGet","SDL_AudioStreamPut","SDL_BIG_ENDIAN","SDL_BITMAPORDER_1234","SDL_BITMAPORDER_4321","SDL_BITMAPORDER_NONE","SDL_BLENDFACTOR_DST_ALPHA","SDL_BLENDFACTOR_DST_COLOR","SDL_BLENDFACTOR_ONE","SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA","SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR","SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA","SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR","SDL_BLENDFACTOR_SRC_ALPHA","SDL_BLENDFACTOR_SRC_COLOR","SDL_BLENDFACTOR_ZERO","SDL_BLENDMODE_ADD","SDL_BLENDMODE_BLEND","SDL_BLENDMODE_INVALID","SDL_BLENDMODE_MOD","SDL_BLENDMODE_MUL","SDL_BLENDMODE_NONE","SDL_BLENDOPERATION_ADD","SDL_BLENDOPERATION_MAXIMUM","SDL_BLENDOPERATION_MINIMUM","SDL_BLENDOPERATION_REV_SUBTRACT","SDL_BLENDOPERATION_SUBTRACT","SDL_BUTTON_LEFT","SDL_BUTTON_MIDDLE","SDL_BUTTON_RIGHT","SDL_BUTTON_X1","SDL_BUTTON_X2","SDL_BYTEORDER","SDL_BitmapOrder","SDL_BlendFactor","SDL_BlendMode","SDL_BlendOperation","SDL_BlitMap","SDL_BuildAudioCVT","SDL_CACHELINE_SIZE","SDL_CLIPBOARDUPDATE","SDL_CONTROLLERAXISMOTION","SDL_CONTROLLERBUTTONDOWN","SDL_CONTROLLERBUTTONUP","SDL_CONTROLLERDEVICEADDED","SDL_CONTROLLERDEVICEREMAPPED","SDL_CONTROLLERDEVICEREMOVED","SDL_CONTROLLERSENSORUPDATE","SDL_CONTROLLERTOUCHPADDOWN","SDL_CONTROLLERTOUCHPADMOTION","SDL_CONTROLLERTOUCHPADUP","SDL_CONTROLLER_AXIS_INVALID","SDL_CONTROLLER_AXIS_LEFTX","SDL_CONTROLLER_AXIS_LEFTY","SDL_CONTROLLER_AXIS_MAX","SDL_CONTROLLER_AXIS_RIGHTX","SDL_CONTROLLER_AXIS_RIGHTY","SDL_CONTROLLER_AXIS_TRIGGERLEFT","SDL_CONTROLLER_AXIS_TRIGGERRIGHT","SDL_CONTROLLER_BINDTYPE_AXIS","SDL_CONTROLLER_BINDTYPE_BUTTON","SDL_CONTROLLER_BINDTYPE_HAT","SDL_CONTROLLER_BINDTYPE_NONE","SDL_CONTROLLER_BUTTON_A","SDL_CONTROLLER_BUTTON_B","SDL_CONTROLLER_BUTTON_BACK","SDL_CONTROLLER_BUTTON_DPAD_DOWN","SDL_CONTROLLER_BUTTON_DPAD_LEFT","SDL_CONTROLLER_BUTTON_DPAD_RIGHT","SDL_CONTROLLER_BUTTON_DPAD_UP","SDL_CONTROLLER_BUTTON_GUIDE","SDL_CONTROLLER_BUTTON_INVALID","SDL_CONTROLLER_BUTTON_LEFTSHOULDER","SDL_CONTROLLER_BUTTON_LEFTSTICK","SDL_CONTROLLER_BUTTON_MAX","SDL_CONTROLLER_BUTTON_MISC1","SDL_CONTROLLER_BUTTON_PADDLE1","SDL_CONTROLLER_BUTTON_PADDLE2","SDL_CONTROLLER_BUTTON_PADDLE3","SDL_CONTROLLER_BUTTON_PADDLE4","SDL_CONTROLLER_BUTTON_RIGHTSHOULDER","SDL_CONTROLLER_BUTTON_RIGHTSTICK","SDL_CONTROLLER_BUTTON_START","SDL_CONTROLLER_BUTTON_TOUCHPAD","SDL_CONTROLLER_BUTTON_X","SDL_CONTROLLER_BUTTON_Y","SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO","SDL_CONTROLLER_TYPE_PS3","SDL_CONTROLLER_TYPE_PS4","SDL_CONTROLLER_TYPE_PS5","SDL_CONTROLLER_TYPE_UNKNOWN","SDL_CONTROLLER_TYPE_VIRTUAL","SDL_CONTROLLER_TYPE_XBOX360","SDL_CONTROLLER_TYPE_XBOXONE","SDL_CalculateGammaRamp","SDL_CaptureMouse","SDL_ClearError","SDL_ClearHints","SDL_ClearQueuedAudio","SDL_CloseAudio","SDL_CloseAudioDevice","SDL_Color","SDL_CommonEvent","SDL_ComposeCustomBlendMode","SDL_CondBroadcast","SDL_CondSignal","SDL_CondWait","SDL_CondWaitTimeout","SDL_ControllerAxisEvent","SDL_ControllerButtonEvent","SDL_ControllerDeviceEvent","SDL_ControllerSensorEvent","SDL_ControllerTouchpadEvent","SDL_ConvertAudio","SDL_ConvertPixels","SDL_ConvertSurface","SDL_ConvertSurfaceFormat","SDL_CreateColorCursor","SDL_CreateCond","SDL_CreateCursor","SDL_CreateMutex","SDL_CreateRGBSurface","SDL_CreateRGBSurfaceFrom","SDL_CreateRGBSurfaceWithFormat","SDL_CreateRGBSurfaceWithFormatFrom","SDL_CreateRenderer","SDL_CreateSemaphore","SDL_CreateShapedWindow","SDL_CreateSoftwareRenderer","SDL_CreateSystemCursor","SDL_CreateTexture","SDL_CreateTextureFromSurface","SDL_CreateThread","SDL_CreateThreadWithStackSize","SDL_CreateWindow","SDL_CreateWindowAndRenderer","SDL_CreateWindowFrom","SDL_Cursor","SDL_DISABLE","SDL_DISPLAYEVENT","SDL_DISPLAYEVENT_CONNECTED","SDL_DISPLAYEVENT_DISCONNECTED","SDL_DISPLAYEVENT_NONE","SDL_DISPLAYEVENT_ORIENTATION","SDL_DOLLARGESTURE","SDL_DOLLARRECORD","SDL_DONTFREE","SDL_DROPBEGIN","SDL_DROPCOMPLETE","SDL_DROPFILE","SDL_DROPTEXT","SDL_DUMMY_ENUM","SDL_DelEventWatch","SDL_DelHintCallback","SDL_Delay","SDL_DequeueAudio","SDL_DestroyCond","SDL_DestroyMutex","SDL_DestroyRenderer","SDL_DestroySemaphore","SDL_DestroyTexture","SDL_DestroyWindow","SDL_DetachThread","SDL_DisableScreenSaver","SDL_DisplayEvent","SDL_DisplayEventID","SDL_DisplayMode","SDL_DisplayOrientation","SDL_DollarGestureEvent","SDL_DropEvent","SDL_DuplicateSurface","SDL_EFREAD","SDL_EFSEEK","SDL_EFWRITE","SDL_ENABLE","SDL_ENOMEM","SDL_EnableScreenSaver","SDL_EnclosePoints","SDL_Error","SDL_Event","SDL_EventFilter","SDL_EventState","SDL_EventType","SDL_FALSE","SDL_FILESYSTEM_DUMMY","SDL_FINGERDOWN","SDL_FINGERMOTION","SDL_FINGERUP","SDL_FIRSTEVENT","SDL_FLIP_HORIZONTAL","SDL_FLIP_NONE","SDL_FLIP_VERTICAL","SDL_FPoint","SDL_FRect","SDL_FillRect","SDL_FillRects","SDL_FilterEvents","SDL_Finger","SDL_FingerID","SDL_FlushEvent","SDL_FlushEvents","SDL_FreeAudioStream","SDL_FreeCursor","SDL_FreeFormat","SDL_FreePalette","SDL_FreeRW","SDL_FreeSurface","SDL_FreeWAV","SDL_GETEVENT","SDL_GLContext","SDL_GLContextResetNotification","SDL_GL_ACCELERATED_VISUAL","SDL_GL_ACCUM_ALPHA_SIZE","SDL_GL_ACCUM_BLUE_SIZE","SDL_GL_ACCUM_GREEN_SIZE","SDL_GL_ACCUM_RED_SIZE","SDL_GL_ALPHA_SIZE","SDL_GL_BLUE_SIZE","SDL_GL_BUFFER_SIZE","SDL_GL_BindTexture","SDL_GL_CONTEXT_DEBUG_FLAG","SDL_GL_CONTEXT_EGL","SDL_GL_CONTEXT_FLAGS","SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG","SDL_GL_CONTEXT_MAJOR_VERSION","SDL_GL_CONTEXT_MINOR_VERSION","SDL_GL_CONTEXT_NO_ERROR","SDL_GL_CONTEXT_PROFILE_COMPATIBILITY","SDL_GL_CONTEXT_PROFILE_CORE","SDL_GL_CONTEXT_PROFILE_ES","SDL_GL_CONTEXT_PROFILE_MASK","SDL_GL_CONTEXT_RELEASE_BEHAVIOR","SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH","SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE","SDL_GL_CONTEXT_RESET_ISOLATION_FLAG","SDL_GL_CONTEXT_RESET_LOSE_CONTEXT","SDL_GL_CONTEXT_RESET_NOTIFICATION","SDL_GL_CONTEXT_RESET_NO_NOTIFICATION","SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG","SDL_GL_CreateContext","SDL_GL_DEPTH_SIZE","SDL_GL_DOUBLEBUFFER","SDL_GL_DeleteContext","SDL_GL_ExtensionSupported","SDL_GL_FRAMEBUFFER_SRGB_CAPABLE","SDL_GL_GREEN_SIZE","SDL_GL_GetAttribute","SDL_GL_GetCurrentContext","SDL_GL_GetCurrentWindow","SDL_GL_GetDrawableSize","SDL_GL_GetProcAddress","SDL_GL_GetSwapInterval","SDL_GL_LoadLibrary","SDL_GL_MULTISAMPLEBUFFERS","SDL_GL_MULTISAMPLESAMPLES","SDL_GL_MakeCurrent","SDL_GL_RED_SIZE","SDL_GL_RETAINED_BACKING","SDL_GL_ResetAttributes","SDL_GL_SHARE_WITH_CURRENT_CONTEXT","SDL_GL_STENCIL_SIZE","SDL_GL_STEREO","SDL_GL_SetAttribute","SDL_GL_SetSwapInterval","SDL_GL_SwapWindow","SDL_GL_UnbindTexture","SDL_GL_UnloadLibrary","SDL_GLattr","SDL_GLcontextFlag","SDL_GLcontextReleaseFlag","SDL_GLprofile","SDL_GameController","SDL_GameControllerAddMapping","SDL_GameControllerAddMappingsFromRW","SDL_GameControllerAxis","SDL_GameControllerBindType","SDL_GameControllerButton","SDL_GameControllerButtonBind","SDL_GameControllerButtonBind__bindgen_ty_1","SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1","SDL_GameControllerClose","SDL_GameControllerEventState","SDL_GameControllerFromInstanceID","SDL_GameControllerFromPlayerIndex","SDL_GameControllerGetAttached","SDL_GameControllerGetAxis","SDL_GameControllerGetAxisFromString","SDL_GameControllerGetBindForAxis","SDL_GameControllerGetBindForButton","SDL_GameControllerGetButton","SDL_GameControllerGetButtonFromString","SDL_GameControllerGetJoystick","SDL_GameControllerGetNumTouchpadFingers","SDL_GameControllerGetNumTouchpads","SDL_GameControllerGetPlayerIndex","SDL_GameControllerGetProduct","SDL_GameControllerGetProductVersion","SDL_GameControllerGetSensorData","SDL_GameControllerGetSerial","SDL_GameControllerGetStringForAxis","SDL_GameControllerGetStringForButton","SDL_GameControllerGetTouchpadFinger","SDL_GameControllerGetType","SDL_GameControllerGetVendor","SDL_GameControllerHasAxis","SDL_GameControllerHasButton","SDL_GameControllerHasLED","SDL_GameControllerHasSensor","SDL_GameControllerIsSensorEnabled","SDL_GameControllerMapping","SDL_GameControllerMappingForDeviceIndex","SDL_GameControllerMappingForGUID","SDL_GameControllerMappingForIndex","SDL_GameControllerName","SDL_GameControllerNameForIndex","SDL_GameControllerNumMappings","SDL_GameControllerOpen","SDL_GameControllerRumble","SDL_GameControllerRumbleTriggers","SDL_GameControllerSetLED","SDL_GameControllerSetPlayerIndex","SDL_GameControllerSetSensorEnabled","SDL_GameControllerType","SDL_GameControllerTypeForIndex","SDL_GameControllerUpdate","SDL_GestureID","SDL_GetAssertionHandler","SDL_GetAssertionReport","SDL_GetAudioDeviceName","SDL_GetAudioDeviceStatus","SDL_GetAudioDriver","SDL_GetAudioStatus","SDL_GetBasePath","SDL_GetCPUCacheLineSize","SDL_GetCPUCount","SDL_GetClipRect","SDL_GetClipboardText","SDL_GetClosestDisplayMode","SDL_GetColorKey","SDL_GetCurrentAudioDriver","SDL_GetCurrentDisplayMode","SDL_GetCurrentVideoDriver","SDL_GetCursor","SDL_GetDefaultAssertionHandler","SDL_GetDefaultCursor","SDL_GetDesktopDisplayMode","SDL_GetDisplayBounds","SDL_GetDisplayDPI","SDL_GetDisplayMode","SDL_GetDisplayName","SDL_GetDisplayOrientation","SDL_GetDisplayUsableBounds","SDL_GetError","SDL_GetErrorMsg","SDL_GetEventFilter","SDL_GetGlobalMouseState","SDL_GetGrabbedWindow","SDL_GetHint","SDL_GetHintBoolean","SDL_GetKeyFromName","SDL_GetKeyFromScancode","SDL_GetKeyName","SDL_GetKeyboardFocus","SDL_GetKeyboardState","SDL_GetMemoryFunctions","SDL_GetModState","SDL_GetMouseFocus","SDL_GetMouseState","SDL_GetNumAllocations","SDL_GetNumAudioDevices","SDL_GetNumAudioDrivers","SDL_GetNumDisplayModes","SDL_GetNumRenderDrivers","SDL_GetNumTouchDevices","SDL_GetNumTouchFingers","SDL_GetNumVideoDisplays","SDL_GetNumVideoDrivers","SDL_GetPerformanceCounter","SDL_GetPerformanceFrequency","SDL_GetPixelFormatName","SDL_GetPlatform","SDL_GetPowerInfo","SDL_GetPrefPath","SDL_GetPreferredLocales","SDL_GetQueuedAudioSize","SDL_GetRGB","SDL_GetRGBA","SDL_GetRelativeMouseMode","SDL_GetRelativeMouseState","SDL_GetRenderDrawBlendMode","SDL_GetRenderDrawColor","SDL_GetRenderDriverInfo","SDL_GetRenderTarget","SDL_GetRenderer","SDL_GetRendererInfo","SDL_GetRendererOutputSize","SDL_GetRevision","SDL_GetRevisionNumber","SDL_GetScancodeFromKey","SDL_GetScancodeFromName","SDL_GetScancodeName","SDL_GetShapedWindowMode","SDL_GetSurfaceAlphaMod","SDL_GetSurfaceBlendMode","SDL_GetSurfaceColorMod","SDL_GetSystemRAM","SDL_GetTextureAlphaMod","SDL_GetTextureBlendMode","SDL_GetTextureColorMod","SDL_GetTextureScaleMode","SDL_GetThreadID","SDL_GetThreadName","SDL_GetTicks","SDL_GetTouchDevice","SDL_GetTouchDeviceType","SDL_GetTouchFinger","SDL_GetVersion","SDL_GetVideoDriver","SDL_GetWindowBordersSize","SDL_GetWindowBrightness","SDL_GetWindowData","SDL_GetWindowDisplayIndex","SDL_GetWindowDisplayMode","SDL_GetWindowFlags","SDL_GetWindowFromID","SDL_GetWindowGammaRamp","SDL_GetWindowGrab","SDL_GetWindowID","SDL_GetWindowMaximumSize","SDL_GetWindowMinimumSize","SDL_GetWindowOpacity","SDL_GetWindowPixelFormat","SDL_GetWindowPosition","SDL_GetWindowSize","SDL_GetWindowSurface","SDL_GetWindowTitle","SDL_GetWindowWMInfo","SDL_GetYUVConversionMode","SDL_GetYUVConversionModeForResolution","SDL_HAPTIC_AUTOCENTER","SDL_HAPTIC_CARTESIAN","SDL_HAPTIC_CONSTANT","SDL_HAPTIC_CUSTOM","SDL_HAPTIC_DAMPER","SDL_HAPTIC_DISABLED","SDL_HAPTIC_FRICTION","SDL_HAPTIC_GAIN","SDL_HAPTIC_INERTIA","SDL_HAPTIC_INFINITY","SDL_HAPTIC_LEFTRIGHT","SDL_HAPTIC_PAUSE","SDL_HAPTIC_POLAR","SDL_HAPTIC_RAMP","SDL_HAPTIC_SAWTOOTHDOWN","SDL_HAPTIC_SAWTOOTHUP","SDL_HAPTIC_SINE","SDL_HAPTIC_SPHERICAL","SDL_HAPTIC_SPRING","SDL_HAPTIC_STATUS","SDL_HAPTIC_STEERING_AXIS","SDL_HAPTIC_TRIANGLE","SDL_HAT_CENTERED","SDL_HAT_DOWN","SDL_HAT_LEFT","SDL_HAT_LEFTDOWN","SDL_HAT_LEFTUP","SDL_HAT_RIGHT","SDL_HAT_RIGHTDOWN","SDL_HAT_RIGHTUP","SDL_HAT_UP","SDL_HINT_ACCELEROMETER_AS_JOYSTICK","SDL_HINT_ALLOW_TOPMOST","SDL_HINT_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION","SDL_HINT_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION","SDL_HINT_ANDROID_BLOCK_ON_PAUSE","SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO","SDL_HINT_ANDROID_TRAP_BACK_BUTTON","SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS","SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION","SDL_HINT_AUDIO_CATEGORY","SDL_HINT_AUDIO_DEVICE_APP_NAME","SDL_HINT_AUDIO_DEVICE_STREAM_NAME","SDL_HINT_AUDIO_RESAMPLING_MODE","SDL_HINT_AUTO_UPDATE_JOYSTICKS","SDL_HINT_AUTO_UPDATE_SENSORS","SDL_HINT_BMP_SAVE_LEGACY_FORMAT","SDL_HINT_DEFAULT","SDL_HINT_DISPLAY_USABLE_BOUNDS","SDL_HINT_EMSCRIPTEN_ASYNCIFY","SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT","SDL_HINT_ENABLE_STEAM_CONTROLLERS","SDL_HINT_EVENT_LOGGING","SDL_HINT_FRAMEBUFFER_ACCELERATION","SDL_HINT_GAMECONTROLLERCONFIG","SDL_HINT_GAMECONTROLLERCONFIG_FILE","SDL_HINT_GAMECONTROLLERTYPE","SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES","SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT","SDL_HINT_GAMECONTROLLER_USE_BUTTON_LABELS","SDL_HINT_GRAB_KEYBOARD","SDL_HINT_IDLE_TIMER_DISABLED","SDL_HINT_IME_INTERNAL_EDITING","SDL_HINT_IOS_HIDE_HOME_INDICATOR","SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS","SDL_HINT_JOYSTICK_HIDAPI","SDL_HINT_JOYSTICK_HIDAPI_CORRELATE_XINPUT","SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE","SDL_HINT_JOYSTICK_HIDAPI_PS4","SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE","SDL_HINT_JOYSTICK_HIDAPI_PS5","SDL_HINT_JOYSTICK_HIDAPI_STEAM","SDL_HINT_JOYSTICK_HIDAPI_SWITCH","SDL_HINT_JOYSTICK_HIDAPI_XBOX","SDL_HINT_JOYSTICK_RAWINPUT","SDL_HINT_JOYSTICK_THREAD","SDL_HINT_LINUX_JOYSTICK_DEADZONES","SDL_HINT_MAC_BACKGROUND_APP","SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK","SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS","SDL_HINT_MOUSE_DOUBLE_CLICK_TIME","SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH","SDL_HINT_MOUSE_NORMAL_SPEED_SCALE","SDL_HINT_MOUSE_RELATIVE_MODE_WARP","SDL_HINT_MOUSE_RELATIVE_SCALING","SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE","SDL_HINT_MOUSE_TOUCH_EVENTS","SDL_HINT_NORMAL","SDL_HINT_NO_SIGNAL_HANDLERS","SDL_HINT_OPENGL_ES_DRIVER","SDL_HINT_ORIENTATIONS","SDL_HINT_OVERRIDE","SDL_HINT_PREFERRED_LOCALES","SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION","SDL_HINT_QTWAYLAND_WINDOW_FLAGS","SDL_HINT_RENDER_BATCHING","SDL_HINT_RENDER_DIRECT3D11_DEBUG","SDL_HINT_RENDER_DIRECT3D_THREADSAFE","SDL_HINT_RENDER_DRIVER","SDL_HINT_RENDER_LOGICAL_SIZE_MODE","SDL_HINT_RENDER_OPENGL_SHADERS","SDL_HINT_RENDER_SCALE_QUALITY","SDL_HINT_RENDER_VSYNC","SDL_HINT_RETURN_KEY_HIDES_IME","SDL_HINT_RPI_VIDEO_LAYER","SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL","SDL_HINT_THREAD_PRIORITY_POLICY","SDL_HINT_THREAD_STACK_SIZE","SDL_HINT_TIMER_RESOLUTION","SDL_HINT_TOUCH_MOUSE_EVENTS","SDL_HINT_TV_REMOTE_AS_JOYSTICK","SDL_HINT_VIDEO_ALLOW_SCREENSAVER","SDL_HINT_VIDEO_DOUBLE_BUFFER","SDL_HINT_VIDEO_EXTERNAL_CONTEXT","SDL_HINT_VIDEO_HIGHDPI_DISABLED","SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES","SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS","SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT","SDL_HINT_VIDEO_WIN_D3DCOMPILER","SDL_HINT_VIDEO_X11_FORCE_EGL","SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR","SDL_HINT_VIDEO_X11_NET_WM_PING","SDL_HINT_VIDEO_X11_WINDOW_VISUALID","SDL_HINT_VIDEO_X11_XINERAMA","SDL_HINT_VIDEO_X11_XRANDR","SDL_HINT_VIDEO_X11_XVIDMODE","SDL_HINT_WAVE_FACT_CHUNK","SDL_HINT_WAVE_RIFF_CHUNK_SIZE","SDL_HINT_WAVE_TRUNCATION","SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING","SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP","SDL_HINT_WINDOWS_INTRESOURCE_ICON","SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL","SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4","SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN","SDL_HINT_WINRT_HANDLE_BACK_BUTTON","SDL_HINT_WINRT_PRIVACY_POLICY_LABEL","SDL_HINT_WINRT_PRIVACY_POLICY_URL","SDL_HINT_XINPUT_ENABLED","SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING","SDL_HITTEST_DRAGGABLE","SDL_HITTEST_NORMAL","SDL_HITTEST_RESIZE_BOTTOM","SDL_HITTEST_RESIZE_BOTTOMLEFT","SDL_HITTEST_RESIZE_BOTTOMRIGHT","SDL_HITTEST_RESIZE_LEFT","SDL_HITTEST_RESIZE_RIGHT","SDL_HITTEST_RESIZE_TOP","SDL_HITTEST_RESIZE_TOPLEFT","SDL_HITTEST_RESIZE_TOPRIGHT","SDL_Haptic","SDL_HapticClose","SDL_HapticCondition","SDL_HapticConstant","SDL_HapticCustom","SDL_HapticDestroyEffect","SDL_HapticDirection","SDL_HapticEffect","SDL_HapticEffectSupported","SDL_HapticGetEffectStatus","SDL_HapticIndex","SDL_HapticLeftRight","SDL_HapticName","SDL_HapticNewEffect","SDL_HapticNumAxes","SDL_HapticNumEffects","SDL_HapticNumEffectsPlaying","SDL_HapticOpen","SDL_HapticOpenFromJoystick","SDL_HapticOpenFromMouse","SDL_HapticOpened","SDL_HapticPause","SDL_HapticPeriodic","SDL_HapticQuery","SDL_HapticRamp","SDL_HapticRumbleInit","SDL_HapticRumblePlay","SDL_HapticRumbleStop","SDL_HapticRumbleSupported","SDL_HapticRunEffect","SDL_HapticSetAutocenter","SDL_HapticSetGain","SDL_HapticStopAll","SDL_HapticStopEffect","SDL_HapticUnpause","SDL_HapticUpdateEffect","SDL_Has3DNow","SDL_HasARMSIMD","SDL_HasAVX","SDL_HasAVX2","SDL_HasAVX512F","SDL_HasAltiVec","SDL_HasClipboardText","SDL_HasColorKey","SDL_HasEvent","SDL_HasEvents","SDL_HasIntersection","SDL_HasMMX","SDL_HasNEON","SDL_HasRDTSC","SDL_HasSSE","SDL_HasSSE2","SDL_HasSSE3","SDL_HasSSE41","SDL_HasSSE42","SDL_HasScreenKeyboardSupport","SDL_HasSurfaceRLE","SDL_HideWindow","SDL_HintCallback","SDL_HintPriority","SDL_HitTest","SDL_HitTestResult","SDL_IGNORE","SDL_INIT_AUDIO","SDL_INIT_EVENTS","SDL_INIT_EVERYTHING","SDL_INIT_GAMECONTROLLER","SDL_INIT_HAPTIC","SDL_INIT_JOYSTICK","SDL_INIT_NOPARACHUTE","SDL_INIT_SENSOR","SDL_INIT_TIMER","SDL_INIT_VIDEO","SDL_INVALID_SHAPE_ARGUMENT","SDL_IPHONE_MAX_GFORCE","SDL_Init","SDL_InitSubSystem","SDL_IntersectRect","SDL_IntersectRectAndLine","SDL_IsGameController","SDL_IsScreenKeyboardShown","SDL_IsScreenSaverEnabled","SDL_IsShapedWindow","SDL_IsTablet","SDL_IsTextInputActive","SDL_JOYAXISMOTION","SDL_JOYBALLMOTION","SDL_JOYBUTTONDOWN","SDL_JOYBUTTONUP","SDL_JOYDEVICEADDED","SDL_JOYDEVICEREMOVED","SDL_JOYHATMOTION","SDL_JOYSTICK_AXIS_MAX","SDL_JOYSTICK_AXIS_MIN","SDL_JOYSTICK_DISABLED","SDL_JOYSTICK_POWER_EMPTY","SDL_JOYSTICK_POWER_FULL","SDL_JOYSTICK_POWER_LOW","SDL_JOYSTICK_POWER_MAX","SDL_JOYSTICK_POWER_MEDIUM","SDL_JOYSTICK_POWER_UNKNOWN","SDL_JOYSTICK_POWER_WIRED","SDL_JOYSTICK_TYPE_ARCADE_PAD","SDL_JOYSTICK_TYPE_ARCADE_STICK","SDL_JOYSTICK_TYPE_DANCE_PAD","SDL_JOYSTICK_TYPE_DRUM_KIT","SDL_JOYSTICK_TYPE_FLIGHT_STICK","SDL_JOYSTICK_TYPE_GAMECONTROLLER","SDL_JOYSTICK_TYPE_GUITAR","SDL_JOYSTICK_TYPE_THROTTLE","SDL_JOYSTICK_TYPE_UNKNOWN","SDL_JOYSTICK_TYPE_WHEEL","SDL_JoyAxisEvent","SDL_JoyBallEvent","SDL_JoyButtonEvent","SDL_JoyDeviceEvent","SDL_JoyHatEvent","SDL_Joystick","SDL_JoystickAttachVirtual","SDL_JoystickClose","SDL_JoystickCurrentPowerLevel","SDL_JoystickDetachVirtual","SDL_JoystickEventState","SDL_JoystickFromInstanceID","SDL_JoystickFromPlayerIndex","SDL_JoystickGUID","SDL_JoystickGetAttached","SDL_JoystickGetAxis","SDL_JoystickGetAxisInitialState","SDL_JoystickGetBall","SDL_JoystickGetButton","SDL_JoystickGetDeviceGUID","SDL_JoystickGetDeviceInstanceID","SDL_JoystickGetDevicePlayerIndex","SDL_JoystickGetDeviceProduct","SDL_JoystickGetDeviceProductVersion","SDL_JoystickGetDeviceType","SDL_JoystickGetDeviceVendor","SDL_JoystickGetGUID","SDL_JoystickGetGUIDFromString","SDL_JoystickGetGUIDString","SDL_JoystickGetHat","SDL_JoystickGetPlayerIndex","SDL_JoystickGetProduct","SDL_JoystickGetProductVersion","SDL_JoystickGetSerial","SDL_JoystickGetType","SDL_JoystickGetVendor","SDL_JoystickHasLED","SDL_JoystickID","SDL_JoystickInstanceID","SDL_JoystickIsHaptic","SDL_JoystickIsVirtual","SDL_JoystickName","SDL_JoystickNameForIndex","SDL_JoystickNumAxes","SDL_JoystickNumBalls","SDL_JoystickNumButtons","SDL_JoystickNumHats","SDL_JoystickOpen","SDL_JoystickPowerLevel","SDL_JoystickRumble","SDL_JoystickRumbleTriggers","SDL_JoystickSetLED","SDL_JoystickSetPlayerIndex","SDL_JoystickSetVirtualAxis","SDL_JoystickSetVirtualButton","SDL_JoystickSetVirtualHat","SDL_JoystickType","SDL_JoystickUpdate","SDL_KEYDOWN","SDL_KEYMAPCHANGED","SDL_KEYUP","SDL_KeyCode","SDL_KeyboardEvent","SDL_Keycode","SDL_Keymod","SDL_Keysym","SDL_LASTERROR","SDL_LASTEVENT","SDL_LIL_ENDIAN","SDL_LOADSO_DISABLED","SDL_LOCALECHANGED","SDL_LOG_CATEGORY_APPLICATION","SDL_LOG_CATEGORY_ASSERT","SDL_LOG_CATEGORY_AUDIO","SDL_LOG_CATEGORY_CUSTOM","SDL_LOG_CATEGORY_ERROR","SDL_LOG_CATEGORY_INPUT","SDL_LOG_CATEGORY_RENDER","SDL_LOG_CATEGORY_RESERVED1","SDL_LOG_CATEGORY_RESERVED10","SDL_LOG_CATEGORY_RESERVED2","SDL_LOG_CATEGORY_RESERVED3","SDL_LOG_CATEGORY_RESERVED4","SDL_LOG_CATEGORY_RESERVED5","SDL_LOG_CATEGORY_RESERVED6","SDL_LOG_CATEGORY_RESERVED7","SDL_LOG_CATEGORY_RESERVED8","SDL_LOG_CATEGORY_RESERVED9","SDL_LOG_CATEGORY_SYSTEM","SDL_LOG_CATEGORY_TEST","SDL_LOG_CATEGORY_VIDEO","SDL_LOG_PRIORITY_CRITICAL","SDL_LOG_PRIORITY_DEBUG","SDL_LOG_PRIORITY_ERROR","SDL_LOG_PRIORITY_INFO","SDL_LOG_PRIORITY_VERBOSE","SDL_LOG_PRIORITY_WARN","SDL_LinuxSetThreadPriority","SDL_LoadBMP_RW","SDL_LoadDollarTemplates","SDL_LoadFile","SDL_LoadFile_RW","SDL_LoadFunction","SDL_LoadObject","SDL_LoadWAV_RW","SDL_Locale","SDL_LockAudio","SDL_LockAudioDevice","SDL_LockJoysticks","SDL_LockMutex","SDL_LockSensors","SDL_LockSurface","SDL_LockTexture","SDL_LockTextureToSurface","SDL_Log","SDL_LogCategory","SDL_LogCritical","SDL_LogDebug","SDL_LogError","SDL_LogGetOutputFunction","SDL_LogGetPriority","SDL_LogInfo","SDL_LogMessage","SDL_LogMessageV","SDL_LogOutputFunction","SDL_LogPriority","SDL_LogResetPriorities","SDL_LogSetAllPriority","SDL_LogSetOutputFunction","SDL_LogSetPriority","SDL_LogVerbose","SDL_LogWarn","SDL_LowerBlit","SDL_LowerBlitScaled","SDL_MAJOR_VERSION","SDL_MAX_LOG_MESSAGE","SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT","SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT","SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT","SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT","SDL_MESSAGEBOX_COLOR_BACKGROUND","SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND","SDL_MESSAGEBOX_COLOR_BUTTON_BORDER","SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED","SDL_MESSAGEBOX_COLOR_MAX","SDL_MESSAGEBOX_COLOR_TEXT","SDL_MESSAGEBOX_ERROR","SDL_MESSAGEBOX_INFORMATION","SDL_MESSAGEBOX_WARNING","SDL_MINOR_VERSION","SDL_MIX_MAXVOLUME","SDL_MOUSEBUTTONDOWN","SDL_MOUSEBUTTONUP","SDL_MOUSEMOTION","SDL_MOUSEWHEEL","SDL_MOUSEWHEEL_FLIPPED","SDL_MOUSEWHEEL_NORMAL","SDL_MULTIGESTURE","SDL_MUTEX_TIMEDOUT","SDL_MapRGB","SDL_MapRGBA","SDL_MasksToPixelFormatEnum","SDL_MaximizeWindow","SDL_MemoryBarrierAcquireFunction","SDL_MemoryBarrierReleaseFunction","SDL_MessageBoxButtonData","SDL_MessageBoxButtonFlags","SDL_MessageBoxColor","SDL_MessageBoxColorScheme","SDL_MessageBoxColorType","SDL_MessageBoxData","SDL_MessageBoxFlags","SDL_MetalView","SDL_Metal_CreateView","SDL_Metal_DestroyView","SDL_Metal_GetDrawableSize","SDL_Metal_GetLayer","SDL_MinimizeWindow","SDL_MixAudio","SDL_MixAudioFormat","SDL_MouseButtonEvent","SDL_MouseIsHaptic","SDL_MouseMotionEvent","SDL_MouseWheelDirection","SDL_MouseWheelEvent","SDL_MultiGestureEvent","SDL_NONSHAPEABLE_WINDOW","SDL_NULL_WHILE_LOOP_CONDITION","SDL_NUM_LOG_PRIORITIES","SDL_NUM_SCANCODES","SDL_NUM_SYSTEM_CURSORS","SDL_NewAudioStream","SDL_NumHaptics","SDL_NumJoysticks","SDL_NumSensors","SDL_ORIENTATION_LANDSCAPE","SDL_ORIENTATION_LANDSCAPE_FLIPPED","SDL_ORIENTATION_PORTRAIT","SDL_ORIENTATION_PORTRAIT_FLIPPED","SDL_ORIENTATION_UNKNOWN","SDL_OSEvent","SDL_OnApplicationDidBecomeActive","SDL_OnApplicationDidEnterBackground","SDL_OnApplicationDidReceiveMemoryWarning","SDL_OnApplicationWillEnterForeground","SDL_OnApplicationWillResignActive","SDL_OnApplicationWillTerminate","SDL_OpenAudio","SDL_OpenAudioDevice","SDL_OpenURL","SDL_PACKEDLAYOUT_1010102","SDL_PACKEDLAYOUT_1555","SDL_PACKEDLAYOUT_2101010","SDL_PACKEDLAYOUT_332","SDL_PACKEDLAYOUT_4444","SDL_PACKEDLAYOUT_5551","SDL_PACKEDLAYOUT_565","SDL_PACKEDLAYOUT_8888","SDL_PACKEDLAYOUT_NONE","SDL_PACKEDORDER_ABGR","SDL_PACKEDORDER_ARGB","SDL_PACKEDORDER_BGRA","SDL_PACKEDORDER_BGRX","SDL_PACKEDORDER_NONE","SDL_PACKEDORDER_RGBA","SDL_PACKEDORDER_RGBX","SDL_PACKEDORDER_XBGR","SDL_PACKEDORDER_XRGB","SDL_PATCHLEVEL","SDL_PEEKEVENT","SDL_PIXELFORMAT_ABGR1555","SDL_PIXELFORMAT_ABGR32","SDL_PIXELFORMAT_ABGR4444","SDL_PIXELFORMAT_ABGR8888","SDL_PIXELFORMAT_ARGB1555","SDL_PIXELFORMAT_ARGB2101010","SDL_PIXELFORMAT_ARGB32","SDL_PIXELFORMAT_ARGB4444","SDL_PIXELFORMAT_ARGB8888","SDL_PIXELFORMAT_BGR24","SDL_PIXELFORMAT_BGR444","SDL_PIXELFORMAT_BGR555","SDL_PIXELFORMAT_BGR565","SDL_PIXELFORMAT_BGR888","SDL_PIXELFORMAT_BGRA32","SDL_PIXELFORMAT_BGRA4444","SDL_PIXELFORMAT_BGRA5551","SDL_PIXELFORMAT_BGRA8888","SDL_PIXELFORMAT_BGRX8888","SDL_PIXELFORMAT_EXTERNAL_OES","SDL_PIXELFORMAT_INDEX1LSB","SDL_PIXELFORMAT_INDEX1MSB","SDL_PIXELFORMAT_INDEX4LSB","SDL_PIXELFORMAT_INDEX4MSB","SDL_PIXELFORMAT_INDEX8","SDL_PIXELFORMAT_IYUV","SDL_PIXELFORMAT_NV12","SDL_PIXELFORMAT_NV21","SDL_PIXELFORMAT_RGB24","SDL_PIXELFORMAT_RGB332","SDL_PIXELFORMAT_RGB444","SDL_PIXELFORMAT_RGB555","SDL_PIXELFORMAT_RGB565","SDL_PIXELFORMAT_RGB888","SDL_PIXELFORMAT_RGBA32","SDL_PIXELFORMAT_RGBA4444","SDL_PIXELFORMAT_RGBA5551","SDL_PIXELFORMAT_RGBA8888","SDL_PIXELFORMAT_RGBX8888","SDL_PIXELFORMAT_UNKNOWN","SDL_PIXELFORMAT_UYVY","SDL_PIXELFORMAT_XBGR1555","SDL_PIXELFORMAT_XBGR4444","SDL_PIXELFORMAT_XBGR8888","SDL_PIXELFORMAT_XRGB1555","SDL_PIXELFORMAT_XRGB4444","SDL_PIXELFORMAT_XRGB8888","SDL_PIXELFORMAT_YUY2","SDL_PIXELFORMAT_YV12","SDL_PIXELFORMAT_YVYU","SDL_PIXELTYPE_ARRAYF16","SDL_PIXELTYPE_ARRAYF32","SDL_PIXELTYPE_ARRAYU16","SDL_PIXELTYPE_ARRAYU32","SDL_PIXELTYPE_ARRAYU8","SDL_PIXELTYPE_INDEX1","SDL_PIXELTYPE_INDEX4","SDL_PIXELTYPE_INDEX8","SDL_PIXELTYPE_PACKED16","SDL_PIXELTYPE_PACKED32","SDL_PIXELTYPE_PACKED8","SDL_PIXELTYPE_UNKNOWN","SDL_POWERSTATE_CHARGED","SDL_POWERSTATE_CHARGING","SDL_POWERSTATE_NO_BATTERY","SDL_POWERSTATE_ON_BATTERY","SDL_POWERSTATE_UNKNOWN","SDL_PREALLOC","SDL_PRESSED","SDL_PRIX64","SDL_PRIs64","SDL_PRIu64","SDL_PRIx64","SDL_PackedLayout","SDL_PackedOrder","SDL_Palette","SDL_PauseAudio","SDL_PauseAudioDevice","SDL_PeepEvents","SDL_PixelFormat","SDL_PixelFormatEnum","SDL_PixelFormatEnumToMasks","SDL_PixelType","SDL_Point","SDL_PollEvent","SDL_PowerState","SDL_PumpEvents","SDL_PushEvent","SDL_QUERY","SDL_QUIT","SDL_QueryTexture","SDL_QueueAudio","SDL_Quit","SDL_QuitEvent","SDL_QuitSubSystem","SDL_RELEASED","SDL_RENDERER_ACCELERATED","SDL_RENDERER_PRESENTVSYNC","SDL_RENDERER_SOFTWARE","SDL_RENDERER_TARGETTEXTURE","SDL_RENDER_DEVICE_RESET","SDL_RENDER_TARGETS_RESET","SDL_RLEACCEL","SDL_RWFromConstMem","SDL_RWFromFP","SDL_RWFromFile","SDL_RWFromMem","SDL_RWOPS_JNIFILE","SDL_RWOPS_MEMORY","SDL_RWOPS_MEMORY_RO","SDL_RWOPS_STDFILE","SDL_RWOPS_UNKNOWN","SDL_RWOPS_WINFILE","SDL_RWclose","SDL_RWops","SDL_RWops__bindgen_ty_1","SDL_RWops__bindgen_ty_1__bindgen_ty_1","SDL_RWops__bindgen_ty_1__bindgen_ty_2","SDL_RWread","SDL_RWseek","SDL_RWsize","SDL_RWtell","SDL_RWwrite","SDL_RaiseWindow","SDL_ReadBE16","SDL_ReadBE32","SDL_ReadBE64","SDL_ReadLE16","SDL_ReadLE32","SDL_ReadLE64","SDL_ReadU8","SDL_RecordGesture","SDL_Rect","SDL_RegisterEvents","SDL_RemoveTimer","SDL_RenderClear","SDL_RenderCopy","SDL_RenderCopyEx","SDL_RenderCopyExF","SDL_RenderCopyF","SDL_RenderDrawLine","SDL_RenderDrawLineF","SDL_RenderDrawLines","SDL_RenderDrawLinesF","SDL_RenderDrawPoint","SDL_RenderDrawPointF","SDL_RenderDrawPoints","SDL_RenderDrawPointsF","SDL_RenderDrawRect","SDL_RenderDrawRectF","SDL_RenderDrawRects","SDL_RenderDrawRectsF","SDL_RenderFillRect","SDL_RenderFillRectF","SDL_RenderFillRects","SDL_RenderFillRectsF","SDL_RenderFlush","SDL_RenderGetClipRect","SDL_RenderGetIntegerScale","SDL_RenderGetLogicalSize","SDL_RenderGetMetalCommandEncoder","SDL_RenderGetMetalLayer","SDL_RenderGetScale","SDL_RenderGetViewport","SDL_RenderIsClipEnabled","SDL_RenderPresent","SDL_RenderReadPixels","SDL_RenderSetClipRect","SDL_RenderSetIntegerScale","SDL_RenderSetLogicalSize","SDL_RenderSetScale","SDL_RenderSetViewport","SDL_RenderTargetSupported","SDL_Renderer","SDL_RendererFlags","SDL_RendererFlip","SDL_RendererInfo","SDL_ReportAssertion","SDL_ResetAssertionReport","SDL_RestoreWindow","SDL_SCANCODE_0","SDL_SCANCODE_1","SDL_SCANCODE_2","SDL_SCANCODE_3","SDL_SCANCODE_4","SDL_SCANCODE_5","SDL_SCANCODE_6","SDL_SCANCODE_7","SDL_SCANCODE_8","SDL_SCANCODE_9","SDL_SCANCODE_A","SDL_SCANCODE_AC_BACK","SDL_SCANCODE_AC_BOOKMARKS","SDL_SCANCODE_AC_FORWARD","SDL_SCANCODE_AC_HOME","SDL_SCANCODE_AC_REFRESH","SDL_SCANCODE_AC_SEARCH","SDL_SCANCODE_AC_STOP","SDL_SCANCODE_AGAIN","SDL_SCANCODE_ALTERASE","SDL_SCANCODE_APOSTROPHE","SDL_SCANCODE_APP1","SDL_SCANCODE_APP2","SDL_SCANCODE_APPLICATION","SDL_SCANCODE_AUDIOFASTFORWARD","SDL_SCANCODE_AUDIOMUTE","SDL_SCANCODE_AUDIONEXT","SDL_SCANCODE_AUDIOPLAY","SDL_SCANCODE_AUDIOPREV","SDL_SCANCODE_AUDIOREWIND","SDL_SCANCODE_AUDIOSTOP","SDL_SCANCODE_B","SDL_SCANCODE_BACKSLASH","SDL_SCANCODE_BACKSPACE","SDL_SCANCODE_BRIGHTNESSDOWN","SDL_SCANCODE_BRIGHTNESSUP","SDL_SCANCODE_C","SDL_SCANCODE_CALCULATOR","SDL_SCANCODE_CANCEL","SDL_SCANCODE_CAPSLOCK","SDL_SCANCODE_CLEAR","SDL_SCANCODE_CLEARAGAIN","SDL_SCANCODE_COMMA","SDL_SCANCODE_COMPUTER","SDL_SCANCODE_COPY","SDL_SCANCODE_CRSEL","SDL_SCANCODE_CURRENCYSUBUNIT","SDL_SCANCODE_CURRENCYUNIT","SDL_SCANCODE_CUT","SDL_SCANCODE_D","SDL_SCANCODE_DECIMALSEPARATOR","SDL_SCANCODE_DELETE","SDL_SCANCODE_DISPLAYSWITCH","SDL_SCANCODE_DOWN","SDL_SCANCODE_E","SDL_SCANCODE_EJECT","SDL_SCANCODE_END","SDL_SCANCODE_EQUALS","SDL_SCANCODE_ESCAPE","SDL_SCANCODE_EXECUTE","SDL_SCANCODE_EXSEL","SDL_SCANCODE_F","SDL_SCANCODE_F1","SDL_SCANCODE_F10","SDL_SCANCODE_F11","SDL_SCANCODE_F12","SDL_SCANCODE_F13","SDL_SCANCODE_F14","SDL_SCANCODE_F15","SDL_SCANCODE_F16","SDL_SCANCODE_F17","SDL_SCANCODE_F18","SDL_SCANCODE_F19","SDL_SCANCODE_F2","SDL_SCANCODE_F20","SDL_SCANCODE_F21","SDL_SCANCODE_F22","SDL_SCANCODE_F23","SDL_SCANCODE_F24","SDL_SCANCODE_F3","SDL_SCANCODE_F4","SDL_SCANCODE_F5","SDL_SCANCODE_F6","SDL_SCANCODE_F7","SDL_SCANCODE_F8","SDL_SCANCODE_F9","SDL_SCANCODE_FIND","SDL_SCANCODE_G","SDL_SCANCODE_GRAVE","SDL_SCANCODE_H","SDL_SCANCODE_HELP","SDL_SCANCODE_HOME","SDL_SCANCODE_I","SDL_SCANCODE_INSERT","SDL_SCANCODE_INTERNATIONAL1","SDL_SCANCODE_INTERNATIONAL2","SDL_SCANCODE_INTERNATIONAL3","SDL_SCANCODE_INTERNATIONAL4","SDL_SCANCODE_INTERNATIONAL5","SDL_SCANCODE_INTERNATIONAL6","SDL_SCANCODE_INTERNATIONAL7","SDL_SCANCODE_INTERNATIONAL8","SDL_SCANCODE_INTERNATIONAL9","SDL_SCANCODE_J","SDL_SCANCODE_K","SDL_SCANCODE_KBDILLUMDOWN","SDL_SCANCODE_KBDILLUMTOGGLE","SDL_SCANCODE_KBDILLUMUP","SDL_SCANCODE_KP_0","SDL_SCANCODE_KP_00","SDL_SCANCODE_KP_000","SDL_SCANCODE_KP_1","SDL_SCANCODE_KP_2","SDL_SCANCODE_KP_3","SDL_SCANCODE_KP_4","SDL_SCANCODE_KP_5","SDL_SCANCODE_KP_6","SDL_SCANCODE_KP_7","SDL_SCANCODE_KP_8","SDL_SCANCODE_KP_9","SDL_SCANCODE_KP_A","SDL_SCANCODE_KP_AMPERSAND","SDL_SCANCODE_KP_AT","SDL_SCANCODE_KP_B","SDL_SCANCODE_KP_BACKSPACE","SDL_SCANCODE_KP_BINARY","SDL_SCANCODE_KP_C","SDL_SCANCODE_KP_CLEAR","SDL_SCANCODE_KP_CLEARENTRY","SDL_SCANCODE_KP_COLON","SDL_SCANCODE_KP_COMMA","SDL_SCANCODE_KP_D","SDL_SCANCODE_KP_DBLAMPERSAND","SDL_SCANCODE_KP_DBLVERTICALBAR","SDL_SCANCODE_KP_DECIMAL","SDL_SCANCODE_KP_DIVIDE","SDL_SCANCODE_KP_E","SDL_SCANCODE_KP_ENTER","SDL_SCANCODE_KP_EQUALS","SDL_SCANCODE_KP_EQUALSAS400","SDL_SCANCODE_KP_EXCLAM","SDL_SCANCODE_KP_F","SDL_SCANCODE_KP_GREATER","SDL_SCANCODE_KP_HASH","SDL_SCANCODE_KP_HEXADECIMAL","SDL_SCANCODE_KP_LEFTBRACE","SDL_SCANCODE_KP_LEFTPAREN","SDL_SCANCODE_KP_LESS","SDL_SCANCODE_KP_MEMADD","SDL_SCANCODE_KP_MEMCLEAR","SDL_SCANCODE_KP_MEMDIVIDE","SDL_SCANCODE_KP_MEMMULTIPLY","SDL_SCANCODE_KP_MEMRECALL","SDL_SCANCODE_KP_MEMSTORE","SDL_SCANCODE_KP_MEMSUBTRACT","SDL_SCANCODE_KP_MINUS","SDL_SCANCODE_KP_MULTIPLY","SDL_SCANCODE_KP_OCTAL","SDL_SCANCODE_KP_PERCENT","SDL_SCANCODE_KP_PERIOD","SDL_SCANCODE_KP_PLUS","SDL_SCANCODE_KP_PLUSMINUS","SDL_SCANCODE_KP_POWER","SDL_SCANCODE_KP_RIGHTBRACE","SDL_SCANCODE_KP_RIGHTPAREN","SDL_SCANCODE_KP_SPACE","SDL_SCANCODE_KP_TAB","SDL_SCANCODE_KP_VERTICALBAR","SDL_SCANCODE_KP_XOR","SDL_SCANCODE_L","SDL_SCANCODE_LALT","SDL_SCANCODE_LANG1","SDL_SCANCODE_LANG2","SDL_SCANCODE_LANG3","SDL_SCANCODE_LANG4","SDL_SCANCODE_LANG5","SDL_SCANCODE_LANG6","SDL_SCANCODE_LANG7","SDL_SCANCODE_LANG8","SDL_SCANCODE_LANG9","SDL_SCANCODE_LCTRL","SDL_SCANCODE_LEFT","SDL_SCANCODE_LEFTBRACKET","SDL_SCANCODE_LGUI","SDL_SCANCODE_LSHIFT","SDL_SCANCODE_M","SDL_SCANCODE_MAIL","SDL_SCANCODE_MEDIASELECT","SDL_SCANCODE_MENU","SDL_SCANCODE_MINUS","SDL_SCANCODE_MODE","SDL_SCANCODE_MUTE","SDL_SCANCODE_N","SDL_SCANCODE_NONUSBACKSLASH","SDL_SCANCODE_NONUSHASH","SDL_SCANCODE_NUMLOCKCLEAR","SDL_SCANCODE_O","SDL_SCANCODE_OPER","SDL_SCANCODE_OUT","SDL_SCANCODE_P","SDL_SCANCODE_PAGEDOWN","SDL_SCANCODE_PAGEUP","SDL_SCANCODE_PASTE","SDL_SCANCODE_PAUSE","SDL_SCANCODE_PERIOD","SDL_SCANCODE_POWER","SDL_SCANCODE_PRINTSCREEN","SDL_SCANCODE_PRIOR","SDL_SCANCODE_Q","SDL_SCANCODE_R","SDL_SCANCODE_RALT","SDL_SCANCODE_RCTRL","SDL_SCANCODE_RETURN","SDL_SCANCODE_RETURN2","SDL_SCANCODE_RGUI","SDL_SCANCODE_RIGHT","SDL_SCANCODE_RIGHTBRACKET","SDL_SCANCODE_RSHIFT","SDL_SCANCODE_S","SDL_SCANCODE_SCROLLLOCK","SDL_SCANCODE_SELECT","SDL_SCANCODE_SEMICOLON","SDL_SCANCODE_SEPARATOR","SDL_SCANCODE_SLASH","SDL_SCANCODE_SLEEP","SDL_SCANCODE_SPACE","SDL_SCANCODE_STOP","SDL_SCANCODE_SYSREQ","SDL_SCANCODE_T","SDL_SCANCODE_TAB","SDL_SCANCODE_THOUSANDSSEPARATOR","SDL_SCANCODE_U","SDL_SCANCODE_UNDO","SDL_SCANCODE_UNKNOWN","SDL_SCANCODE_UP","SDL_SCANCODE_V","SDL_SCANCODE_VOLUMEDOWN","SDL_SCANCODE_VOLUMEUP","SDL_SCANCODE_W","SDL_SCANCODE_WWW","SDL_SCANCODE_X","SDL_SCANCODE_Y","SDL_SCANCODE_Z","SDL_SENSORUPDATE","SDL_SENSOR_ACCEL","SDL_SENSOR_DISABLED","SDL_SENSOR_GYRO","SDL_SENSOR_INVALID","SDL_SENSOR_UNKNOWN","SDL_SIMDAlloc","SDL_SIMDFree","SDL_SIMDGetAlignment","SDL_SIMDRealloc","SDL_SIMD_ALIGNED","SDL_STANDARD_GRAVITY","SDL_SWSURFACE","SDL_SYSTEM_CURSOR_ARROW","SDL_SYSTEM_CURSOR_CROSSHAIR","SDL_SYSTEM_CURSOR_HAND","SDL_SYSTEM_CURSOR_IBEAM","SDL_SYSTEM_CURSOR_NO","SDL_SYSTEM_CURSOR_SIZEALL","SDL_SYSTEM_CURSOR_SIZENESW","SDL_SYSTEM_CURSOR_SIZENS","SDL_SYSTEM_CURSOR_SIZENWSE","SDL_SYSTEM_CURSOR_SIZEWE","SDL_SYSTEM_CURSOR_WAIT","SDL_SYSTEM_CURSOR_WAITARROW","SDL_SYSWMEVENT","SDL_SYSWM_ANDROID","SDL_SYSWM_COCOA","SDL_SYSWM_DIRECTFB","SDL_SYSWM_HAIKU","SDL_SYSWM_MIR","SDL_SYSWM_OS2","SDL_SYSWM_TYPE","SDL_SYSWM_UIKIT","SDL_SYSWM_UNKNOWN","SDL_SYSWM_VIVANTE","SDL_SYSWM_WAYLAND","SDL_SYSWM_WINDOWS","SDL_SYSWM_WINRT","SDL_SYSWM_X11","SDL_SaveAllDollarTemplates","SDL_SaveBMP_RW","SDL_SaveDollarTemplate","SDL_ScaleMode","SDL_ScaleModeBest","SDL_ScaleModeLinear","SDL_ScaleModeNearest","SDL_Scancode","SDL_SemPost","SDL_SemTryWait","SDL_SemValue","SDL_SemWait","SDL_SemWaitTimeout","SDL_Sensor","SDL_SensorClose","SDL_SensorEvent","SDL_SensorFromInstanceID","SDL_SensorGetData","SDL_SensorGetDeviceInstanceID","SDL_SensorGetDeviceName","SDL_SensorGetDeviceNonPortableType","SDL_SensorGetDeviceType","SDL_SensorGetInstanceID","SDL_SensorGetName","SDL_SensorGetNonPortableType","SDL_SensorGetType","SDL_SensorID","SDL_SensorOpen","SDL_SensorType","SDL_SensorUpdate","SDL_SetAssertionHandler","SDL_SetClipRect","SDL_SetClipboardText","SDL_SetColorKey","SDL_SetCursor","SDL_SetError","SDL_SetEventFilter","SDL_SetHint","SDL_SetHintWithPriority","SDL_SetMainReady","SDL_SetMemoryFunctions","SDL_SetModState","SDL_SetPaletteColors","SDL_SetPixelFormatPalette","SDL_SetRelativeMouseMode","SDL_SetRenderDrawBlendMode","SDL_SetRenderDrawColor","SDL_SetRenderTarget","SDL_SetSurfaceAlphaMod","SDL_SetSurfaceBlendMode","SDL_SetSurfaceColorMod","SDL_SetSurfacePalette","SDL_SetSurfaceRLE","SDL_SetTextInputRect","SDL_SetTextureAlphaMod","SDL_SetTextureBlendMode","SDL_SetTextureColorMod","SDL_SetTextureScaleMode","SDL_SetThreadPriority","SDL_SetWindowBordered","SDL_SetWindowBrightness","SDL_SetWindowData","SDL_SetWindowDisplayMode","SDL_SetWindowFullscreen","SDL_SetWindowGammaRamp","SDL_SetWindowGrab","SDL_SetWindowHitTest","SDL_SetWindowIcon","SDL_SetWindowInputFocus","SDL_SetWindowMaximumSize","SDL_SetWindowMinimumSize","SDL_SetWindowModalFor","SDL_SetWindowOpacity","SDL_SetWindowPosition","SDL_SetWindowResizable","SDL_SetWindowShape","SDL_SetWindowSize","SDL_SetWindowTitle","SDL_SetYUVConversionMode","SDL_ShowCursor","SDL_ShowMessageBox","SDL_ShowSimpleMessageBox","SDL_ShowWindow","SDL_SoftStretch","SDL_SpinLock","SDL_StartTextInput","SDL_StopTextInput","SDL_Surface","SDL_SysWMEvent","SDL_SysWMinfo","SDL_SysWMinfo__bindgen_ty_1","SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_1","SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_2","SDL_SysWMmsg","SDL_SysWMmsg__bindgen_ty_1","SDL_SysWMmsg__bindgen_ty_1__bindgen_ty_1","SDL_SystemCursor","SDL_TEXTEDITING","SDL_TEXTEDITINGEVENT_TEXT_SIZE","SDL_TEXTINPUT","SDL_TEXTINPUTEVENT_TEXT_SIZE","SDL_TEXTUREACCESS_STATIC","SDL_TEXTUREACCESS_STREAMING","SDL_TEXTUREACCESS_TARGET","SDL_TEXTUREMODULATE_ALPHA","SDL_TEXTUREMODULATE_COLOR","SDL_TEXTUREMODULATE_NONE","SDL_THREADS_DISABLED","SDL_THREAD_PRIORITY_HIGH","SDL_THREAD_PRIORITY_LOW","SDL_THREAD_PRIORITY_NORMAL","SDL_THREAD_PRIORITY_TIME_CRITICAL","SDL_TIMERS_DISABLED","SDL_TLSCreate","SDL_TLSGet","SDL_TLSID","SDL_TLSSet","SDL_TOUCH_DEVICE_DIRECT","SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE","SDL_TOUCH_DEVICE_INDIRECT_RELATIVE","SDL_TOUCH_DEVICE_INVALID","SDL_TRUE","SDL_TextEditingEvent","SDL_TextInputEvent","SDL_Texture","SDL_TextureAccess","SDL_TextureModulate","SDL_Thread","SDL_ThreadFunction","SDL_ThreadID","SDL_ThreadPriority","SDL_TimerCallback","SDL_TimerID","SDL_TouchDeviceType","SDL_TouchFingerEvent","SDL_TouchID","SDL_TryLockMutex","SDL_UNSUPPORTED","SDL_USEREVENT","SDL_UnionRect","SDL_UnloadObject","SDL_UnlockAudio","SDL_UnlockAudioDevice","SDL_UnlockJoysticks","SDL_UnlockMutex","SDL_UnlockSensors","SDL_UnlockSurface","SDL_UnlockTexture","SDL_UpdateTexture","SDL_UpdateWindowSurface","SDL_UpdateWindowSurfaceRects","SDL_UpdateYUVTexture","SDL_UpperBlit","SDL_UpperBlitScaled","SDL_UserEvent","SDL_VIDEO_DRIVER_DUMMY","SDL_VideoInit","SDL_VideoQuit","SDL_Vulkan_CreateSurface","SDL_Vulkan_GetDrawableSize","SDL_Vulkan_GetInstanceExtensions","SDL_Vulkan_GetVkGetInstanceProcAddr","SDL_Vulkan_LoadLibrary","SDL_Vulkan_UnloadLibrary","SDL_WINDOWEVENT","SDL_WINDOWEVENT_CLOSE","SDL_WINDOWEVENT_ENTER","SDL_WINDOWEVENT_EXPOSED","SDL_WINDOWEVENT_FOCUS_GAINED","SDL_WINDOWEVENT_FOCUS_LOST","SDL_WINDOWEVENT_HIDDEN","SDL_WINDOWEVENT_HIT_TEST","SDL_WINDOWEVENT_LEAVE","SDL_WINDOWEVENT_MAXIMIZED","SDL_WINDOWEVENT_MINIMIZED","SDL_WINDOWEVENT_MOVED","SDL_WINDOWEVENT_NONE","SDL_WINDOWEVENT_RESIZED","SDL_WINDOWEVENT_RESTORED","SDL_WINDOWEVENT_SHOWN","SDL_WINDOWEVENT_SIZE_CHANGED","SDL_WINDOWEVENT_TAKE_FOCUS","SDL_WINDOWPOS_CENTERED_MASK","SDL_WINDOWPOS_UNDEFINED_MASK","SDL_WINDOW_ALLOW_HIGHDPI","SDL_WINDOW_ALWAYS_ON_TOP","SDL_WINDOW_BORDERLESS","SDL_WINDOW_FOREIGN","SDL_WINDOW_FULLSCREEN","SDL_WINDOW_FULLSCREEN_DESKTOP","SDL_WINDOW_HIDDEN","SDL_WINDOW_INPUT_FOCUS","SDL_WINDOW_INPUT_GRABBED","SDL_WINDOW_LACKS_SHAPE","SDL_WINDOW_MAXIMIZED","SDL_WINDOW_METAL","SDL_WINDOW_MINIMIZED","SDL_WINDOW_MOUSE_CAPTURE","SDL_WINDOW_MOUSE_FOCUS","SDL_WINDOW_OPENGL","SDL_WINDOW_POPUP_MENU","SDL_WINDOW_RESIZABLE","SDL_WINDOW_SHOWN","SDL_WINDOW_SKIP_TASKBAR","SDL_WINDOW_TOOLTIP","SDL_WINDOW_UTILITY","SDL_WINDOW_VULKAN","SDL_WaitEvent","SDL_WaitEventTimeout","SDL_WaitThread","SDL_WarpMouseGlobal","SDL_WarpMouseInWindow","SDL_WasInit","SDL_Window","SDL_WindowEvent","SDL_WindowEventID","SDL_WindowFlags","SDL_WindowShapeMode","SDL_WindowShapeParams","SDL_WriteBE16","SDL_WriteBE32","SDL_WriteBE64","SDL_WriteLE16","SDL_WriteLE32","SDL_WriteLE64","SDL_WriteU8","SDL_YUV_CONVERSION_AUTOMATIC","SDL_YUV_CONVERSION_BT601","SDL_YUV_CONVERSION_BT709","SDL_YUV_CONVERSION_JPEG","SDL_YUV_CONVERSION_MODE","SDL_abs","SDL_acos","SDL_acosf","SDL_asin","SDL_asinf","SDL_atan","SDL_atan2","SDL_atan2f","SDL_atanf","SDL_atof","SDL_atoi","SDL_atomic_t","SDL_blit","SDL_bool","SDL_calloc","SDL_calloc_func","SDL_ceil","SDL_ceilf","SDL_compile_time_assert_SDL_Event","SDL_compile_time_assert_enum","SDL_compile_time_assert_sint16","SDL_compile_time_assert_sint32","SDL_compile_time_assert_sint64","SDL_compile_time_assert_sint8","SDL_compile_time_assert_uint16","SDL_compile_time_assert_uint32","SDL_compile_time_assert_uint64","SDL_compile_time_assert_uint8","SDL_cond","SDL_copysign","SDL_copysignf","SDL_cos","SDL_cosf","SDL_crc32","SDL_errorcode","SDL_eventaction","SDL_exp","SDL_expf","SDL_fabs","SDL_fabsf","SDL_floor","SDL_floorf","SDL_fmod","SDL_fmodf","SDL_free","SDL_free_func","SDL_getenv","SDL_iconv","SDL_iconv_close","SDL_iconv_open","SDL_iconv_string","SDL_iconv_t","SDL_isdigit","SDL_islower","SDL_isspace","SDL_isupper","SDL_itoa","SDL_lltoa","SDL_log","SDL_log10","SDL_log10f","SDL_logf","SDL_ltoa","SDL_main","SDL_main_func","SDL_malloc","SDL_malloc_func","SDL_memcmp","SDL_memcpy","SDL_memmove","SDL_memset","SDL_mutex","SDL_pow","SDL_powf","SDL_qsort","SDL_realloc","SDL_realloc_func","SDL_scalbn","SDL_scalbnf","SDL_sem","SDL_semaphore","SDL_setenv","SDL_sin","SDL_sinf","SDL_snprintf","SDL_sqrt","SDL_sqrtf","SDL_sscanf","SDL_strcasecmp","SDL_strchr","SDL_strcmp","SDL_strdup","SDL_strlcat","SDL_strlcpy","SDL_strlen","SDL_strlwr","SDL_strncasecmp","SDL_strncmp","SDL_strrchr","SDL_strrev","SDL_strstr","SDL_strtod","SDL_strtokr","SDL_strtol","SDL_strtoll","SDL_strtoul","SDL_strtoull","SDL_strupr","SDL_tan","SDL_tanf","SDL_threadID","SDL_tolower","SDL_toupper","SDL_trunc","SDL_truncf","SDL_uitoa","SDL_ulltoa","SDL_ultoa","SDL_utf8strlcpy","SDL_utf8strlen","SDL_version","SDL_vsnprintf","SDL_vsscanf","SDL_vulkanInstance","SDL_vulkanSurface","SDL_wcscasecmp","SDL_wcscmp","SDL_wcsdup","SDL_wcslcat","SDL_wcslcpy","SDL_wcslen","SDL_wcsncasecmp","SDL_wcsncmp","SDL_wcsstr","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","Screen","ScreenFormat","ScreenSaverActive","ScreenSaverReset","SelectionClear","SelectionNotify","SelectionRequest","SetModeDelete","SetModeInsert","ShapeModeBinarizeAlpha","ShapeModeColorKey","ShapeModeDefault","ShapeModeReverseBinarizeAlpha","ShiftMapIndex","ShiftMask","Sint16","Sint32","Sint64","Sint8","SouthEastGravity","SouthGravity","SouthWestGravity","StaticColor","StaticGravity","StaticGray","StippleShape","StructureNotifyMask","SubstructureNotifyMask","SubstructureRedirectMask","Success","SyncBoth","SyncKeyboard","SyncPointer","TileShape","Time","TopIf","True","TrueColor","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","Uint16","Uint32","Uint64","Uint8","UnmapGravity","UnmapNotify","Unsorted","VisibilityChangeMask","VisibilityFullyObscured","VisibilityNotify","VisibilityPartiallyObscured","VisibilityUnobscured","Visual","VisualID","VkInstance","VkInstance_T","VkSurfaceKHR","VkSurfaceKHR_T","WCONTINUED","WEXITED","WINT_MAX","WINT_MIN","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","WestGravity","WhenMapped","WindingRule","Window","WindowShapeMode","XATOM_H","XActivateScreenSaver","XAddConnectionWatch","XAddExtension","XAddHost","XAddHosts","XAddToExtensionList","XAddToSaveSet","XAllPlanes","XAllocColor","XAllocColorCells","XAllocColorPlanes","XAllocNamedColor","XAllowEvents","XAnyEvent","XArc","XAutoRepeatOff","XAutoRepeatOn","XBaseFontNameListOfFontSet","XBell","XBitmapBitOrder","XBitmapPad","XBitmapUnit","XBlackPixel","XBlackPixelOfScreen","XBufferOverflow","XButtonEvent","XButtonPressedEvent","XButtonReleasedEvent","XCellsOfScreen","XChangeActivePointerGrab","XChangeGC","XChangeKeyboardControl","XChangeKeyboardMapping","XChangePointerControl","XChangeProperty","XChangeSaveSet","XChangeWindowAttributes","XChar2b","XCharStruct","XCheckIfEvent","XCheckMaskEvent","XCheckTypedEvent","XCheckTypedWindowEvent","XCheckWindowEvent","XCirculateEvent","XCirculateRequestEvent","XCirculateSubwindows","XCirculateSubwindowsDown","XCirculateSubwindowsUp","XClearArea","XClearWindow","XClientMessageEvent","XClientMessageEvent__bindgen_ty_1","XCloseDisplay","XCloseIM","XCloseOM","XColor","XColormapEvent","XConfigureEvent","XConfigureRequestEvent","XConfigureWindow","XConnectionNumber","XConnectionWatchProc","XContextDependentDrawing","XContextualDrawing","XConvertSelection","XCopyArea","XCopyColormapAndFree","XCopyGC","XCopyPlane","XCreateBitmapFromData","XCreateColormap","XCreateFontCursor","XCreateFontSet","XCreateGC","XCreateGlyphCursor","XCreateIC","XCreateImage","XCreateOC","XCreatePixmap","XCreatePixmapCursor","XCreatePixmapFromBitmapData","XCreateSimpleWindow","XCreateWindow","XCreateWindowEvent","XCrossingEvent","XDefaultColormap","XDefaultColormapOfScreen","XDefaultDepth","XDefaultDepthOfScreen","XDefaultGC","XDefaultGCOfScreen","XDefaultRootWindow","XDefaultScreen","XDefaultScreenOfDisplay","XDefaultVisual","XDefaultVisualOfScreen","XDefineCursor","XDeleteModifiermapEntry","XDeleteProperty","XDestroyIC","XDestroyOC","XDestroySubwindows","XDestroyWindow","XDestroyWindowEvent","XDirectionalDependentDrawing","XDisableAccessControl","XDisplayCells","XDisplayHeight","XDisplayHeightMM","XDisplayKeycodes","XDisplayMotionBufferSize","XDisplayName","XDisplayOfIM","XDisplayOfOM","XDisplayOfScreen","XDisplayPlanes","XDisplayString","XDisplayWidth","XDisplayWidthMM","XDoesBackingStore","XDoesSaveUnders","XDrawArc","XDrawArcs","XDrawImageString","XDrawImageString16","XDrawLine","XDrawLines","XDrawPoint","XDrawPoints","XDrawRectangle","XDrawRectangles","XDrawSegments","XDrawString","XDrawString16","XDrawText","XDrawText16","XEDataObject","XEHeadOfExtensionList","XEnableAccessControl","XEnterWindowEvent","XErrorEvent","XErrorHandler","XEvent","XEventMaskOfScreen","XEventsQueued","XExposeEvent","XExtCodes","XExtData","XExtendedMaxRequestSize","XExtentsOfFontSet","XFetchBuffer","XFetchBytes","XFetchName","XFillArc","XFillArcs","XFillPolygon","XFillRectangle","XFillRectangles","XFilterEvent","XFindOnExtensionList","XFlush","XFlushGC","XFocusChangeEvent","XFocusInEvent","XFocusOutEvent","XFontProp","XFontSet","XFontSetExtents","XFontStruct","XFontsOfFontSet","XForceScreenSaver","XFree","XFreeColormap","XFreeColors","XFreeCursor","XFreeEventData","XFreeExtensionList","XFreeFont","XFreeFontInfo","XFreeFontNames","XFreeFontPath","XFreeFontSet","XFreeGC","XFreeModifiermap","XFreePixmap","XFreeStringList","XGCValues","XGContextFromGC","XGenericEvent","XGenericEventCookie","XGeometry","XGetAtomName","XGetAtomNames","XGetCommand","XGetDefault","XGetErrorDatabaseText","XGetErrorText","XGetEventData","XGetFontPath","XGetFontProperty","XGetGCValues","XGetGeometry","XGetICValues","XGetIMValues","XGetIconName","XGetImage","XGetInputFocus","XGetKeyboardControl","XGetKeyboardMapping","XGetModifierMapping","XGetMotionEvents","XGetOCValues","XGetOMValues","XGetPointerControl","XGetPointerMapping","XGetScreenSaver","XGetSelectionOwner","XGetSubImage","XGetTransientForHint","XGetWMColormapWindows","XGetWMProtocols","XGetWindowAttributes","XGetWindowProperty","XGrabButton","XGrabKey","XGrabKeyboard","XGrabPointer","XGrabServer","XGraphicsExposeEvent","XGravityEvent","XHeightMMOfScreen","XHeightOfScreen","XHostAddress","XIC","XICCallback","XICProc","XID","XIDProc","XIM","XIMAbsolutePosition","XIMBackwardChar","XIMBackwardWord","XIMBitmapType","XIMCallback","XIMCaretDirection","XIMCaretDown","XIMCaretStyle","XIMCaretUp","XIMDontChange","XIMFeedback","XIMForwardChar","XIMForwardWord","XIMHighlight","XIMHotKeyState","XIMHotKeyStateOFF","XIMHotKeyStateON","XIMHotKeyTrigger","XIMHotKeyTriggers","XIMInitialState","XIMIsInvisible","XIMIsPrimary","XIMIsSecondary","XIMLineEnd","XIMLineStart","XIMNextLine","XIMOfIC","XIMPreeditArea","XIMPreeditCallbacks","XIMPreeditCaretCallbackStruct","XIMPreeditDisable","XIMPreeditDrawCallbackStruct","XIMPreeditEnable","XIMPreeditNone","XIMPreeditNothing","XIMPreeditPosition","XIMPreeditState","XIMPreeditStateNotifyCallbackStruct","XIMPreeditUnKnown","XIMPreserveState","XIMPreviousLine","XIMPrimary","XIMProc","XIMResetState","XIMReverse","XIMSecondary","XIMStatusArea","XIMStatusCallbacks","XIMStatusDataType","XIMStatusDrawCallbackStruct","XIMStatusNone","XIMStatusNothing","XIMStringConversionBottomEdge","XIMStringConversionBuffer","XIMStringConversionCallbackStruct","XIMStringConversionChar","XIMStringConversionConcealed","XIMStringConversionFeedback","XIMStringConversionLeftEdge","XIMStringConversionLine","XIMStringConversionOperation","XIMStringConversionPosition","XIMStringConversionRetrieval","XIMStringConversionRightEdge","XIMStringConversionSubstitution","XIMStringConversionText","XIMStringConversionTopEdge","XIMStringConversionType","XIMStringConversionWord","XIMStringConversionWrapped","XIMStyle","XIMStyles","XIMTertiary","XIMText","XIMTextType","XIMUnderline","XIMValuesList","XIMVisibleToBackword","XIMVisibleToCenter","XIMVisibleToForward","XIOErrorExitHandler","XIOErrorHandler","XIconifyWindow","XIfEvent","XImage","XImageByteOrder","XInitExtension","XInitImage","XInitThreads","XInsertModifiermapEntry","XInstallColormap","XInternAtom","XInternAtoms","XInternalConnectionNumbers","XKeyEvent","XKeyPressedEvent","XKeyReleasedEvent","XKeyboardControl","XKeyboardState","XKeycodeToKeysym","XKeymapEvent","XKeysymToKeycode","XKeysymToString","XKillClient","XLastKnownRequestProcessed","XLeaveWindowEvent","XListDepths","XListExtensions","XListFonts","XListFontsWithInfo","XListHosts","XListInstalledColormaps","XListPixmapFormats","XListProperties","XLoadFont","XLoadQueryFont","XLocaleOfFontSet","XLocaleOfIM","XLocaleOfOM","XLockDisplay","XLookupBoth","XLookupChars","XLookupColor","XLookupKeySym","XLookupKeysym","XLookupNone","XLowerWindow","XMapEvent","XMapRaised","XMapRequestEvent","XMapSubwindows","XMapWindow","XMappingEvent","XMaskEvent","XMaxCmapsOfScreen","XMaxRequestSize","XMinCmapsOfScreen","XModifierKeymap","XMotionEvent","XMoveResizeWindow","XMoveWindow","XNArea","XNAreaNeeded","XNBackground","XNBackgroundPixmap","XNBaseFontName","XNClientWindow","XNColormap","XNContextualDrawing","XNCursor","XNDefaultString","XNDestroyCallback","XNDirectionalDependentDrawing","XNFilterEvents","XNFocusWindow","XNFontInfo","XNFontSet","XNForeground","XNGeometryCallback","XNHotKey","XNHotKeyState","XNInputStyle","XNLineSpace","XNMissingCharSet","XNOMAutomatic","XNOrientation","XNPreeditAttributes","XNPreeditCaretCallback","XNPreeditDoneCallback","XNPreeditDrawCallback","XNPreeditStartCallback","XNPreeditState","XNPreeditStateNotifyCallback","XNQueryICValuesList","XNQueryIMValuesList","XNQueryInputStyle","XNQueryOrientation","XNR6PreeditCallback","XNRequiredCharSet","XNResetState","XNResourceClass","XNResourceName","XNSeparatorofNestedList","XNSpotLocation","XNStatusAttributes","XNStatusDoneCallback","XNStatusDrawCallback","XNStatusStartCallback","XNStdColormap","XNStringConversion","XNStringConversionCallback","XNVaNestedList","XNVisiblePosition","XNewModifiermap","XNextEvent","XNextRequest","XNoExposeEvent","XNoOp","XOC","XOM","XOMCharSetList","XOMFontInfo","XOMOfOC","XOMOrientation","XOMOrientation_Context","XOMOrientation_LTR_TTB","XOMOrientation_RTL_TTB","XOMOrientation_TTB_LTR","XOMOrientation_TTB_RTL","XOpenDisplay","XOpenIM","XOpenOM","XOrientation","XParseColor","XParseGeometry","XPeekEvent","XPeekIfEvent","XPending","XPixmapFormatValues","XPlanesOfScreen","XPoint","XPointer","XPointerMovedEvent","XProcessInternalConnection","XPropertyEvent","XProtocolRevision","XProtocolVersion","XPutBackEvent","XPutImage","XQLength","XQueryBestCursor","XQueryBestSize","XQueryBestStipple","XQueryBestTile","XQueryColor","XQueryColors","XQueryExtension","XQueryFont","XQueryKeymap","XQueryPointer","XQueryTextExtents","XQueryTextExtents16","XQueryTree","XRaiseWindow","XReadBitmapFile","XReadBitmapFileData","XRebindKeysym","XRecolorCursor","XReconfigureWMWindow","XRectangle","XRefreshKeyboardMapping","XRegisterIMInstantiateCallback","XRemoveConnectionWatch","XRemoveFromSaveSet","XRemoveHost","XRemoveHosts","XReparentEvent","XReparentWindow","XResetScreenSaver","XResizeRequestEvent","XResizeWindow","XResourceManagerString","XRestackWindows","XRootWindow","XRootWindowOfScreen","XRotateBuffers","XRotateWindowProperties","XScreenCount","XScreenNumberOfScreen","XScreenOfDisplay","XScreenResourceString","XSegment","XSelectInput","XSelectionClearEvent","XSelectionEvent","XSelectionRequestEvent","XSendEvent","XServerInterpretedAddress","XServerVendor","XSetAccessControl","XSetAfterFunction","XSetArcMode","XSetAuthorization","XSetBackground","XSetClipMask","XSetClipOrigin","XSetClipRectangles","XSetCloseDownMode","XSetCommand","XSetDashes","XSetErrorHandler","XSetFillRule","XSetFillStyle","XSetFont","XSetFontPath","XSetForeground","XSetFunction","XSetGraphicsExposures","XSetICFocus","XSetICValues","XSetIMValues","XSetIOErrorExitHandler","XSetIOErrorHandler","XSetIconName","XSetInputFocus","XSetLineAttributes","XSetLocaleModifiers","XSetModifierMapping","XSetOCValues","XSetOMValues","XSetPlaneMask","XSetPointerMapping","XSetScreenSaver","XSetSelectionOwner","XSetState","XSetStipple","XSetSubwindowMode","XSetTSOrigin","XSetTile","XSetTransientForHint","XSetWMColormapWindows","XSetWMProtocols","XSetWindowAttributes","XSetWindowBackground","XSetWindowBackgroundPixmap","XSetWindowBorder","XSetWindowBorderPixmap","XSetWindowBorderWidth","XSetWindowColormap","XStoreBuffer","XStoreBytes","XStoreColor","XStoreColors","XStoreName","XStoreNamedColor","XStringToKeysym","XSupportsLocale","XSync","XSynchronize","XTextExtents","XTextExtents16","XTextItem","XTextItem16","XTextWidth","XTextWidth16","XTimeCoord","XTranslateCoordinates","XUndefineCursor","XUngrabButton","XUngrabKey","XUngrabKeyboard","XUngrabPointer","XUngrabServer","XUninstallColormap","XUnloadFont","XUnlockDisplay","XUnmapEvent","XUnmapSubwindows","XUnmapWindow","XUnregisterIMInstantiateCallback","XUnsetICFocus","XVaCreateNestedList","XVaNestedList","XVendorRelease","XVisibilityEvent","XVisualIDFromVisual","XWarpPointer","XWhitePixel","XWhitePixelOfScreen","XWidthMMOfScreen","XWidthOfScreen","XWindowAttributes","XWindowChanges","XWindowEvent","XWithdrawWindow","XWriteBitmapFile","XYBitmap","XYPixmap","X_HAVE_UTF8_STRING","X_PROTOCOL","X_PROTOCOL_REVISION","XlibSpecificationRelease","XmbDrawImageString","XmbDrawString","XmbDrawText","XmbLookupString","XmbResetIC","XmbTextEscapement","XmbTextExtents","XmbTextItem","XmbTextPerCharExtents","XrmInitialize","Xutf8DrawImageString","Xutf8DrawString","Xutf8DrawText","Xutf8LookupString","Xutf8ResetIC","Xutf8TextEscapement","Xutf8TextExtents","Xutf8TextPerCharExtents","XwcDrawImageString","XwcDrawString","XwcDrawText","XwcLookupString","XwcResetIC","XwcTextEscapement","XwcTextExtents","XwcTextItem","XwcTextPerCharExtents","YSorted","YXBanded","YXSorted","ZPixmap","_ALLOCA_H","_ATFILE_SOURCE","_BITS_BYTESWAP_H","_BITS_ENDIANNESS_H","_BITS_ENDIAN_H","_BITS_PTHREADTYPES_ARCH_H","_BITS_PTHREADTYPES_COMMON_H","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_UINTN_IDENTITY_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_ENDIAN_H","_Exit","_FEATURES_H","_Float32","_Float32x","_Float64","_Float64x","_MM_DENORMALS_ZERO_MASK","_MM_DENORMALS_ZERO_OFF","_MM_DENORMALS_ZERO_ON","_MM_EXCEPT_DENORM","_MM_EXCEPT_DIV_ZERO","_MM_EXCEPT_INEXACT","_MM_EXCEPT_INVALID","_MM_EXCEPT_MASK","_MM_EXCEPT_OVERFLOW","_MM_EXCEPT_UNDERFLOW","_MM_FLUSH_ZERO_MASK","_MM_FLUSH_ZERO_OFF","_MM_FLUSH_ZERO_ON","_MM_HINT_ET0","_MM_HINT_ET1","_MM_HINT_NTA","_MM_HINT_T0","_MM_HINT_T1","_MM_HINT_T2","_MM_MASK_DENORM","_MM_MASK_DIV_ZERO","_MM_MASK_INEXACT","_MM_MASK_INVALID","_MM_MASK_MASK","_MM_MASK_OVERFLOW","_MM_MASK_UNDERFLOW","_MM_ROUND_DOWN","_MM_ROUND_MASK","_MM_ROUND_NEAREST","_MM_ROUND_TOWARD_ZERO","_MM_ROUND_UP","_POSIX_C_SOURCE","_POSIX_SOURCE","_SDL_AudioStream","_SDL_GameController","_SDL_Haptic","_SDL_Joystick","_SDL_Sensor","_SDL_iconv_t","_STDC_PREDEF_H","_STDINT_H","_STDLIB_H","_STRUCT_TIMESPEC","_SYS_CDEFS_H","_SYS_SELECT_H","_SYS_TYPES_H","_THREAD_MUTEX_INTERNAL_H","_THREAD_SHARED_TYPES_H","_XDisplay","_XEvent","_XExtData","_XGC","_XIC","_XIM","_XIMHotKeyTrigger","_XIMHotKeyTriggers","_XIMPreeditCaretCallbackStruct","_XIMPreeditDrawCallbackStruct","_XIMPreeditStateNotifyCallbackStruct","_XIMStatusDrawCallbackStruct","_XIMStatusDrawCallbackStruct__bindgen_ty_1","_XIMStringConversionCallbackStruct","_XIMStringConversionText","_XIMStringConversionText__bindgen_ty_1","_XIMText","_XIMText__bindgen_ty_1","_XImage","_XImage_funcs","_XOC","_XOM","_XPrivDisplay","_XPrivate","_Xdebug","_Xmblen","_Xmbtowc","_XrmHashBucketRec","_Xwctomb","__BIG_ENDIAN","__BIT_TYPES_DEFINED__","__BYTE_ORDER","__FD_SETSIZE","__FLOAT_WORD_ORDER","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNUC_VA_LIST","__GNU_LIBRARY__","__HAVE_DISTINCT_FLOAT128","__HAVE_DISTINCT_FLOAT128X","__HAVE_DISTINCT_FLOAT16","__HAVE_DISTINCT_FLOAT32","__HAVE_DISTINCT_FLOAT32X","__HAVE_DISTINCT_FLOAT64","__HAVE_DISTINCT_FLOAT64X","__HAVE_FLOAT128","__HAVE_FLOAT128X","__HAVE_FLOAT16","__HAVE_FLOAT32","__HAVE_FLOAT32X","__HAVE_FLOAT64","__HAVE_FLOAT64X","__HAVE_FLOAT64X_LONG_DOUBLE","__HAVE_FLOATN_NOT_TYPEDEF","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__LINUX__","__LITTLE_ENDIAN","__OFF_T_MATCHES_OFF64_T","__PDP_ENDIAN","__PTHREAD_MUTEX_HAVE_PREV","__RLIM_T_MATCHES_RLIM64_T","__SIZEOF_PTHREAD_ATTR_T","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WALL","__WCLONE","__WCOREFLAG","__WNOTHREAD","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__W_CONTINUED","__a","__align","__align","__align","__align","__align","__align","__align","__align","__align","__bindgen_anon_1","__bindgen_anon_2","__bindgen_padding_0","__blkcnt64_t","__blkcnt_t","__blksize_t","__builtin_va_list","__c","__caddr_t","__clang_max_align_nonce1","__clang_max_align_nonce2","__clock_t","__clock_t_defined","__clockid_t","__clockid_t_defined","__compar_fn_t","__count","__ctype_get_mb_cur_max","__cur_writer","__daddr_t","__data","__data","__data","__data","__dev_t","__elision","__fd_mask","__fds_bits","__flags","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__g1_orig_size","__g1_start","__g1_start32","__g_refs","__g_signals","__g_size","__gid_t","__glibc_c99_flexarr_available","__gnuc_va_list","__have_pthread_attr_t","__high","__high","__id_t","__init","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__kind","__ldiv_t_defined","__list","__lldiv_t_defined","__lock","__loff_t","__low","__low","__m128","__m128_u","__m128d","__m128d_u","__m128i","__m128i_u","__m64","__mode_t","__next","__next","__nlink_t","__nusers","__off64_t","__off_t","__old_x","__once_flag","__owner","__pad1","__pad2","__pad3","__pad4","__pid_t","__prev","__pthread_cond_s","__pthread_cond_s__bindgen_ty_1","__pthread_cond_s__bindgen_ty_1__bindgen_ty_1","__pthread_cond_s__bindgen_ty_2","__pthread_cond_s__bindgen_ty_2__bindgen_ty_1","__pthread_internal_list","__pthread_internal_slist","__pthread_list_t","__pthread_mutex_s","__pthread_rwlock_arch_t","__pthread_slist_t","__quad_t","__readers","__rlim64_t","__rlim_t","__rwelision","__shared","__sig_atomic_t","__sigset_t","__sigset_t_defined","__size","__size","__size","__size","__size","__size","__size","__size","__size","__socklen_t","__spins","__ssize_t","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__thrd_t","__time_t","__time_t_defined","__timer_t","__timer_t_defined","__timeval_defined","__tss_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__v16qi","__v16qs","__v16qu","__v1di","__v2df","__v2di","__v2du","__v2si","__v4hi","__v4sf","__v4si","__v4su","__v8hi","__v8hu","__v8qi","__va_list_tag","__val","__val","__wrefs","__writers","__writers_futex","__wrphase_futex","__wseq","__wseq32","__x","_address","_address","_address","_address","_bindgen_ty_1","_mm_clflush","_mm_getcsr","_mm_lfence","_mm_mfence","_mm_pause","_mm_setcsr","_mm_sfence","a","a64l","abort","above","above","abs","add_pixel","address","adevice","aligned_alloc","all_chars_exist","all_event_masks","alloca","always_ignore","angle1","angle2","arc_mode","ascent","ascent","at_quick_exit","atexit","atof","atoi","atol","atoll","atom","attack_length","attack_length","attack_length","attack_length","attack_level","attack_level","attack_level","attack_level","attributes","auto_repeat_mode","auto_repeats","axis","axis","axis","b","b","b","background","background_pixel","background_pixmap","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_store","backing_store","backing_store","ball","base","bell_duration","bell_duration","bell_percent","bell_percent","bell_pitch","bell_pitch","binarizationCutoff","bindType","bit_gravity","bit_gravity","bitmap","bitmap_bit_order","bitmap_bit_order","bitmap_pad","bitmap_pad","bitmap_unit","bitmap_unit","bits_per_pixel","bits_per_pixel","bits_per_pixel","bits_per_rgb","black_pixel","blkcnt_t","blksize_t","blue","blue_mask","blue_mask","border_pixel","border_pixmap","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsearch","buf","button","button","button","button","button","button","button","button","button","button","button","buttonid","buttons","byte1","byte2","byte_order","byte_order","bytes_per_line","caddr_t","callback","callback","callback","calloc","cap_style","card32","caret","caxis","cbutton","cdevice","center","channels","channels","chars","chars","chars","chars","charset_count","charset_list","chg_first","chg_length","class","class","clearenv","clicks","client_data","client_data","clip_mask","clip_rect","clip_x_origin","clip_y_origin","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","close","cmap","code","colorKey","colorScheme","colormap","colormap","colormap","colors","colors","common","condition","condition","constant","cookie","count","count","count","count_styles","count_values","country","create_image","csensor","ctouchpad","cursor","custom","dDist","dTheta","daddr_t","dash_offset","dashes","data","data","data","data","data","data","data","data","data1","data1","data1","data1","data2","data2","data2","db","deadband","default_char","default_gc","default_screen","delay","delay","delay","delay","delay","delta","delta","delta","delta","depth","depth","depth","depth","depth","depths","descent","descent","destroy_image","detail","detail","detail","dev_t","dgesture","dir","direction","direction","direction","direction","direction","direction","direction","direction","direction","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display_name","div","div_t","do_not_propagate_mask","do_not_propagate_mask","drand48","drand48_data","drand48_r","drawable","drawable","driverdata","drop","dst_format","dummy","dummy","dx","dy","ecvt","ecvt_r","edit","encoding_is_wchar","encoding_is_wchar","end","end_ptr","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","erand48_r","error","error_code","event","event","event","event","event","event","event","event","event","event","event_mask","evtype","evtype","exit","ext_data","ext_data","ext_data","ext_data","ext_data","extension","extension","extension","f","factor","fade_length","fade_length","fade_length","fade_length","fade_level","fade_level","fade_level","fade_level","family","fcvt","fcvt_r","fd","fd_mask","fd_set","feedback","feedback","fid","file","filename","fill_rule","fill_style","filter_index","filters","finger","fingerId","first_error","first_event","first_keycode","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","font","font","font","font","font_name_list","font_set","font_set","font_struct_list","foreground","format","format","format","format","format","format","fp_offset","fptr","free","free_private","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","fsblkcnt_t","fsfilcnt_t","fsid_t","function","function","g","g","gc","gcvt","gestureId","get_pixel","getenv","getloadavg","getsubopt","gid_t","global_auto_repeat","gp_offset","graphics_exposures","green","green_mask","green_mask","h","h","h","h","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hat","hat","hat","hat_mask","height","height","height","height","height","height","height","height","height","height","height","height","here","hidden","id","id_t","info","initstate","initstate_r","ino_t","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","interval","interval","interval","interval","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_hint","iscapture","jaxis","jball","jbutton","jdevice","jhat","join_style","jrand48","jrand48_r","key","key","key","key_click_percent","key_click_percent","key_t","key_vector","keycode","keysym","keysym","l","l64a","labs","language","large_magnitude","last_request_read","lbearing","lcong48","lcong48_r","ldiv","ldiv_t","led","led_mask","led_mode","left_coeff","left_sat","leftright","len","len_cvt","len_mult","len_ratio","length","length","length","length","length","length","length","length","length","length","level","line_style","line_width","linenum","list_blitmap","llabs","lldiv","lldiv_t","locked","loff_t","lrand48","lrand48_r","magnitude","major","major_code","major_code","major_opcode","malloc","map","map_entries","map_installed","map_state","max_align_t","max_bounds","max_byte1","max_char_or_byte2","max_ink_extent","max_keycode","max_keypermod","max_logical_extent","max_maps","max_request_size","max_texture_height","max_texture_width","mblen","mbs","mbstowcs","mbtowc","mem","message","message_type","mgesture","mheight","min_bounds","min_byte1","min_char_or_byte2","min_keycode","min_maps","minor","minor_code","minor_code","minor_code","mkdtemp","mkstemp","mkstemps","mktemp","mod_","mode","mode","mode","mode_t","modifier","modifier_mask","modifiermap","motion","motion_buffer","mrand48","mrand48_r","msg","msg","multi_byte","mwidth","n_properties","name","name","nchars","nchars","nchars","nchars","ncolors","ndepths","needed","new","next","next","next","nformats","nlink_t","nrand48","nrand48_r","nscreens","numFingers","numFingers","num_font","num_hot_key","num_orientation","num_texture_formats","number","numbuttons","nvisuals","obdata","off_t","offset","on_exit","operation","orientation","overflow_arg_area","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","pad","pad","padding","padding","padding","padding","padding1","padding1","padding1","padding1","padding1","padding1","padding1","padding1","padding1","padding1","padding2","padding2","padding2","padding2","padding2","padding2","padding2","padding2","padding2","padding2","padding3","padding3","padding3","padding3","padding3","padding3","padding3","padding4","padding4","palette","parameters","parent","parent","parent","parent","parent","patch","per_char","period","period","periodic","phase","pid_t","pitch","pixel","pixels","pixmap_format","pixmap_format","place","place","plane_mask","position","position","posix_memalign","pressure","pressure","pressure","private1","private10","private11","private12","private13","private14","private15","private16","private17","private18","private19","private2","private3","private4","private5","private6","private8","private9","private_data","properties","property","property","proto_major_version","proto_minor_version","pselect","pthread_attr_t","pthread_barrier_t","pthread_barrierattr_t","pthread_cond_t","pthread_condattr_t","pthread_key_t","pthread_mutex_t","pthread_mutexattr_t","pthread_once_t","pthread_rwlock_t","pthread_rwlockattr_t","pthread_spinlock_t","pthread_t","put_pixel","putenv","qecvt","qecvt_r","qfcvt","qfcvt_r","qgcvt","qlen","qsort","quad_t","quick_exit","quit","quot","quot","quot","r","r","ramp","rand","rand_deg","rand_r","rand_sep","rand_type","random","random_data","random_r","rate_incr","rbearing","read","realloc","reallocarray","realpath","red","red_mask","red_mask","refcount","refcount","refcount","refresh_rate","reg_save_area","register_t","release","rem","rem","rem","repeat","request","request","request_code","requestor","requestor","resource_alloc","resourceid","right_coeff","right_sat","root","root","root","root","root","root","root_depth","root_input_mask","root_visual","rpmatch","rptr","s","same_screen","same_screen","same_screen","same_screen","samples","samples","save_under","save_under","save_unders","scancode","scanline_pad","scanline_pad","screen","screen","screens","seed48","seed48_r","seek","select","selection","selection","selection","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","sensor","sensor","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","setenv","setstate","setstate_r","shell_surface","sibling","sigset_t","silence","size","size","size_t","small_magnitude","srand","srand48","srand48_r","srandom","srandom_r","src_format","ssize_t","stack_mode","start","start","state","state","state","state","state","state","state","state","state","state","state","state","state","state","stipple","stop","string","string","strtod","strtof","strtol","strtold","strtoll","strtoq","strtoul","strtoull","strtouq","style","sub_image","subsystem","subsystem","subwindow","subwindow","subwindow","subwindow","subwindow_mode","supported_styles","supported_values","surface","suseconds_t","sym","system","syswm","target","target","text","text","text","text","text","text","text","texture_formats","tfinger","tile","time","time","time","time","time","time","time","time","time","time_t","timer_t","timespec","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timeval","title","touchId","touchId","touchId","touchpad","trigger_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ts_x_origin","ts_y_origin","tv_nsec","tv_sec","tv_sec","tv_usec","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typelength","u_char","u_int","u_int16_t","u_int32_t","u_int64_t","u_int8_t","u_long","u_quad_t","u_short","uid_t","uint","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","ulong","unknown","unsetenv","unused","user","userdata","userdata","ushort","va_list","valloc","value","value","value","value","value","value","value_mask","valuelength","vendor","version","version","version","visual","visual","visualid","visuals","w","w","w","w","wchar_t","wcs","wcstombs","wctomb","wheel","which","which","which","which","which","which","which","which","which","which","which","which","which","which","which","white_pixel","wide_char","width","width","width","width","width","width","width","width","width","width","width","width","width","win_gravity","win_gravity","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","windowID","windowID","windowID","windowID","windowID","windowID","windowID","windowID","windowID","windowID","wl","wl_display","wl_shell_surface","wl_surface","write","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x11","x11","x2","x_root","x_root","x_root","x_root","xany","xbutton","xcirculate","xcirculaterequest","xclient","xcolormap","xconfigure","xconfigurerequest","xcookie","xcreatewindow","xcrossing","xdefaults","xdestroywindow","xerror","xexpose","xfocus","xgeneric","xgraphicsexpose","xgravity","xkey","xkeymap","xmap","xmapping","xmaprequest","xmotion","xnoexpose","xoffset","xproperty","xrel","xrel","xreparent","xresizerequest","xselection","xselectionclear","xselectionrequest","xunmap","xvisibility","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","y_root","y_root","y_root","y_root","your_event_mask","yrel","yrel"],"q":["sdl2_sysdlt; The application did enter the background and may not get …","&lt; The application is now interactive Called on iOS in …","&lt; The application is low on memory, free memory if …","&lt; The application is being terminated by the OS Called on …","&lt; The application is about to enter the background Called …","&lt; The application is about to enter the foreground Called …","","","","","","","","&lt; Terminate the program.","&lt; Ignore the assert from now on.","&lt; Make the debugger trigger a breakpoint.","&lt; Ignore the assert.","&lt; Retry the assert immediately.","","","&lt; A new audio device is available","&lt; An audio device has been removed.","","","","","","","","","","","","","","Add a function which is called when an event is added to …","\\\\brief Add a function to watch a particular hint","\\\\brief Add a new timer to the pool of timers already …","\\\\brief Create an SDL_PixelFormat structure from a pixel …","\\\\brief Create a palette structure with the specified …","","Array component order, low byte -&gt; high byte.","","","","\\\\brief Add to an atomic variable.","\\\\brief Set an atomic variable to a new value if it is …","\\\\brief Set a pointer to a new value if it is currently an …","\\\\brief Get the value of an atomic variable","\\\\brief Get the value of a pointer atomically.","\\\\brief Lock a spin lock by setting it to a non-zero value.","\\\\brief Set an atomic variable to a value.","\\\\brief Set a pointer to a value atomically.","\\\\brief Try to lock a spin lock by setting it to a non-zero …","\\\\brief Unlock a spin lock by setting it to 0. Always …","","This function is called when the audio device needs more …","\\\\brief Audio device event structure (event.adevice.*)","SDL Audio Device IDs.","","\\\\brief Audio format flags.","","","The calculated values in this structure are calculated by …","","","Get the number of converted/resampled bytes available. The …","Clear any pending data in the stream without converting it","Tell the stream that you’re done sending data, and …","Get converted/resampled data from the stream","Add data to be converted/resampled to the stream","","","","","&lt; dstA, dstA, dstA, dstA","&lt; dstR, dstG, dstB, dstA","&lt; 1, 1, 1, 1","&lt; 1-dstA, 1-dstA, 1-dstA, 1-dstA","&lt; 1-dstR, 1-dstG, 1-dstB, 1-dstA","&lt; 1-srcA, 1-srcA, 1-srcA, 1-srcA","&lt; 1-srcR, 1-srcG, 1-srcB, 1-srcA","&lt; srcA, srcA, srcA, srcA","&lt; srcR, srcG, srcB, srcA","&lt; 0, 0, 0, 0","&lt; additive blending dstRGB = (srcRGB * srcA) + dstRGB dstA …","&lt; alpha blending dstRGB = (srcRGB * srcA) + (dstRGB * …","","&lt; color modulate dstRGB = srcRGB * dstRGB dstA = dstA","&lt; color multiply dstRGB = (srcRGB * dstRGB) + (dstRGB * …","&lt; no blending dstRGBA = srcRGBA","&lt; dst + src: supported by all renderers","&lt; max(dst, src) : supported by D3D11","&lt; min(dst, src) : supported by D3D11","&lt; src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES","&lt; dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES","","","","","","","Bitmap pixel order, high bit -&gt; low bit.","\\\\brief The normalized factor used to multiply pixel …","\\\\brief The blend mode used in SDL_RenderCopy() and drawing …","\\\\brief The blend operation used when combining source and …","&lt; Private","This function takes a source format and rate and a …","","&lt; The clipboard changed","&lt; Game controller axis motion","&lt; Game controller button pressed","&lt; Game controller button released","&lt; A new Game controller has been inserted into the system","&lt; The controller mapping was updated","&lt; An opened Game controller has been removed","&lt; Game controller sensor was updated","&lt; Game controller touchpad was touched","&lt; Game controller touchpad finger was moved","&lt; Game controller touchpad finger was lifted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Calculate a 256 entry gamma ramp for a gamma value.","\\\\brief Capture the mouse, to track input outside an SDL …","\\\\brief Clear the error message for the current thread","\\\\brief  Clear all hints","Drop any queued audio data. For playback devices, this is …","This function shuts down audio processing and closes the …","","","\\\\brief Fields shared by every event","\\\\brief Create a custom blend mode, which may or may not be …","Restart all threads that are waiting on the condition …","Restart one of the threads that are waiting on the …","Wait on the condition variable, unlocking the provided …","Waits for at most \\\\c ms milliseconds, and returns 0 if the …","\\\\brief Game controller axis motion event structure …","\\\\brief Game controller button event structure …","\\\\brief Controller device event structure (event.cdevice.*)","\\\\brief Game controller sensor event structure …","\\\\brief Game controller touchpad event structure …","Once you have initialized the \\\\c cvt structure using …","\\\\brief Copy a block of pixels of one format to another …","Creates a new surface of the specified format, and then …","","\\\\brief Create a color cursor.","Create a condition variable.","\\\\brief Create a cursor, using the specified bitmap data and","Create a mutex, initialized unlocked.","Allocate and free an RGB surface.","","","","\\\\brief Create a 2D rendering context for a window.","Create a semaphore, initialized with value, returns NULL …","\\\\brief Create a window that can be shaped with the …","\\\\brief Create a 2D software rendering context for a …","\\\\brief Create a system cursor.","\\\\brief Create a texture for a rendering context.","\\\\brief Create a texture from an existing surface.","Create a thread with a default stack size.","Create a thread.","\\\\brief Create a window with the specified position, …","\\\\brief Create a window and default renderer","\\\\brief Create an SDL window from an existing native window.","","","&lt; Display state change","&lt; Display has been added to the system","&lt; Display has been removed from the system","&lt; Never used","&lt; Display orientation has changed to data1","","","","&lt; A new set of drops is beginning (NULL filename)","&lt; Current set of drops is now complete (NULL filename)","&lt; The system requests a file open","&lt; text/plain drag-and-drop event","","Remove an event watch function added with …","\\\\brief Remove a function watching a particular hint","\\\\brief Wait a specified number of milliseconds before …","Dequeue more audio on non-callback devices.","Destroy a condition variable.","Destroy a mutex.","\\\\brief Destroy the rendering context for a window and free …","Destroy a semaphore.","\\\\brief Destroy the specified texture.","\\\\brief Destroy a window.","A thread may be “detached” to signify that it should …","\\\\brief Prevent the screen from being blanked by a …","\\\\brief Display state change event data (event.display.*)","\\\\brief Event subtype for display events","\\\\brief  The structure that defines a display mode","","\\\\brief Dollar Gesture Event (event.dgesture.*)","\\\\brief An event used to request a file open by the system …","","","","","","","\\\\brief Allow the screen to be blanked by a screensaver","\\\\brief Calculate a minimal rectangle enclosing a set of …","","\\\\brief General event structure","","This function allows you to set the state of processing …","\\\\brief The types of events that can be delivered.","","","","","","&lt; Unused (do not remove)","&lt; flip horizontally","&lt; Do not flip","&lt; flip vertically","\\\\brief  The structure that defines a point (floating point)","\\\\brief A rectangle, with the origin at the upper left …","Performs a fast fill of the given rectangle with \\\\c color.","","Run the filter function on the current event queue, …","","","This function clears events from the event queue This …","","Free an audio stream","\\\\brief Frees a cursor created with SDL_CreateCursor() or …","\\\\brief Free an SDL_PixelFormat structure.","\\\\brief Free a palette created with SDL_AllocPalette().","","","This function frees data previously allocated with …","","\\\\brief An opaque handle to an OpenGL context.","","","","","","","","","","\\\\brief Bind the texture to the current OpenGL/ES/ES2 …","","","","","","","","","","&lt; GLX_CONTEXT_ES2_PROFILE_BIT_EXT","","","","","","","","","","\\\\brief Create an OpenGL context for use with an OpenGL …","","","\\\\brief Delete an OpenGL context.","\\\\brief Return true if an OpenGL extension is supported for …","","","\\\\brief Get the actual value for an attribute from the …","\\\\brief Get the currently active OpenGL context.","\\\\brief Get the currently active OpenGL window.","\\\\brief Get the size of a window’s underlying drawable in …","\\\\brief Get the address of an OpenGL function.","\\\\brief Get the swap interval for the current OpenGL …","\\\\brief Dynamically load an OpenGL library.","","","\\\\brief Set up an OpenGL context for rendering into an …","","","\\\\brief Reset all previously set OpenGL context attributes …","","","","\\\\brief Set an OpenGL window attribute before window …","\\\\brief Set the swap interval for the current OpenGL …","\\\\brief Swap the OpenGL buffers for a window, if …","\\\\brief Unbind a texture from the current OpenGL/ES/ES2 …","\\\\brief Unload the OpenGL library previously loaded by …","\\\\brief OpenGL configuration attributes","","","","","Add or update an existing mapping configuration","Load a set of mappings from a seekable SDL data stream …","The list of axes available from a controller","","The list of buttons available from a controller","Get the SDL joystick layer binding for this controller …","","","Close a controller previously opened with …","Enable/disable controller event polling.","Return the SDL_GameController associated with an instance …","Return the SDL_GameController associated with a player …","Returns SDL_TRUE if the controller has been opened and …","Get the current state of an axis control on a game …","turn this string into a axis mapping","Get the SDL joystick layer binding for this controller …","Get the SDL joystick layer binding for this controller …","Get the current state of a button on a game controller.","turn this string into a button mapping","Get the underlying joystick object used by a controller","Get the number of supported simultaneous fingers on a …","Get the number of touchpads on a game controller.","Get the player index of an opened game controller, or -1 …","Get the USB product ID of an opened controller, if …","Get the product version of an opened controller, if …","Get the current state of a game controller sensor.","Get the serial number of an opened controller, if …","turn this axis enum into a string mapping","turn this button enum into a string mapping","Get the current state of a finger on a touchpad on a game …","Return the type of this currently opened controller","Get the USB vendor ID of an opened controller, if …","Return whether a game controller has a given axis","Return whether a game controller has a given button","Return whether a controller has an LED","Return whether a game controller has a particular sensor.","Query whether sensor data reporting is enabled for a game …","Get a mapping string for an open GameController","Get the mapping of a game controller. This can be called …","Get a mapping string for a GUID","Get the mapping at a particular index.","Return the name for this currently opened controller","Get the implementation dependent name of a game controller.","Get the number of mappings installed","Open a game controller for use. The index passed as an …","Start a rumble effect Each call to this function cancels …","Start a rumble effect in the game controller’s triggers …","Update a controller’s LED color.","Set the player index of an opened game controller","Set whether data reporting for a game controller sensor is …","","Get the type of a game controller. This can be called …","Update the current state of the open game controllers.","","\\\\brief Get the current assertion handler.","\\\\brief Get a list of all assertion failures.","Get the human-readable name of a specific audio device. …","","","","\\\\brief Get the path where the application resides.","This function returns the L1 cache line size of the CPU","This function returns the number of CPU cores available.","Gets the clipping rectangle for the destination surface in …","\\\\brief Get UTF-8 text from the clipboard, which must be …","\\\\brief Get the closest match to the requested display mode.","\\\\brief Gets the color key (transparent pixel) in a …","This function returns the name of the current audio …","\\\\brief Fill in information about the current display mode.","\\\\brief Returns the name of the currently initialized video …","\\\\brief Return the active cursor.","\\\\brief Get the default assertion handler.","\\\\brief Return the default cursor.","\\\\brief Fill in information about the desktop display mode.","\\\\brief Get the desktop area represented by a display, with …","\\\\brief Get the dots/pixels-per-inch for a display","\\\\brief Fill in information about a specific display mode.","\\\\brief Get the name of a display in UTF-8 encoding","\\\\brief Get the orientation of a display","\\\\brief Get the usable desktop area represented by a …","\\\\brief Get the last error message that was set","\\\\brief Get the last error message that was set for the …","Return the current event filter - can be used to “chain…","\\\\brief Get the current state of the mouse, in relation to …","\\\\brief Get the window that currently has an input grab …","\\\\brief Get a hint","\\\\brief Get a hint","\\\\brief Get a key code from a human-readable name","\\\\brief Get the key code corresponding to the given …","\\\\brief Get a human-readable name for a key.","\\\\brief Get the window which currently has keyboard focus.","\\\\brief Get a snapshot of the current state of the keyboard.","\\\\brief Get the current set of SDL memory functions","\\\\brief Get the current key modifier state for the keyboard.","\\\\brief Get the window which currently has mouse focus.","\\\\brief Retrieve the current state of the mouse.","\\\\brief Get the number of outstanding (unfreed) allocations","Get the number of available devices exposed by the current …","","\\\\brief Returns the number of available display modes.","\\\\brief Get the number of 2D rendering drivers available …","\\\\brief Get the number of registered touch devices.","\\\\brief Get the number of active fingers for a given touch …","\\\\brief Returns the number of available video displays.","\\\\brief Get the number of video drivers compiled into SDL","\\\\brief Get the current value of the high resolution counter","\\\\brief Get the count per second of the high resolution …","\\\\brief Get the human readable name of a pixel format","\\\\brief Gets the name of the platform.","\\\\brief Get the current power supply details.","\\\\brief Get the user-and-app-specific path where files can …","\\\\brief Report the user’s preferred locale.","Get the number of bytes of still-queued audio.","\\\\brief Get the RGB components from a pixel of the …","\\\\brief Get the RGBA components from a pixel of the …","\\\\brief Query whether relative mouse mode is enabled.","\\\\brief Retrieve the relative state of the mouse.","\\\\brief Get the blend mode used for drawing operations.","\\\\brief Get the color used for drawing operations (Rect, …","\\\\brief Get information about a specific 2D rendering …","\\\\brief Get the current render target or NULL for the …","\\\\brief Get the renderer associated with a window.","\\\\brief Get information about a rendering context.","\\\\brief Get the output size in pixels of a rendering …","\\\\brief Get the code revision of SDL that is linked against …","\\\\brief Get the revision number of SDL that is linked …","\\\\brief Get the scancode corresponding to the given key …","\\\\brief Get a scancode from a human-readable name","\\\\brief Get a human-readable name for a scancode.","\\\\brief Get the shape parameters of a shaped window.","\\\\brief Get the additional alpha value used in blit …","\\\\brief Get the blend mode used for blit operations.","\\\\brief Get the additional color value used in blit …","This function returns the amount of RAM configured in the …","\\\\brief Get the additional alpha value used in render copy …","\\\\brief Get the blend mode used for texture copy operations.","\\\\brief Get the additional color value used in render copy …","\\\\brief Get the scale mode used for texture scale …","Get the thread identifier for the specified thread.","Get the thread name, as it was specified in …","\\\\brief Get the number of milliseconds since the SDL …","\\\\brief Get the touch ID with the given index, or 0 if the …","\\\\brief Get the type of the given touch device.","\\\\brief Get the finger object of the given touch, with the …","\\\\brief Get the version of SDL that is linked against your …","\\\\brief Get the name of a built in video driver.","\\\\brief Get the size of a window’s borders (decorations) …","\\\\brief Get the brightness (gamma correction) for a window.","\\\\brief Retrieve the data pointer associated with a window.","\\\\brief Get the display index associated with a window.","\\\\brief Fill in information about the display mode used …","\\\\brief Get the window flags.","\\\\brief Get a window from a stored ID, or NULL if it doesn…","\\\\brief Get the gamma ramp for a window.","\\\\brief Get a window’s input grab mode.","\\\\brief Get the numeric ID of a window, for logging …","\\\\brief Get the maximum size of a window’s client area.","\\\\brief Get the minimum size of a window’s client area.","\\\\brief Get the opacity of a window.","\\\\brief Get the pixel format associated with the window.","\\\\brief Get the position of a window.","\\\\brief Get the size of a window’s client area.","\\\\brief Get the SDL surface associated with the window.","\\\\brief Get the title of a window, in UTF-8 format.","\\\\brief This function allows access to driver-dependent …","\\\\brief Get the YUV conversion mode","\\\\brief Get the YUV conversion mode, returning the correct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Region can drag entire window.","&lt; Region is normal. No special properties.","","","","","","","","","","\\\\brief Closes a haptic device previously opened with …","\\\\brief A structure containing a template for a Condition …","\\\\brief A structure containing a template for a Constant …","\\\\brief A structure containing a template for the …","\\\\brief Destroys a haptic effect on the device.","\\\\brief Structure that represents a haptic direction.","\\\\brief The generic template for any haptic effect.","\\\\brief Checks to see if effect is supported by haptic.","\\\\brief Gets the status of the current effect on the haptic …","\\\\brief Gets the index of a haptic device.","\\\\brief A structure containing a template for a Left/Right …","\\\\brief Get the implementation dependent name of a haptic …","\\\\brief Creates a new haptic effect on the device.","\\\\brief Gets the number of haptic axes the device has.","\\\\brief Returns the number of effects a haptic device can …","\\\\brief Returns the number of effects a haptic device can …","\\\\brief Opens a haptic device for use.","\\\\brief Opens a haptic device for use from a joystick …","\\\\brief Tries to open a haptic device from the current …","\\\\brief Checks if the haptic device at index has been …","\\\\brief Pauses a haptic device.","\\\\brief A structure containing a template for a Periodic …","\\\\brief Gets the haptic device’s supported features in …","\\\\brief A structure containing a template for a Ramp effect.","\\\\brief Initializes the haptic device for simple rumble …","\\\\brief Runs simple rumble on a haptic device","\\\\brief Stops the simple rumble on a haptic device.","\\\\brief Checks to see if rumble is supported on a haptic …","\\\\brief Runs the haptic effect on its associated haptic …","\\\\brief Sets the global autocenter of the device.","\\\\brief Sets the global gain of the device.","\\\\brief Stops all the currently playing effects on a haptic …","\\\\brief Stops the haptic effect on its associated haptic …","\\\\brief Unpauses a haptic device.","\\\\brief Updates the properties of an effect.","This function returns true if the CPU has 3DNow! features.","This function returns true if the CPU has ARM SIMD (ARMv6) …","This function returns true if the CPU has AVX features.","This function returns true if the CPU has AVX2 features.","This function returns true if the CPU has AVX-512F …","This function returns true if the CPU has AltiVec features.","\\\\brief Returns a flag indicating whether the clipboard …","\\\\brief Returns whether the surface has a color key","Checks to see if certain event types are in the event …","","\\\\brief Determine whether two rectangles intersect.","This function returns true if the CPU has MMX features.","This function returns true if the CPU has NEON (ARM SIMD) …","This function returns true if the CPU has the RDTSC …","This function returns true if the CPU has SSE features.","This function returns true if the CPU has SSE2 features.","This function returns true if the CPU has SSE3 features.","This function returns true if the CPU has SSE4.1 features.","This function returns true if the CPU has SSE4.2 features.","\\\\brief Returns whether the platform has some screen …","\\\\brief Returns whether the surface is RLE enabled","\\\\brief Hide a window.","\\\\brief type definition of the hint callback function.","\\\\brief  An enumeration of hint priorities","\\\\brief Callback used for hit-testing.","\\\\brief Possible return values from the SDL_HitTest …","","","","","","","","","","","","","","This function initializes  the subsystems specified by \\\\c …","This function initializes specific SDL subsystems","\\\\brief Calculate the intersection of two rectangles.","\\\\brief Calculate the intersection of a rectangle and line …","Is the joystick on this index supported by the game …","\\\\brief Returns whether the screen keyboard is shown for …","\\\\brief Returns whether the screensaver is currently …","\\\\brief Return whether the given window is a shaped window.","\\\\brief Return true if the current device is a tablet.","\\\\brief Return whether or not Unicode text input events are …","&lt; Joystick axis motion","&lt; Joystick trackball motion","&lt; Joystick button pressed","&lt; Joystick button released","&lt; A new joystick has been inserted into the system","&lt; An opened joystick has been removed","&lt; Joystick hat position change","","","","","","","","","","","","","","","","","","","","","\\\\brief Joystick axis motion event structure (event.jaxis.*)","\\\\brief Joystick trackball motion event structure …","\\\\brief Joystick button event structure (event.jbutton.*)","\\\\brief Joystick device event structure (event.jdevice.*)","\\\\brief Joystick hat position change event structure …","","Attaches a new virtual joystick. Returns the joystick’s …","Close a joystick previously opened with SDL_JoystickOpen().","Return the battery level of this joystick","Detaches a virtual joystick Returns 0 on success, or -1 if …","Enable/disable joystick event polling.","Return the SDL_Joystick associated with an instance id.","Return the SDL_Joystick associated with a player index.","","Returns SDL_TRUE if the joystick has been opened and …","Get the current state of an axis control on a joystick.","Get the initial state of an axis control on a joystick.","Get the ball axis change since the last poll.","Get the current state of a button on a joystick.","Return the GUID for the joystick at this index This can be …","Get the instance ID of a joystick. This can be called …","Get the player index of a joystick, or -1 if it’s not …","Get the USB product ID of a joystick, if available. This …","Get the product version of a joystick, if available. This …","Get the type of a joystick, if available. This can be …","Get the USB vendor ID of a joystick, if available. This …","Return the GUID for this opened joystick","Convert a string into a joystick guid","Return a string representation for this guid. pszGUID must …","Get the current state of a POV hat on a joystick.","Get the player index of an opened joystick, or -1 if it’…","Get the USB product ID of an opened joystick, if available.","Get the product version of an opened joystick, if …","Get the serial number of an opened joystick, if available.","Get the type of an opened joystick.","Get the USB vendor ID of an opened joystick, if available. …","Return whether a joystick has an LED","This is a unique ID for a joystick for the time it is …","Get the instance ID of an opened joystick or -1 if the …","\\\\brief Checks to see if a joystick has haptic features.","Indicates whether or not a virtual-joystick is at a given …","Return the name for this currently opened joystick. If no …","Get the implementation dependent name of a joystick. This …","Get the number of general axis controls on a joystick.","Get the number of trackballs on a joystick.","Get the number of buttons on a joystick.","Get the number of POV hats on a joystick.","Open a joystick for use. The index passed as an argument …","","Start a rumble effect Each call to this function cancels …","Start a rumble effect in the joystick’s triggers Each …","Update a joystick’s LED color.","Set the player index of an opened joystick","Set values on an opened, virtual-joystick’s controls. …","","","","Update the current state of the open joysticks.","&lt; Key pressed","&lt; Keymap changed due to a system event such as an input …","&lt; Key released","","\\\\brief Keyboard button event structure (event.key.*)","\\\\brief The SDL virtual key representation.","\\\\brief Enumeration of valid key mods (possibly OR’d …","\\\\brief The SDL keysym structure, used in key events.","","This last event is only for bounding internal arrays","","","&lt; The user’s locale preferences have changed.","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Sets the UNIX nice value for a thread, using …","Load a surface from a seekable SDL data stream (memory or …","\\\\brief Load Dollar Gesture templates from a file","Load an entire file.","Load all the data from an SDL data stream.","Given an object handle, this function looks up the address …","This function dynamically loads a shared object and …","\\\\brief Load the audio data of a WAVE file into memory","","","","Locking for multi-threaded access to the joystick API","","Locking for multi-threaded access to the sensor API","\\\\brief Sets up a surface for directly accessing the pixels.","\\\\brief Lock a portion of the texture for write-only pixel …","\\\\brief Lock a portion of the texture for write-only pixel …","\\\\brief Log a message with SDL_LOG_CATEGORY_APPLICATION and …","\\\\brief The predefined log categories","\\\\brief Log a message with SDL_LOG_PRIORITY_CRITICAL","\\\\brief Log a message with SDL_LOG_PRIORITY_DEBUG","\\\\brief Log a message with SDL_LOG_PRIORITY_ERROR","\\\\brief Get the current log output function.","\\\\brief Get the priority of a particular log category","\\\\brief Log a message with SDL_LOG_PRIORITY_INFO","\\\\brief Log a message with the specified category and …","\\\\brief Log a message with the specified category and …","\\\\brief The prototype for the log output function","\\\\brief The predefined log priorities","\\\\brief Reset all priorities to default.","\\\\brief Set the priority of all log categories","\\\\brief This function allows you to replace the default log …","\\\\brief Set the priority of a particular log category","\\\\brief Log a message with SDL_LOG_PRIORITY_VERBOSE","\\\\brief Log a message with SDL_LOG_PRIORITY_WARN","This is a semi-private blit function and it performs …","This is a semi-private blit function and it performs …","","","&lt; buttons placed left to right","&lt; buttons placed right to left","&lt; Marks the default button when escape is hit","&lt; Marks the default button when return is hit","","","","","","","&lt; error dialog","&lt; informational dialog","&lt; warning dialog","","","&lt; Mouse button pressed","&lt; Mouse button released","&lt; Mouse moved","&lt; Mouse wheel motion","&lt; The scroll direction is flipped / natural","&lt; The scroll direction is normal","","","\\\\brief Maps an RGB triple to an opaque pixel value for a …","\\\\brief Maps an RGBA quadruple to a pixel value for a given …","\\\\brief Convert a bpp and RGBA masks to an enumerated pixel …","\\\\brief Make a window as large as possible.","","Memory barriers are designed to prevent reads and writes …","\\\\brief Individual button data.","\\\\brief Flags for SDL_MessageBoxButtonData.","\\\\brief RGB value used in a message box color scheme","\\\\brief A set of colors to use for message box dialogs","","\\\\brief MessageBox structure containing title, text, …","\\\\brief SDL_MessageBox flags. If supported will display …","\\\\brief A handle to a CAMetalLayer-backed NSView (macOS) or …","\\\\brief Create a CAMetalLayer-backed NSView/UIView and …","\\\\brief Destroy an existing SDL_MetalView object.","\\\\brief Get the size of a window’s underlying drawable in …","\\\\brief Get a pointer to the backing CAMetalLayer for the …","\\\\brief Minimize a window to an iconic representation.","This takes two audio buffers of the playing audio format …","This works like SDL_MixAudio(), but you specify the audio …","\\\\brief Mouse button event structure (event.button.*)","\\\\brief Gets whether or not the current mouse has haptic …","\\\\brief Mouse motion event structure (event.motion.*)","\\\\brief Scroll direction types for the Scroll event","\\\\brief Mouse wheel event structure (event.wheel.*)","\\\\brief Multiple Finger Gesture Event (event.mgesture.*)","","","","&lt; not a key, just marks the number of scancodes for array …","","Create a new audio stream","\\\\brief Count the number of haptic devices attached to the …","Count the number of joysticks attached to the system right …","\\\\brief Count the number of sensors attached to the system …","&lt; The display is in landscape mode, with the right side …","&lt; The display is in landscape mode, with the left side up, …","&lt; The display is in portrait mode","&lt; The display is in portrait mode, upside down","&lt; The display orientation can’t be determined","\\\\brief OS Specific event","","","","","","","This function opens the audio device with the desired …","Open a specific audio device. Passing in a device name of …","\\\\brief Open an URL / URI in the browser or other","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Android video texture format","","","","","","&lt; Planar mode: Y + U + V  (3 planes)","&lt; Planar mode: Y + U/V interleaved  (2 planes)","&lt; Planar mode: Y + V/U interleaved  (2 planes)","","","","","","","","","","","","","&lt; Packed mode: U0+Y0+V0+Y1 (1 plane)","","","","","","","&lt; Packed mode: Y0+U0+Y1+V0 (1 plane)","&lt; Planar mode: Y + V + U  (3 planes)","&lt; Packed mode: Y0+V0+Y1+U0 (1 plane)","","","","","","","","","","","","","&lt; Plugged in, battery charged","&lt; Plugged in, charging battery","&lt; Plugged in, no battery available","&lt; Not plugged in, running on the battery","&lt; cannot determine power status","","","","","","","Packed component layout.","Packed component order, high bit -&gt; low bit.","","","","Checks the event queue for messages and optionally returns …","\\\\note Everything in the pixel format structure is …","","\\\\brief Convert one of the enumerated pixel formats to a …","Pixel type.","\\\\brief  The structure that defines a point (integer)","\\\\brief Polls for currently pending events.","\\\\brief The basic state for the system’s power supply.","Pumps the event loop, gathering events from the input …","\\\\brief Add an event to the event queue.","","&lt; User-requested quit","\\\\brief Query the attributes of a texture","Queue more audio on non-callback devices.","This function cleans up all initialized subsystems. You …","\\\\brief The “quit requested” event","This function cleans up specific SDL subsystems","","&lt; The renderer uses hardware acceleration","&lt; Present is synchronized with the refresh rate","&lt; The renderer is a software fallback","&lt; The renderer supports rendering to texture","&lt; The device has been reset and all textures need to be …","&lt; The render targets have been reset and their contents …","","","","","","","","","","","","Close and free an allocated SDL_RWops structure.","This is the read/write operation structure – very basic.","","","","Read up to \\\\c maxnum objects each of size \\\\c size from the …","Seek to \\\\c offset relative to \\\\c whence, one of stdio’s …","Return the size of the file in this rwops, or -1 if unknown","Return the current offset in the data stream, or -1 on …","Write exactly \\\\c num objects each of size \\\\c size from the …","\\\\brief Raise a window above other windows and set the …","","","","","","","","\\\\brief Begin Recording a gesture on the specified touch, …","\\\\brief A rectangle, with the origin at the upper left …","This function allocates a set of user-defined events, and …","\\\\brief Remove a timer knowing its ID.","\\\\brief Clear the current rendering target with the drawing …","\\\\brief Copy a portion of the texture to the current …","\\\\brief Copy a portion of the source texture to the current …","\\\\brief Copy a portion of the source texture to the current …","\\\\brief Copy a portion of the texture to the current …","\\\\brief Draw a line on the current rendering target.","\\\\brief Draw a line on the current rendering target.","\\\\brief Draw a series of connected lines on the current …","\\\\brief Draw a series of connected lines on the current …","\\\\brief Draw a point on the current rendering target.","\\\\brief Draw a point on the current rendering target.","\\\\brief Draw multiple points on the current rendering …","\\\\brief Draw multiple points on the current rendering …","\\\\brief Draw a rectangle on the current rendering target.","\\\\brief Draw a rectangle on the current rendering target.","\\\\brief Draw some number of rectangles on the current …","\\\\brief Draw some number of rectangles on the current …","\\\\brief Fill a rectangle on the current rendering target …","\\\\brief Fill a rectangle on the current rendering target …","\\\\brief Fill some number of rectangles on the current …","\\\\brief Fill some number of rectangles on the current …","\\\\brief Force the rendering context to flush any pending …","\\\\brief Get the clip rectangle for the current target.","\\\\brief Get whether integer scales are forced for …","\\\\brief Get device independent resolution for rendering","\\\\brief Get the Metal command encoder for the current frame","\\\\brief Get the CAMetalLayer associated with the given …","\\\\brief Get the drawing scale for the current target.","\\\\brief Get the drawing area for the current target.","\\\\brief Get whether clipping is enabled on the given …","\\\\brief Update the screen with rendering performed.","\\\\brief Read pixels from the current rendering target.","\\\\brief Set the clip rectangle for the current target.","\\\\brief Set whether to force integer scales for …","\\\\brief Set device independent resolution for rendering","\\\\brief Set the drawing scale for rendering on the current …","\\\\brief Set the drawing area for rendering on the current …","\\\\brief Determines whether a window supports the use of …","\\\\brief A structure representing rendering state","\\\\brief Flags used when creating a rendering context","\\\\brief Flip constants for SDL_RenderCopyEx","\\\\brief Information on the capabilities of a render driver …","","\\\\brief Reset the list of all assertion failures.","\\\\brief Restore the size and position of a minimized or …","","","","","","","","","","","","","","","","","","","&lt; redo","&lt; Erase-Eaze","","","","&lt; windows contextual menu, compose","","","","","","","","","&lt; Located at the lower left of the return key on ISO …","","","","","","","","","","","","","","","","","","","","&lt; display mirroring/dual display switch, video mode switch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Located in the top left corner (on both ANSI and ISO …","","","","","&lt; insert on PC, help on some Mac keyboards (but does send …","&lt; used on Asian keyboards, see footnotes in USB doc","","&lt; Yen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; alt, option","&lt; Hangul/English toggle","&lt; Hanja conversion","&lt; Katakana","&lt; Hiragana","&lt; Zenkaku/Hankaku","&lt; reserved","&lt; reserved","&lt; reserved","&lt; reserved","","","","&lt; windows, command (apple), meta","","","","","","","&lt; I’m not sure if this is really not covered by any of …","","","&lt; This is the additional key that ISO keyboards have over …","&lt; ISO USB keyboards actually use this code instead of 49 …","&lt; num lock on PC, clear on Mac keyboards","","","","","","","","","","&lt; The USB document says this is a status flag, not a …","","","","","&lt; alt gr, option","","","","&lt; windows, command (apple), meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; A sensor was updated","&lt; Accelerometer","","&lt; Gyroscope","&lt; Returned for an invalid sensor","&lt; Unknown sensor type","\\\\brief Allocate memory in a SIMD-friendly way.","\\\\brief Deallocate memory obtained from SDL_SIMDAlloc","\\\\brief Report the alignment this system needs for SIMD …","\\\\brief Reallocate memory obtained from SDL_SIMDAlloc","","","","&lt; Arrow","&lt; Crosshair","&lt; Hand","&lt; I-beam","&lt; Slashed circle or crossbones","&lt; Four pointed arrow pointing north, south, east, and west","&lt; Double arrow pointing northeast and southwest","&lt; Double arrow pointing north and south","&lt; Double arrow pointing northwest and southeast","&lt; Double arrow pointing west and east","&lt; Wait","&lt; Small wait cursor (or Wait if not available)","&lt; System specific event","","","","","","","These are the various supported windowing subsystems","","","","","","","","\\\\brief Save all currently loaded Dollar Gesture templates","Save a surface to a seekable SDL data stream (memory or …","\\\\brief Save a currently loaded Dollar Gesture template","\\\\brief The scaling mode for a texture.","&lt; anisotropic filtering","&lt; linear filtering","&lt; nearest pixel sampling","\\\\brief The SDL keyboard scancode representation.","Atomically increases the semaphore’s count (not …","Non-blocking variant of SDL_SemWait().","Returns the current count of the semaphore.","This function suspends the calling thread until the …","Variant of SDL_SemWait() with a timeout in milliseconds.","","Close a sensor previously opened with SDL_SensorOpen()","\\\\brief Sensor event structure (event.sensor.*)","Return the SDL_Sensor associated with an instance id.","Get the current state of an opened sensor.","\\\\brief Get the instance ID of a sensor.","\\\\brief Get the implementation dependent name of a sensor.","\\\\brief Get the platform dependent type of a sensor.","\\\\brief Get the type of a sensor.","\\\\brief Get the instance ID of a sensor.","\\\\brief Get the implementation dependent name of a sensor.","\\\\brief Get the platform dependent type of a sensor.","\\\\brief Get the type of a sensor.","This is a unique ID for a sensor for the time it is …","\\\\brief Open a sensor for use.","","Update the current state of the open sensors.","\\\\brief Set an application-defined assertion handler.","Sets the clipping rectangle for the destination surface in …","\\\\brief Put UTF-8 text into the clipboard","\\\\brief Sets the color key (transparent pixel) in a …","\\\\brief Set the active cursor.","\\\\brief Set the error message for the current thread","Sets up a filter to process all events before they change …","\\\\brief Set a hint with normal priority","\\\\brief Set a hint with a specific priority","This is called by the real SDL main function to let the …","\\\\brief Replace SDL’s memory allocation functions with a …","\\\\brief Set the current key modifier state for the keyboard.","\\\\brief Set a range of colors in a palette.","\\\\brief Set the palette for a pixel format structure.","\\\\brief Set relative mouse mode.","\\\\brief Set the blend mode used for drawing operations …","\\\\brief Set the color used for drawing operations (Rect, …","\\\\brief Set a texture as the current rendering target.","\\\\brief Set an additional alpha value used in blit …","\\\\brief Set the blend mode used for blit operations.","\\\\brief Set an additional color value used in blit …","\\\\brief Set the palette used by a surface.","\\\\brief Sets the RLE acceleration hint for a surface.","\\\\brief Set the rectangle used to type Unicode text inputs. …","\\\\brief Set an additional alpha value used in render copy …","\\\\brief Set the blend mode used for texture copy operations.","\\\\brief Set an additional color value used in render copy …","\\\\brief Set the scale mode used for texture scale …","Set the priority for the current thread","\\\\brief Set the border state of a window.","\\\\brief Set the brightness (gamma correction) for a window.","\\\\brief Associate an arbitrary named pointer with a window.","\\\\brief Set the display mode used when a fullscreen window …","\\\\brief Set a window’s fullscreen state.","\\\\brief Set the gamma ramp for a window.","\\\\brief Set a window’s input grab mode.","\\\\brief Provide a callback that decides if a window region …","\\\\brief Set the icon for a window.","\\\\brief Explicitly sets input focus to the window.","\\\\brief Set the maximum size of a window’s client area.","\\\\brief Set the minimum size of a window’s client area.","\\\\brief Sets the window as a modal for another window …","\\\\brief Set the opacity for a window","\\\\brief Set the position of a window.","\\\\brief Set the user-resizable state of a window.","\\\\brief Set the shape and parameters of a shaped window.","\\\\brief Set the size of a window’s client area.","\\\\brief Set the title of a window, in UTF-8 format.","\\\\brief Set the YUV conversion mode","\\\\brief Toggle whether or not the cursor is shown.","\\\\brief Create a modal message box.","\\\\brief Create a simple modal message box","\\\\brief Show a window.","\\\\brief Perform a fast, low quality, stretch blit between …","","\\\\brief Start accepting Unicode text input events. This …","\\\\brief Stop receiving any text input events. This function …","\\\\brief A collection of pixels used in software blitting.","\\\\brief A video driver dependent system event (event.syswm.*…","\\\\brief SDL_syswm.h","","","","The custom event structure.","","","\\\\brief Cursor types for SDL_CreateSystemCursor().","&lt; Keyboard text editing (composition)","","&lt; Keyboard text input","","&lt; Changes rarely, not lockable","&lt; Changes frequently, lockable","&lt; Texture can be used as a render target","&lt; srcA = srcA * alpha","&lt; srcC = srcC * color","&lt; No modulation","","","","","","","\\\\brief Create an identifier that is globally visible to …","\\\\brief Get the value associated with a thread local …","","\\\\brief Set the value associated with a thread local …","","","","","","\\\\brief Keyboard text editing event structure (event.edit.*)","\\\\brief Keyboard text input event structure (event.text.*)","\\\\brief An efficient driver-specific representation of …","\\\\brief The access pattern allowed for a texture.","\\\\brief The texture channel modulation used in …","","The function passed to SDL_CreateThread(). It is passed a …","Get the thread identifier for the current thread.","The SDL thread priority.","Function prototype for the timer callback function.","Definition of the timer ID type.","","\\\\brief Touch finger event structure (event.tfinger.*)","","Try to lock the mutex","","Events ::SDL_USEREVENT through ::SDL_LASTEVENT are for …","\\\\brief Calculate the union of two rectangles.","Unload a shared object from memory.","","","","","","\\\\sa SDL_LockSurface()","\\\\brief Unlock a texture, uploading the changes to video …","\\\\brief Update the given texture rectangle with new pixel …","\\\\brief Copy the window surface to the screen.","\\\\brief Copy a number of rectangles on the window surface …","\\\\brief Update a rectangle within a planar YV12 or IYUV …","This is the public blit function, SDL_BlitSurface(), and …","This is the public scaled blit function, SDL_BlitScaled(), …","\\\\brief A user-defined event type (event.user.*)","","\\\\brief Initialize the video subsystem, optionally …","\\\\brief Shuts down the video subsystem.","\\\\brief Create a Vulkan rendering surface for a window.","\\\\brief Get the size of a window’s underlying drawable in …","\\\\brief Get the names of the Vulkan instance extensions …","\\\\brief Get the address of the \\\\c vkGetInstanceProcAddr …","\\\\brief Dynamically load a Vulkan loader library.","\\\\brief Unload the Vulkan loader library previously loaded …","&lt; Window state change","&lt; The window manager requests that the window be closed","&lt; Window has gained mouse focus","&lt; Window has been exposed and should be redrawn","&lt; Window has gained keyboard focus","&lt; Window has lost keyboard focus","&lt; Window has been hidden","&lt; Window had a hit test that wasn’t SDL_HITTEST_NORMAL.","&lt; Window has lost mouse focus","&lt; Window has been maximized","&lt; Window has been minimized","&lt; Window has been moved to data1, data2","&lt; Never used","&lt; Window has been resized to data1xdata2","&lt; Window has been restored to normal size and position","&lt; Window has been shown","&lt; The window size has changed, either as a result of an …","&lt; Window is being offered a focus (should …","","","&lt; window should be created in high-DPI mode if supported. …","&lt; window should always be above others","&lt; no window decoration","&lt; window not created by SDL","&lt; fullscreen window","","&lt; window is not visible","&lt; window has input focus","&lt; window has grabbed input focus","","&lt; window is maximized","&lt; window usable for Metal view","&lt; window is minimized","&lt; window has mouse captured (unrelated to INPUT_GRABBED)","&lt; window has mouse focus","&lt; window usable with OpenGL context","&lt; window should be treated as a popup menu","&lt; window can be resized","&lt; window is visible","&lt; window should not be added to the taskbar","&lt; window should be treated as a tooltip","&lt; window should be treated as a utility window","&lt; window usable for Vulkan surface","\\\\brief Waits indefinitely for the next available event.","\\\\brief Waits until the specified timeout (in milliseconds) …","Wait for a thread to finish. Threads that haven’t been …","\\\\brief Moves the mouse to the given position in global …","\\\\brief Moves the mouse to the given position within the …","This function returns a mask of the specified subsystems …","","\\\\brief Window state change event data (event.window.*)","\\\\brief Event subtype for window events","\\\\brief The flags on a window","\\\\brief A struct that tags the SDL_WindowShapeParams union …","\\\\brief A union containing parameters for shaped windows.","","","","","","","","&lt; BT.601 for SD content, BT.709 for HD content","&lt; BT.601 (the default)","&lt; BT.709","&lt; Full range JPEG","\\\\brief The formula used for converting between YUV and RGB","","","","","","","","","","","","\\\\brief A type representing an atomic integer value.  It is …","\\\\brief The type of function used for surface blitting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function converts a string between encodings in one …","","","","","","","","","","","","","","The prototype for the application’s main() function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Information the version of SDL in use.","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief A binarized alpha cutoff with a given integer value.","\\\\brief A color key is applied.","\\\\brief The default mode, a binarized alpha cutoff of 1.","\\\\brief A binarized alpha cutoff with a given integer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief An enum denoting the specific type of contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The gamecontroller structure used to identify an SDL game …","\\\\typedef SDL_Haptic","The joystick structure used to identify an SDL joystick","\\\\brief SDL_sensor.h","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Audio device event data","","","","","","","","","","","","","","","","","","&lt; Duration of the attack.","&lt; Duration of the attack.","&lt; Duration of the attack.","&lt; Duration of the attack.","&lt; Level at the start of the attack.","&lt; Level at the start of the attack.","&lt; Level at the start of the attack.","&lt; Level at the start of the attack.","","","","","&lt; The joystick axis index","&lt; The controller axis (SDL_GameControllerAxis)","","","","","","","","","","","","","","&lt; The joystick trackball index","","","","","","","","\\\\brief A cutoff alpha value for binarization of the window …lt; Buffer to hold entire audio data","","&lt; The mouse button index","&lt; The joystick button index","&lt; The controller button (SDL_GameControllerButton)","&lt; Mouse button event data","&lt; Button that triggers the effect.","&lt; Button that triggers the effect.","&lt; Button that triggers the effect.","&lt; Button that triggers the effect.","&lt; Button that triggers the effect.","","&lt; User defined button id (value returned via …","","","","","","","","&lt; Callback that feeds the audio device (NULL to use …","","","","","","","&lt; Game Controller axis event data","&lt; Game Controller button event data","&lt; Game Controller device event data","&lt; Position of the dead zone.","&lt; Number of channels: 1 mono, 2 stereo","&lt; Axes to use, minimum of one.","","","","","","","","","","","","&lt; 1 for single-click, 2 for double-click, etc.","","","","&lt; Read-onlylose and free an allocated SDL_RWops structure.","","&lt; User defined event code","","&lt; ::SDL_MessageBoxColorScheme, can be NULL to use system …","","","","","","&lt; Common event data","","&lt; Condition effect.","&lt; Constant effect.","","","","","","","&lt; A country, like “US” for America. Can be NULL.","","&lt; Game Controller sensor event data","&lt; Game Controller touchpad event data","","&lt; Custom effect.","","","","","","","&lt; Up to 3 values from the sensor, as defined in …","&lt; Up to 6 values from the sensor - additional values can …","&lt; Should contain channels*samples items.","","","","","","&lt; event dependent data","&lt; event dependent data","&lt; User defined data pointer","","&lt; event dependent data","&lt; User defined data pointer","","&lt; Size of the dead zone; max 0xFFFF: whole axis-range when …","","","","&lt; Delay before starting the effect.","&lt; Delay before starting the effect.","&lt; Delay before starting the effect.","&lt; Delay before starting the effect.","&lt; Delay before starting the effect.","","","","","","","","","","","","","","","","","","&lt; Gesture event data","&lt; The encoded direction.","&lt; Set to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED …","&lt; Direction of the effect.","&lt; Direction of the effect.","&lt; Direction of the effect - Not used ATM.","&lt; Direction of the effect.","&lt; Direction of the effect.","","","","&lt; The associated display index","&lt; Display event data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The X11 display","&lt; Wayland display","","","","","","","","","","","&lt; driver-specific data, initialize to 0","&lt; Drag and drop event data","&lt; Target audio format","","","&lt; Normalized in the range -1…1","&lt; Normalized in the range -1…1","","","&lt; Text editing event data","","","&lt; Ending strength level.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; ::SDL_DisplayEventID","&lt; ::SDL_WindowEventID","","","","","","","","","","","","","","","","","","","","","","","&lt; Duration of the fade.","&lt; Duration of the fade.","&lt; Duration of the fade.","&lt; Duration of the fade.","&lt; Level at the end of the fade.","&lt; Level at the end of the fade.","&lt; Level at the end of the fade.","&lt; Level at the end of the fade.","","","","","","","","","","&lt; The file name, which should be freed with SDL_free(), is …","","","","&lt; Current audio conversion function","&lt; NULL-terminated list of filter functions","&lt; The index of the finger on the touchpad","","","","","&lt; Read-only","&lt; ::SDL_MessageBoxButtonFlags","&lt; ::SDL_MessageBoxFlags","&lt; Supported ::SDL_RendererFlags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Audio data format","","&lt; Read-only","&lt; pixel format","","","","","","","&lt; DSP frequency – samples per second","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Read-only","&lt; height, in screen coordinates","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The joystick hat index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; How soon it can be triggered again after button.","&lt; How soon it can be triggered again after button.","&lt; How soon it can be triggered again after button.","&lt; How soon it can be triggered again after button.","&lt; How soon it can be triggered again after button.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","&lt; zero if an output device, non-zero if a capture device.","&lt; Joystick axis event data","&lt; Joystick ball event data","&lt; Joystick button event data","&lt; Joystick device change event data","&lt; Joystick hat event data","","","","&lt; Keyboard event data","","","","","","","","&lt; The key that was pressed or released","","","","","&lt; A language name, like “en” for English.","&lt; Control of the large controller motor.","","","","","","","","","","&lt; How fast to increase the force towards the negative side.","&lt; Level when joystick is to the negative side; max 0xFFFF.","&lt; Left/Right effect.","&lt; Length of original audio buffer","&lt; Length of converted audio buffer","&lt; buffer must be len*len_mult big","&lt; Given len, final size is len*len_ratio","&lt; The length of selected editing text","&lt; Duration of the effect.","&lt; Duration of the effect.","&lt; Duration of the effect.","&lt; Duration of the effect.","&lt; Duration of the effect in milliseconds.","&lt; Duration of the effect.","","","","&lt; Strength of the constant effect.","","","","&lt; Private","","","","&lt; Read-only","","","","&lt; Peak value; if negative, equivalent to 180 degrees extra …","&lt; major version","","","","","&lt; Private","","","","","","","","","","","","","","&lt; The maximum texture height","&lt; The maximum texture width","","","","","","&lt; UTF-8 message text","","&lt; Gesture event data","","","","","","","&lt; minor version","","","","","","","","&lt; current key modifiers","\\\\brief The mode of these window-shape parameters.","","","","","","","&lt; Mouse motion event data","","","","&lt; driver dependent data, defined in SDL_syswm.h","","","","","&lt; The name of the renderer","","","","","","","","&lt; Set to 1 if conversion possible","","","","","","","","","","","","","","","&lt; The number of available texture formats","","","","","","&lt; Mean value of the wave.","","","","","","","","","","","","","","&lt; Necessary for some compile environments","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\brief Window-shape parameters.","","","","","","&lt; update version","","&lt; Period of the wave.","&lt; Sample periods.","&lt; Periodic effect.","&lt; Positive phase shift given by hundredth of a degree.","","&lt; Read-only","","&lt; Read-write","","","","","","","","","","&lt; Normalized in the range 0…1","&lt; Normalized in the range 0…1","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Quit request event data","","","","","","&lt; Ramp effect.","","","","","","","","","&lt; Rate conversion increment","","Read up to \\\\c maxnum objects each of size \\\\c size from the …","","","","","","","","","&lt; Read-mostly","&lt; refresh rate (or zero for unspecified)","","","","","","","&lt; Non-zero if this is a key repeat","","","","","","","","&lt; How fast to increase the force towards the positive side.","&lt; Level when joystick is to the positive side; max 0xFFFF.","","","","","","","","","","","","","","","","","&lt; Audio buffer size in sample FRAMES (total samples …","&lt; Amount of samples.","","","","&lt; SDL physical key code - see ::SDL_Scancode for details","","","","","","","","Seek to \\\\c offset relative to \\\\c whence, one of stdio’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The type of the sensor, one of the values of …","&lt; Sensor event data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Wayland shell_surface (window manager handle)","","","&lt; Audio buffer silence value (calculated)","Return the size of the file in this rwops, or -1 if unknown","&lt; Audio buffer size in bytes (calculated)","","&lt; Control of the small controller motor.","","","","","","&lt; Source audio format","","","&lt; The start cursor of selected editing text","&lt; Beginning strength level.","","&lt; ::SDL_PRESSED or ::SDL_RELEASED","&lt; The current button state","&lt; ::SDL_PRESSED or ::SDL_RELEASED","&lt; ::SDL_PRESSED or ::SDL_RELEASED","&lt; ::SDL_PRESSED or ::SDL_RELEASED","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; Wayland surface","","&lt; SDL virtual key code - see ::SDL_Keycode for details","","&lt; System dependent window event data","","","&lt; The editing text","&lt; The input text","&lt; Text input event data","&lt; The UTF-8 button text","","","","&lt; The available texture formats","&lt; Touch finger event data","","","","","","","","","","","","","","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","&lt; In milliseconds, populated using SDL_GetTicks()","","&lt; UTF-8 title","&lt; The touch device id","&lt; The touch device id","&lt; The touch device id","&lt; The index of the touchpadlt; ::SDL_DISPLAYEVENT","&lt; ::SDL_WINDOWEVENT","&lt; ::SDL_KEYDOWN or ::SDL_KEYUP","&lt; ::SDL_TEXTEDITING","&lt; ::SDL_TEXTINPUT","&lt; ::SDL_MOUSEMOTION","&lt; ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP","&lt; ::SDL_MOUSEWHEEL","&lt; ::SDL_JOYAXISMOTION","&lt; ::SDL_JOYBALLMOTION","&lt; ::SDL_JOYHATMOTION","&lt; ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP","&lt; ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED","&lt; ::SDL_CONTROLLERAXISMOTION","&lt; ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP","&lt; ::SDL_CONTROLLERDEVICEADDED, …","&lt; ::SDL_CONTROLLERTOUCHPADDOWN or …","&lt; ::SDL_CONTROLLERSENSORUPDATE","&lt; ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED","&lt; ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP","&lt; ::SDL_MULTIGESTURE","&lt; ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD","&lt; ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or …","&lt; ::SDL_SENSORUPDATE","&lt; ::SDL_QUIT","&lt; ::SDL_QUIT","&lt; ::SDL_USEREVENT through ::SDL_LASTEVENT-1","&lt; ::SDL_SYSWMEVENT","&lt; Event type, shared with all events","&lt; The type of encoding.","&lt; ::SDL_HAPTIC_CONSTANT","&lt; ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT, …","&lt; ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER, …","&lt; ::SDL_HAPTIC_RAMP","&lt; ::SDL_HAPTIC_LEFTRIGHT","&lt; ::SDL_HAPTIC_CUSTOM","&lt; Effect typelt; Custom event data","&lt; Userdata passed to callback (ignored for NULL callbacks).","&lt; Read-write","","","","","","&lt; The axis value (range: -32768 to 32767)","&lt; The hat position value. \\\\sa ::SDL_HAT_LEFTUP …","&lt; The axis value (range: -32768 to 32767)","","","","","","","","","","","","","","&lt; Read-only","&lt; width, in screen coordinates","","","","","&lt; Mouse wheel event data","&lt; The mouse instance id, or SDL_TOUCH_MOUSEID","&lt; The mouse instance id, or SDL_TOUCH_MOUSEID","&lt; The mouse instance id, or SDL_TOUCH_MOUSEID","&lt; The joystick instance id","&lt; The joystick instance id","&lt; The joystick instance id","&lt; The joystick instance id","&lt; The joystick device index for the ADDED event, instance …","&lt; The joystick instance id","&lt; The joystick instance id","&lt; The joystick device index for the ADDED event, instance …","&lt; The joystick instance id","&lt; The joystick instance id","&lt; The audio device index for the ADDED event (valid until …","&lt; The instance ID of the sensor","","","","","","","","","","","","","","","","","","&lt; Window event data","&lt; Parent window, can be NULL","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The X11 window","&lt; The associated window","&lt; The window with keyboard focus, if any","&lt; The window with keyboard focus, if any","&lt; The window with keyboard focus, if any","&lt; The window with mouse focus, if any","&lt; The window with mouse focus, if any","&lt; The window with mouse focus, if any","&lt; The window underneath the finger, if any","&lt; The window that was dropped on, if any","&lt; The associated window if any","","&lt; Wayland display","&lt; Wayland shell_surface (window manager handle)","&lt; Wayland surface","Write exactly \\\\c num objects each of size \\\\c size from the …","","","","","","&lt; X coordinate, relative to window","&lt; X coordinate, relative to window","&lt; The amount scrolled horizontally, positive to the right …","&lt; Normalized in the range 0…1 with 0 being on the left","&lt; Normalized in the range 0…1","","&lt; Normalized center of gesture","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The relative motion in the X direction","&lt; The relative motion in the X direction","","","","","","","","","","","","","&lt; Y coordinate, relative to window","&lt; Y coordinate, relative to window","&lt; The amount scrolled vertically, positive away from the …","&lt; Normalized in the range 0…1 with 0 being at the top","&lt; Normalized in the range 0…1","","&lt; Normalized center of gesture","","","","","","","","","","","","","","","","","","","","","","","","","&lt; The relative motion in the Y direction","&lt; The relative motion in the Y direction"],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,3],285],[[4,4],285],[[6,6],285],[[9,9],285],[[14,14],285],[[21,21],285],[[51,51],285],[[52,52],285],[[53,53],285],[[54,54],285],[[55,55],285],[[56,56],285],[[64,64],285],[[65,65],285],[[66,66],285],[[68,68],285],[[71,71],285],[[72,72],285],[[73,73],285],[[74,74],285],[[75,75],285],[[76,76],285],[[77,77],285],[[78,78],285],[[79,79],285],[[80,80],285],[[81,81],285],[[82,82],285],[[83,83],285],[[86,86],285],[[87,87],285],[[90,90],285],[[91,91],285],[[93,93],285],[[95,95],285],[[96,96],285],[[100,100],285],[[101,101],285],[[102,102],285],[[104,104],285],[[135,135],285],[[145,145],285],[[146,146],285],[[147,147],285],[[148,148],285],[[149,149],285],[[152,152],285],[[155,155],285],[[156,156],285],[[158,158],285],[[159,159],285],[[160,160],285],[[161,161],285],[[164,164],285],[[246,246],285],[[259,259],285],[[262,262],285],[[264,264],285],[[270,270],285],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,286],287],[[4,286],287],[[6,286],287],[[9,286],287],[[14,286],287],[[21,286],287],[[51,286],287],[[52,286],287],[[53,286],287],[[54,286],287],[[55,286],287],[[56,286],287],[[64,286],287],[[65,286],287],[[66,286],287],[[68,286],287],[[71,286],287],[[72,286],287],[[73,286],287],[[74,286],287],[[75,286],287],[[76,286],287],[[77,286],287],[[78,286],287],[[79,286],287],[[80,286],287],[[81,286],287],[[82,286],287],[[83,286],287],[[86,286],287],[[87,286],287],[[90,286],287],[[91,286],287],[[93,286],287],[[95,286],287],[[96,286],287],[[100,286],287],[[101,286],287],[[102,286],287],[[104,286],287],[[135,286],287],[[145,286],287],[[146,286],287],[[147,286],287],[[148,286],287],[[149,286],287],[[152,286],287],[[155,286],287],[[156,286],287],[[158,286],287],[[159,286],287],[[160,286],287],[[161,286],287],[[164,286],287],[[246,286],287],[[259,286],287],[[262,286],287],[[264,286],287],[[270,286],287],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3],[4],[6],[9],[14],[21],[51],[52],[53],[54],[55],[56],[64],[65],[66],[68],[71],[72],[73],[74],[75],[76],[77],[78],[79],[80],[81],[82],[83],[86],[87],[90],[91],[93],[95],[96],[100],[101],[102],[104],[135],[145],[146],[147],[148],[149],[152],[155],[156],[158],[159],[160],[161],[164],[246],[259],[262],[264],[270],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],[[],288],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],[[],289],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"max_align_t"],[3,"__fsid_t"],[4,"SDL_bool"],[4,"SDL_DUMMY_ENUM"],[3,"_SDL_iconv_t"],[4,"SDL_AssertState"],[3,"SDL_AssertData"],[3,"SDL_atomic_t"],[4,"SDL_errorcode"],[3,"SDL_mutex"],[3,"SDL_semaphore"],[3,"SDL_cond"],[3,"SDL_Thread"],[4,"SDL_ThreadPriority"],[3,"SDL_RWops"],[19,"SDL_RWops__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_RWops__bindgen_ty_1__bindgen_ty_2"],[3,"SDL_AudioSpec"],[3,"SDL_AudioCVT"],[4,"SDL_AudioStatus"],[3,"_SDL_AudioStream"],[3,"div_t"],[3,"ldiv_t"],[3,"lldiv_t"],[3,"__sigset_t"],[3,"timeval"],[3,"timespec"],[3,"fd_set"],[3,"__pthread_internal_list"],[3,"__pthread_internal_slist"],[3,"__pthread_mutex_s"],[3,"__pthread_rwlock_arch_t"],[3,"__pthread_cond_s"],[19,"__pthread_cond_s__bindgen_ty_1"],[3,"__pthread_cond_s__bindgen_ty_1__bindgen_ty_1"],[19,"__pthread_cond_s__bindgen_ty_2"],[3,"__pthread_cond_s__bindgen_ty_2__bindgen_ty_1"],[3,"__once_flag"],[19,"pthread_mutexattr_t"],[19,"pthread_condattr_t"],[19,"pthread_attr_t"],[19,"pthread_mutex_t"],[19,"pthread_cond_t"],[19,"pthread_rwlock_t"],[19,"pthread_rwlockattr_t"],[19,"pthread_barrier_t"],[19,"pthread_barrierattr_t"],[3,"random_data"],[3,"drand48_data"],[4,"SDL_PixelType"],[4,"SDL_BitmapOrder"],[4,"SDL_PackedOrder"],[4,"SDL_ArrayOrder"],[4,"SDL_PackedLayout"],[4,"SDL_PixelFormatEnum"],[3,"SDL_Color"],[3,"SDL_Palette"],[3,"SDL_PixelFormat"],[3,"SDL_Point"],[3,"SDL_FPoint"],[3,"SDL_Rect"],[3,"SDL_FRect"],[4,"SDL_BlendMode"],[4,"SDL_BlendOperation"],[4,"SDL_BlendFactor"],[3,"SDL_Surface"],[4,"SDL_YUV_CONVERSION_MODE"],[3,"SDL_DisplayMode"],[3,"SDL_Window"],[4,"SDL_WindowFlags"],[4,"SDL_WindowEventID"],[4,"SDL_DisplayEventID"],[4,"SDL_DisplayOrientation"],[4,"SDL_GLattr"],[4,"SDL_GLprofile"],[4,"SDL_GLcontextFlag"],[4,"SDL_GLcontextReleaseFlag"],[4,"SDL_GLContextResetNotification"],[4,"SDL_HitTestResult"],[4,"SDL_Scancode"],[4,"SDL_KeyCode"],[4,"SDL_Keymod"],[3,"SDL_Keysym"],[3,"SDL_Cursor"],[4,"SDL_SystemCursor"],[4,"SDL_MouseWheelDirection"],[3,"_SDL_Joystick"],[3,"SDL_JoystickGUID"],[4,"SDL_JoystickType"],[4,"SDL_JoystickPowerLevel"],[3,"_SDL_Sensor"],[4,"SDL_SensorType"],[3,"_SDL_GameController"],[4,"SDL_GameControllerType"],[4,"SDL_GameControllerBindType"],[3,"SDL_GameControllerButtonBind"],[19,"SDL_GameControllerButtonBind__bindgen_ty_1"],[3,"SDL_GameControllerButtonBind__bindgen_ty_1__bindgen_ty_1"],[4,"SDL_GameControllerAxis"],[4,"SDL_GameControllerButton"],[4,"SDL_TouchDeviceType"],[3,"SDL_Finger"],[4,"SDL_EventType"],[3,"SDL_CommonEvent"],[3,"SDL_DisplayEvent"],[3,"SDL_WindowEvent"],[3,"SDL_KeyboardEvent"],[3,"SDL_TextEditingEvent"],[3,"SDL_TextInputEvent"],[3,"SDL_MouseMotionEvent"],[3,"SDL_MouseButtonEvent"],[3,"SDL_MouseWheelEvent"],[3,"SDL_JoyAxisEvent"],[3,"SDL_JoyBallEvent"],[3,"SDL_JoyHatEvent"],[3,"SDL_JoyButtonEvent"],[3,"SDL_JoyDeviceEvent"],[3,"SDL_ControllerAxisEvent"],[3,"SDL_ControllerButtonEvent"],[3,"SDL_ControllerDeviceEvent"],[3,"SDL_ControllerTouchpadEvent"],[3,"SDL_ControllerSensorEvent"],[3,"SDL_AudioDeviceEvent"],[3,"SDL_TouchFingerEvent"],[3,"SDL_MultiGestureEvent"],[3,"SDL_DollarGestureEvent"],[3,"SDL_DropEvent"],[3,"SDL_SensorEvent"],[3,"SDL_QuitEvent"],[3,"SDL_OSEvent"],[3,"SDL_UserEvent"],[3,"SDL_SysWMEvent"],[19,"SDL_Event"],[4,"SDL_eventaction"],[3,"_SDL_Haptic"],[3,"SDL_HapticDirection"],[3,"SDL_HapticConstant"],[3,"SDL_HapticPeriodic"],[3,"SDL_HapticCondition"],[3,"SDL_HapticRamp"],[3,"SDL_HapticLeftRight"],[3,"SDL_HapticCustom"],[19,"SDL_HapticEffect"],[4,"SDL_HintPriority"],[4,"SDL_LogCategory"],[4,"SDL_LogPriority"],[4,"SDL_MessageBoxFlags"],[4,"SDL_MessageBoxButtonFlags"],[3,"SDL_MessageBoxButtonData"],[3,"SDL_MessageBoxColor"],[4,"SDL_MessageBoxColorType"],[3,"SDL_MessageBoxColorScheme"],[3,"SDL_MessageBoxData"],[4,"SDL_PowerState"],[4,"SDL_RendererFlags"],[3,"SDL_RendererInfo"],[4,"SDL_ScaleMode"],[4,"SDL_TextureAccess"],[4,"SDL_TextureModulate"],[4,"SDL_RendererFlip"],[3,"SDL_Renderer"],[3,"SDL_Texture"],[4,"WindowShapeMode"],[19,"SDL_WindowShapeParams"],[3,"SDL_WindowShapeMode"],[3,"SDL_version"],[3,"SDL_Locale"],[3,"_XExtData"],[3,"XExtCodes"],[3,"XPixmapFormatValues"],[3,"XGCValues"],[3,"_XGC"],[3,"Visual"],[3,"Depth"],[3,"_XDisplay"],[3,"Screen"],[3,"ScreenFormat"],[3,"XSetWindowAttributes"],[3,"XWindowAttributes"],[3,"XHostAddress"],[3,"XServerInterpretedAddress"],[3,"_XImage"],[3,"_XImage_funcs"],[3,"XWindowChanges"],[3,"XColor"],[3,"XSegment"],[3,"XPoint"],[3,"XRectangle"],[3,"XArc"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XTimeCoord"],[3,"XModifierKeymap"],[3,"_XPrivate"],[3,"_XrmHashBucketRec"],[3,"_bindgen_ty_1"],[3,"XKeyEvent"],[3,"XButtonEvent"],[3,"XMotionEvent"],[3,"XCrossingEvent"],[3,"XFocusChangeEvent"],[3,"XKeymapEvent"],[3,"XExposeEvent"],[3,"XGraphicsExposeEvent"],[3,"XNoExposeEvent"],[3,"XVisibilityEvent"],[3,"XCreateWindowEvent"],[3,"XDestroyWindowEvent"],[3,"XUnmapEvent"],[3,"XMapEvent"],[3,"XMapRequestEvent"],[3,"XReparentEvent"],[3,"XConfigureEvent"],[3,"XGravityEvent"],[3,"XResizeRequestEvent"],[3,"XConfigureRequestEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XPropertyEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionRequestEvent"],[3,"XSelectionEvent"],[3,"XColormapEvent"],[3,"XClientMessageEvent"],[19,"XClientMessageEvent__bindgen_ty_1"],[3,"XMappingEvent"],[3,"XErrorEvent"],[3,"XAnyEvent"],[3,"XGenericEvent"],[3,"XGenericEventCookie"],[19,"_XEvent"],[3,"XCharStruct"],[3,"XFontProp"],[3,"XFontStruct"],[3,"XTextItem"],[3,"XChar2b"],[3,"XTextItem16"],[19,"XEDataObject"],[3,"XFontSetExtents"],[3,"_XOM"],[3,"_XOC"],[3,"XmbTextItem"],[3,"XwcTextItem"],[3,"XOMCharSetList"],[4,"XOrientation"],[3,"XOMOrientation"],[3,"XOMFontInfo"],[3,"_XIM"],[3,"_XIC"],[3,"XIMStyles"],[3,"XIMCallback"],[3,"XICCallback"],[3,"_XIMText"],[19,"_XIMText__bindgen_ty_1"],[3,"_XIMPreeditStateNotifyCallbackStruct"],[3,"_XIMStringConversionText"],[19,"_XIMStringConversionText__bindgen_ty_1"],[4,"XIMCaretDirection"],[3,"_XIMStringConversionCallbackStruct"],[3,"_XIMPreeditDrawCallbackStruct"],[4,"XIMCaretStyle"],[3,"_XIMPreeditCaretCallbackStruct"],[4,"XIMStatusDataType"],[3,"_XIMStatusDrawCallbackStruct"],[19,"_XIMStatusDrawCallbackStruct__bindgen_ty_1"],[3,"_XIMHotKeyTrigger"],[3,"_XIMHotKeyTriggers"],[3,"XIMValuesList"],[4,"SDL_SYSWM_TYPE"],[3,"SDL_SysWMmsg"],[19,"SDL_SysWMmsg__bindgen_ty_1"],[3,"SDL_SysWMmsg__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_SysWMinfo"],[19,"SDL_SysWMinfo__bindgen_ty_1"],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_1"],[3,"SDL_SysWMinfo__bindgen_ty_1__bindgen_ty_2"],[3,"VkInstance_T"],[3,"VkSurfaceKHR_T"],[3,"__va_list_tag"],[3,"SDL_BlitMap"],[3,"wl_display"],[3,"wl_surface"],[3,"wl_shell_surface"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":[6,6,6,2,6,2,6,2,6,6,2,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,3,3,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":["spin","","","","","","","","","","","","","","","","","","spin::barrier","","","","","","","","","","","","","","","","","","","spin::lazy","","","","","","","","","","","","","","spin::lock_api","","","","","","spin::mutex","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::mutex::spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::once","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin::relax","","","","","","","","","","","","","","","","","","","","spin::rwlock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","","Returns the argument unchanged.","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,15,16,15,16,15,16,16,15,16,16,15,15,15,15,16,15,15,16,15,15,15,16,15,15,15,0,15,16,15,16,15,15,15,16,15,0,0,20,20,21,20,21,20,21,21,21,20,21,21,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,21,20,21,20,20,20,21,20,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,27,28,27,28,27,28,27,28,7,27,28,27,28,27,28,27,28,0,0,0,0,23,23,24,25,26,23,24,25,26,23,24,25,26,25,23,25,26,25,24,25,26,23,24,24,25,25,26,26,23,23,23,23,23,24,25,26,23,23,24,25,26,23,23,24,25,26,23,23,23,23,23,23,23,24,25,26,23,24,25,26,23,23,23,23,23,26,23,23,23,24,25,26,23,23,23,23,26,23,23,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[[4,[7]]],1],0,[8],[[]],[[]],[[],[[8,[9]]]],[[[8,[10,7]]]],[[[8,[11]],12],13],[[[8,[10,7]]]],[[]],[[]],[[],8],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[15,[[0,[14,9]]]]]],[[[16,[14]]]],[[[16,[14]]]],[[[15,[[0,[14,11]]]],12],13],[[[16,[[0,[14,17]]]],12],13],[[[16,[[0,[14,11]]]],12],13],[[[15,[14]]]],[[],15],[[]],[18],[[]],[[[15,[14]]]],[[]],[[]],[15],[[[15,[7]]],2],[[[15,[14]]],2],[[[16,[14]]]],[[[15,[7]]]],[[[15,[14,7]]],[[16,[14]]]],[[],15],0,[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[19,[[16,[14]]]]]],[[[15,[7]]],2],[[],6],[[],6],[[[15,[7]]]],0,0,[20],[[]],[[]],[[]],[[]],[[],[[20,[[0,[14,9]]]]]],[[[21,[14]]]],[[[21,[14]]]],[[[21,[14]]]],[[[20,[[0,[14,11]]]],12],13],[[[21,[[0,[14,11]]]],12],13],[[[21,[[0,[14,17]]]],12],13],[[[20,[14]]]],[18],[[],20],[[]],[[]],[[[20,[14]]]],[[]],[[]],[20],[[[20,[7]]],2],[[[20,[14]]],2],[[[21,[14]]]],[[[20,[7]]]],[[[20,[14,7]]],[[21,[14]]]],[[],20],[[],5],[[],5],[[],5],[[],5],[[[20,[14]]],[[19,[[21,[14]]]]]],[[[20,[7]]],2],[[],6],[[],6],[[[20,[7]]]],0,0,[22],[[]],[[]],[[[22,[7]],10]],[[],22],[22],[[[22,[11]],12],13],[18],[[],22],[[]],[22,19],[22,19],[22],[22],[[],22],[[]],[22],[22,2],[[],22],[[[22,[7]]],19],[[[22,[7]],10],5],[[],5],[[],5],[22,19],[[],6],[[[22,[7]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],0,0,0,0,[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[23,[[0,[14,9]]]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[25,[14]]]],[[[23,[7]]]],[[[25,[14]]],[[24,[14]]]],[[[26,[14]]],[[24,[14]]]],[[[25,[14]]],[[26,[14]]]],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[[0,[14,11]]]],12],13],[[[24,[[0,[14,11]]]],12],13],[[[24,[[0,[14,17]]]],12],13],[[[25,[[0,[14,17]]]],12],13],[[[25,[[0,[14,11]]]],12],13],[[[26,[[0,[14,11]]]],12],13],[[[26,[[0,[14,17]]]],12],13],[[[23,[14]]]],[[[23,[14]]]],[[]],[[],23],[18],[[]],[[]],[[]],[[[23,[14]]]],[[]],[[]],[[]],[[]],[23],[[[23,[7]]],2],[[[24,[14]]]],[[[25,[14]]]],[[[26,[14]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[],23],[[[23,[14,7]]],[[24,[14]]]],[[[23,[14]]],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[7]]],2],[[[23,[14]]],[[19,[[24,[14]]]]]],[[[23,[7]]],2],[[[26,[14]]],[[5,[[25,[14]],[26,[14]]]]]],[[[23,[14]]],[[19,[[26,[14]]]]]],[[[23,[14]]],[[19,[[25,[14]]]]]],[[],6],[[],6],[[],6],[[],6],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[23,[7]]]],[[[26,[14,7]]],[[25,[14,7]]]],[[[23,[14,7]]],[[26,[14,7]]]],[[[23,[14,7]]],[[25,[14,7]]]],[[[23,[14]]],3]],"p":[[3,"BarrierWaitResult"],[15,"bool"],[15,"usize"],[3,"Barrier"],[4,"Result"],[3,"TypeId"],[8,"RelaxStrategy"],[3,"Lazy"],[8,"Default"],[8,"FnOnce"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"Mutex"],[3,"MutexGuard"],[8,"Display"],[15,"never"],[4,"Option"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableGuard"],[3,"Spin"],[3,"Loop"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref, …","t":[8,8],"n":["CloneStableDeref","StableDeref"],"q":["stable_deref_trait",""],"d":["An unsafe marker trait for types where clones deref to the …","An unsafe marker trait for types that deref to a stable …"],"i":[0,0],"f":[0,0],"p":[]},\
"tiff":{"doc":"Decoding and Encoding of TIFF Images","t":[13,13,4,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,6,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,4,4,13,13,13,13,3,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,6,13,3,13,13,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,18,3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,18,3,3,3,3,3,3,8,3,3,3,3,3,3,16,3,3,3,3,3,3,3,3,3,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,4,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ByteExpected","CMYK","ColorType","Format","FormatError","Gray","GrayA","HorizontalPredictor","ImageFileDirectoryNotFound","InconsistentSizesEncountered","InconsistentStripSamples","InflateError","InflateError","IntSizeError","InterpretationWithBits","InvalidTag","InvalidTagValueType","IoError","LimitsExceeded","Palette","RGB","RGBA","RequiredTagEmpty","RequiredTagNotFound","SignedIntegerExpected","TiffError","TiffFormatError","TiffResult","TiffSignatureInvalid","TiffSignatureNotFound","TiffUnsupportedError","UnexpectedCompressedData","UnknownCompressionMethod","UnknownInterpretation","UnknownPredictor","UnsignedIntegerExpected","UnsupportedBitsPerChannel","UnsupportedColorType","UnsupportedCompressionMethod","UnsupportedDataType","UnsupportedError","UnsupportedPlanarConfig","UnsupportedSampleDepth","UnsupportedSampleFormat","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decoder","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","encoder","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","provide","tags","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","actual_bytes","actual_samples","required_bytes","required_samples","Decoder","DecodingBuffer","DecodingResult","F32","F32","F64","F64","Limits","U16","U16","U32","U32","U64","U64","U8","U8","as_buffer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_order","clone","clone_into","colortype","decoding_buffer_size","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dimensions","drop","drop","drop","drop","find_tag","find_tag_unsigned","find_tag_unsigned_vec","fmt","fmt","fmt","from","from","from","from","get_tag","get_tag_ascii_string","get_tag_f32","get_tag_f32_vec","get_tag_f64","get_tag_f64_vec","get_tag_u16_vec","get_tag_u32","get_tag_u32_vec","get_tag_u64","get_tag_u64_vec","get_tag_u8_vec","get_tag_unsigned","goto_offset","goto_offset_u64","ifd","ifd_value_size","init","init","init","init","init","intermediate_buffer_size","into","into","into","into","more_images","new","next_image","read_byte","read_double","read_float","read_ifd_offset","read_image","read_jpeg","read_long","read_long8","read_offset","read_offset_u64","read_short","read_slong","read_sshort","read_string","read_strip","read_strip_to_buffer","strip_count","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlimited","with_limits","Ascii","Byte","Directory","Double","Entry","Float","List","Rational","RationalBig","SRational","SRationalBig","Short","Signed","SignedBig","Unsigned","UnsignedBig","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","init","init","into","into","into_f32","into_f32_vec","into_f64","into_f64_vec","into_i32","into_i32_vec","into_i64","into_i64_vec","into_string","into_u16","into_u16_vec","into_u32","into_u32_vec","into_u64","into_u64_vec","into_u8","into_u8_vec","new","new_u64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","val","BYTE_LEN","DirectoryEncoder","FIELD_TYPE","ImageEncoder","Rational","SRational","TiffEncoder","TiffValue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone_into","colortype","count","count","count","d","d","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encoder","finish","finish","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","n","n","new","new_directory","new_image","next_strip_sample_count","resolution","resolution_unit","rows_per_strip","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write","write","write_data","write_data","write_image","write_strip","write_tag","x_resolution","y_resolution","BITS_PER_SAMPLE","CMYK16","CMYK32","CMYK32Float","CMYK64","CMYK64Float","CMYK8","ColorType","Gray16","Gray32","Gray32Float","Gray64","Gray64Float","Gray8","Inner","RGB16","RGB32","RGB32Float","RGB64","RGB64Float","RGB8","RGBA16","RGBA32","RGBA32Float","RGBA64","RGBA64Float","RGBA8","SAMPLE_FORMAT","TIFF_VALUE","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ASCII","Artist","BYTE","BitsPerSample","BlackIsZero","CIELab","CMYK","CellLength","CellWidth","Centimeter","Chunky","ColorMap","Compression","CompressionMethod","Copyright","DOUBLE","DateTime","Deflate","ExtraSamples","FLOAT","Fax3","Fax4","FillOrder","FreeByteCounts","FreeOffsets","GdalNodata","GeoAsciiParamsTag","GeoDoubleParamsTag","GeoKeyDirectoryTag","GrayResponseCurve","GrayResponseUnit","Horizontal","HostComputer","Huffman","IEEEFP","ImageDescription","ImageLength","ImageWidth","Inch","Int","JPEG","JPEGTables","LONG","LONG8","LZW","Make","MaxSampleValue","MinSampleValue","Model","ModelPixelScaleTag","ModelTiepointTag","ModelTransformationTag","ModernJPEG","NewSubfileType","None","None","None","OldDeflate","Orientation","PackBits","PhotometricInterpretation","PhotometricInterpretation","Planar","PlanarConfiguration","PlanarConfiguration","Predictor","Predictor","RATIONAL","RGB","RGBPalette","ResolutionUnit","ResolutionUnit","RowsPerStrip","SBYTE","SHORT","SLONG","SRATIONAL","SSHORT","SampleFormat","SampleFormat","SamplesPerPixel","Software","StripByteCounts","StripOffsets","SubfileType","Tag","Threshholding","TileByteCounts","TileLength","TileOffsets","TileWidth","TransparencyMask","Type","UNDEFINED","Uint","Unknown","Unknown","Void","WhiteIsZero","XResolution","YCbCr","YResolution","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16","from_u16_exhaustive","from_u16_exhaustive","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","to_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["tiff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::TiffFormatError","","","","tiff::decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::decoder::ifd","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::encoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiff::encoder::colortypetiff::tagsd":["","Pixel is CMYK","An enumeration over supported color types and their bit …","","The Image is not formatted properly.","Pixel is grayscale","Pixel is grayscale with an alpha channel","","","","","Decompression failed due to faulty compressed data.","","An integer conversion to or from a platform size failed, …","","","","An I/O Error occurred while decoding the image.","The Limits of the Decoder is exceeded.","Pixel is an index into a color palette","Pixel contains R, G and B channels","Pixel is RGB with an alpha channel","","","","Tiff error kinds.","The image is not formatted properly.","Result of an image decoding/encoding process","","","The Decoder does not support features required by the …","","","","","","","","","","The Decoder does not support features required by the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The representation of a TIFF decoder","","Result of a decoding process","A slice of 32 bit IEEE floats","A vector of 32 bit IEEE floats","A slice of 64 bit IEEE floats","A vector of 64 bit IEEE floats","Decoding limits","A slice of unsigned words","A vector of unsigned words","A slice of 32 bit unsigned ints","A vector of 32 bit unsigned ints","A slice of 64 bit unsigned ints","A vector of 64 bit unsigned ints","A slice of unsigned bytes","A vector of unsigned bytes","","","","","","","","","","Returns the byte_order","","","","The maximum size of any <code>DecodingResult</code> in bytes, the …","","","","","","","","","","","","","","","Tries to retrieve a tag. Return <code>Ok(None)</code> if the tag is not …","Tries to retrieve a tag and convert it to the desired …","Tries to retrieve a vector of all a tag’s values and …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Tries to retrieve a tag. Returns an error if the tag is …","Tries to retrieve a tag and convert it to a ascii vector.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","Tries to retrieve a tag and convert it to the desired type.","Tries to retrieve a tag and convert it to the desired type.","","","Tries to retrieve a tag and convert it to a 8bit vector.","Tries to retrieve a tag and convert it to the desired …","Moves the cursor to the specified offset","","Function for reading TIFF tags","The maximum size of any ifd value in bytes, the default is …","","","","","Initializes the decoder.","Maximum size for intermediate buffer which may be used to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if there is at least one more image available.","Create a new decoder that decodes from the stream <code>r</code>","Reads in the next image. If there is no further image in …","Reads a TIFF byte value","Reads a TIFF double value","Reads a TIFF float value","","Decodes the entire image and return it as a Vector","","Reads a TIFF long value","","Reads a TIFF IFA offset/value field","Reads a TIFF IFA offset/value field","Reads a TIFF short value","Reads a TIFF slong value","Reads a TIFF sshort value","Reads a string","Read a single strip from the image and return it as a …","","Number of strips in image","","","","","","","","","","","","","","A configuration that does not impose any limits.","","","","Type representing an Image File Directory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Low level interface to encode ifd directories.","","Type to encode images strip by strip.","Type to represent tiff values of type <code>RATIONAL</code>","Type to represent tiff values of type <code>SRATIONAL</code>","Tiff encoder.","Trait for types that can be encoded in a tiff file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference of the underlying <code>DirectoryEncoder</code>","Write out the ifd directory.","Write out image and ifd directory.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a <code>DirectoryEncoder</code> to encode an ifd directory.","Create an ‘ImageEncoder’ to encode an image one slice …","Number of samples the next strip should have.","Set image resolution","Set image resolution unit","Set image number of lines per strip","","","","","","","","","","","","","","","","","","","","Write some data to the tiff file, the offset of the data …","Write strips from data","Convenience function to write an entire image from memory.","Write a single strip.","Write a single ifd tag.","Set image x-resolution","Set image y-resolution","The value of the tiff tag <code>BitsPerSample</code>","","","","","","","Trait for different colortypes that can be encoded.","","","","","","","The type of each sample of this colortype","","","","","","","","","","","","","The value of the tiff tag <code>SampleFormat</code>","The value of the tiff tag <code>PhotometricInterpretation</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See TIFF compression tags for reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","BigTIFF 64-bit unsigned integer","","","","","","","","","","","","","","","","","","","","","","","","","","","Type to represent resolution units","","","","","","","","","","","","","","","TIFF tags","","","","","","","The type of an IFD entry (a 2 byte field).","","","A private or extension tag","An unknown extension sample format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,7,0,4,1,7,7,6,4,4,4,0,4,1,6,4,4,1,1,7,7,7,4,4,4,0,0,0,4,4,0,4,6,6,4,4,6,6,6,6,1,6,6,6,1,4,5,6,7,1,4,5,6,7,1,4,5,6,7,4,5,6,7,0,1,4,5,6,7,1,4,5,6,7,1,1,4,5,6,7,0,4,5,6,7,1,1,4,4,5,6,6,7,1,1,1,1,1,1,4,5,6,7,5,6,7,1,4,5,6,7,1,4,5,6,7,1,0,4,5,6,7,1,4,6,1,4,5,6,7,1,4,5,6,7,1,4,5,6,7,58,59,58,59,0,0,0,22,21,22,21,0,22,21,22,21,22,21,22,21,21,22,21,26,25,22,21,26,25,25,26,26,25,26,26,22,21,26,25,22,21,26,25,25,22,21,26,25,25,25,25,21,26,25,22,21,26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,26,22,21,26,25,25,26,22,21,26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,22,21,26,25,22,21,26,25,22,21,26,25,26,25,29,29,0,29,0,29,29,29,29,29,29,29,29,29,29,29,0,29,41,29,41,29,41,29,41,29,41,29,41,29,41,29,29,41,29,41,29,41,29,41,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,41,41,29,41,29,41,29,41,29,41,41,52,0,52,0,0,0,0,0,45,50,47,49,44,45,50,47,49,44,52,44,44,0,52,45,44,45,44,45,50,47,49,44,45,50,47,49,44,45,50,47,47,49,49,44,49,47,49,45,50,47,49,44,45,50,47,49,44,45,50,47,49,44,45,44,50,50,50,49,49,49,49,44,45,50,47,49,44,45,50,47,49,44,45,50,47,49,44,52,45,44,47,49,50,49,47,49,49,48,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,48,48,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,43,28,43,28,54,54,54,28,28,51,55,28,28,0,28,43,28,53,28,43,53,53,28,28,28,28,28,28,28,28,28,56,28,53,57,28,28,28,51,57,53,28,43,43,53,28,28,28,28,28,28,28,53,28,53,56,51,53,28,53,0,28,55,0,28,0,28,43,54,54,0,28,28,43,43,43,43,43,0,28,28,28,28,28,28,0,28,28,28,28,28,54,0,43,57,28,57,57,54,28,54,28,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57,28,43,53,54,55,56,51,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],0,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[1,9],[8],[8],[8],[8],[8],0,[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[1,11],12],[[1,11],[[14,[13]]]],[[4,11],12],[[4,11],[[14,[13]]]],[[5,11],12],[[6,11],[[14,[13]]]],[[6,11],12],[[7,11],12],[15,1],[[]],[16,1],[4,1],[6,1],[17,1],[[]],[[]],[[]],[[]],[5],[6],[7],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[18],0,[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[21,8],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[26,26],[[]],[[[25,[[0,[23,24]]]]],[[27,[7]]]],0,[[],26],[8],[8],[8],[8],[8],[8],[8],[8],[[[25,[[0,[23,24]]]]],27],[8],[8],[8],[8],[[[25,[[0,[23,24]]]],28],[[27,[[3,[29]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[[3,[[31,[30]]]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[[3,[[32,[[31,[30]]]]]]]]]],[[21,11],12],[[26,11],12],[[25,11],12],[[]],[[]],[[]],[[]],[[[25,[[0,[23,24]]]],28],[[27,[29]]]],[[[25,[[0,[23,24]]]],28],[[27,[19]]]],[[[25,[[0,[23,24]]]],28],[[27,[33]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[33]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[34]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[34]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[35]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[36]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[36]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[30]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[30]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[[32,[37]]]]]],[[[25,[[0,[23,24]]]],28],[[27,[[31,[30]]]]]],[[[25,[[0,[23,24]]]],36],38],[[[25,[[0,[23,24]]]],30],38],0,0,[[],8],[[],8],[[],8],[[],8],[[[25,[[0,[23,24]]]]],[[27,[[25,[[0,[23,24]]]]]]]],0,[[]],[[]],[[]],[[]],[[[25,[[0,[23,24]]]]],10],[[[0,[23,24]]],[[27,[[25,[[0,[23,24]]]]]]]],[[[25,[[0,[23,24]]]]],27],[[[25,[[0,[23,24]]]]],[[14,[37,16]]]],[[[25,[[0,[23,24]]]]],[[14,[34,16]]]],[[[25,[[0,[23,24]]]]],[[14,[33,16]]]],[[[25,[[0,[23,24]]]]],[[14,[30,16]]]],[[[25,[[0,[23,24]]]]],[[27,[21]]]],[[[25,[[0,[23,24]]]]],[[27,[21]]]],[[[25,[[0,[23,24]]]]],[[14,[36,16]]]],[[[25,[[0,[23,24]]]]],[[14,[30,16]]]],[[[25,[[0,[23,24]]]]],27],[[[25,[[0,[23,24]]]]],[[14,[16]]]],[[[25,[[0,[23,24]]]]],[[14,[35,16]]]],[[[25,[[0,[23,24]]]]],[[14,[39,16]]]],[[[25,[[0,[23,24]]]]],[[14,[40,16]]]],[[[25,[[0,[23,24]]]],8],[[27,[19]]]],[[[25,[[0,[23,24]]]]],[[27,[21]]]],[[[25,[[0,[23,24]]]],22],27],[[[25,[[0,[23,24]]]]],[[27,[36]]]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],26],[[[25,[[0,[23,24]]]],26],[[25,[[0,[23,24]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[29,29],[41,41],[[]],[[]],[8],[8],[8],[8],[8],[8],[[29,29],10],[[29,11],12],[[41,11],[[14,[13]]]],[[]],[[]],[[],8],[[],8],[[]],[[]],[29,[[27,[33]]]],[29,[[27,[[32,[33]]]]]],[29,[[27,[34]]]],[29,[[27,[[32,[34]]]]]],[29,[[27,[39]]]],[29,[[27,[[32,[39]]]]]],[29,[[27,[42]]]],[29,[[27,[[32,[42]]]]]],[29,[[27,[19]]]],[29,[[27,[35]]]],[29,[[27,[[32,[35]]]]]],[29,[[27,[36]]]],[29,[[27,[[32,[36]]]]]],[29,[[27,[30]]]],[29,[[27,[[32,[30]]]]]],[29,[[27,[37]]]],[29,[[27,[[32,[37]]]]]],[[43,36],41],[[43,30],41],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[41,26,25],[[27,[29]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[44,44],[[]],0,[[],36],[45,36],[44,36],0,0,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[[47,[[0,[46,24]]]]]],[8],[8],[[[49,[[0,[46,24]],48]]]],[8],[[[49,[[0,[46,24]],48]]],47],[[[47,[[0,[46,24]]]]],27],[[[49,[[0,[46,24]],48]]],27],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[46,24]]],[[27,[[50,[[0,[46,24]]]]]]]],[[[50,[[0,[46,24]]]]],[[27,[[47,[[0,[46,24]]]]]]]],[[[50,[[0,[46,24]]]],36,36],[[27,[[49,[[0,[46,24]],48]]]]]],[[[49,[[0,[46,24]],48]]],30],[[[49,[[0,[46,24]],48]],51,44]],[[[49,[[0,[46,24]],48]],51]],[[[49,[[0,[46,24]],48]],36],27],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[[47,[[0,[46,24]]]],52],[[27,[30]]]],[[[49,[[0,[46,24]],48]]],27],[[[50,[[0,[46,24]]]],36,36],27],[[[49,[[0,[46,24]],48]]],27],[[[47,[[0,[46,24]]]],28,52],27],[[[49,[[0,[46,24]],48]],44]],[[[49,[[0,[46,24]],48]],44]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[43,43],[53,53],[54,54],[55,55],[56,56],[51,51],[57,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[[28,28],10],[[43,43],10],[[53,53],10],[[54,54],10],[[55,55],10],[[56,56],10],[[51,51],10],[[57,57],10],[[28,11],12],[[43,11],12],[[53,11],12],[[54,11],12],[[55,11],12],[[56,11],12],[[51,11],12],[[57,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[3,[28]]]],[35,[[3,[43]]]],[35,[[3,[53]]]],[35,[[3,[54]]]],[35,[[3,[55]]]],[35,[[3,[56]]]],[35,[[3,[51]]]],[35,[[3,[57]]]],[35,28],[35,57],[28],[43],[53],[54],[55],[56],[51],[57],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,35],[43,35],[53,35],[54,35],[55,35],[56,35],[51,35],[57,35],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20]],"p":[[4,"TiffError"],[8,"Error"],[4,"Option"],[4,"TiffFormatError"],[3,"InflateError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[15,"usize"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"FromUtf8Error"],[3,"Error"],[3,"TryFromIntError"],[3,"Demand"],[3,"String"],[3,"TypeId"],[4,"DecodingResult"],[4,"DecodingBuffer"],[8,"Read"],[8,"Seek"],[3,"Decoder"],[3,"Limits"],[6,"TiffResult"],[4,"Tag"],[4,"Value"],[15,"u64"],[8,"TryFrom"],[3,"Vec"],[15,"f32"],[15,"f64"],[15,"u16"],[15,"u32"],[15,"u8"],[6,"Result"],[15,"i32"],[15,"i16"],[3,"Entry"],[15,"i64"],[4,"Type"],[3,"Rational"],[3,"SRational"],[8,"Write"],[3,"DirectoryEncoder"],[8,"ColorType"],[3,"ImageEncoder"],[3,"TiffEncoder"],[4,"ResolutionUnit"],[8,"TiffValue"],[4,"CompressionMethod"],[4,"PhotometricInterpretation"],[4,"PlanarConfiguration"],[4,"Predictor"],[4,"SampleFormat"],[13,"UnexpectedCompressedData"],[13,"InconsistentStripSamples"],[3,"Gray8"],[3,"Gray16"],[3,"Gray32"],[3,"Gray32Float"],[3,"Gray64"],[3,"Gray64Float"],[3,"RGB8"],[3,"RGB16"],[3,"RGB32"],[3,"RGB32Float"],[3,"RGB64"],[3,"RGB64Float"],[3,"RGBA8"],[3,"RGBA16"],[3,"RGBA32"],[3,"RGBA32Float"],[3,"RGBA64"],[3,"RGBA64Float"],[3,"CMYK8"],[3,"CMYK16"],[3,"CMYK32"],[3,"CMYK32Float"],[3,"CMYK64"],[3,"CMYK64Float"]]},\
"trowel":{"doc":"","t":[18,8,13,8,6,13,3,18,13,4,16,16,8,3,18,18,3,18,18,4,13,18,13,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,23,11,11,11,10,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["A","App","AppErr","AppExt","AppResult","Append","Buttons","D","DisplayErr","Error","File","FileError","FileSys","FpsApp","I","J","JoinApps","K","L","Mode","ReadOnly","S","Truncate","W","all","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","complement","contains","default","delete_file","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","draw","draw","draw","drop","drop","drop","drop","drop","empty","entry","eq","eq","extend","file_exists","file_sys","flipped","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","init","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","join","list_files","new","not","open_file","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","remove","run","run_with","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","stdout","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_default","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","update","update","update","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Buffer","BufferedApp","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","data","decrease_button","deref","deref","deref_mut","deref_mut","draw","drop","drop","from","from","get","increase_button","init","init","init","interlace","into","into","new","nr_elements","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set","transparent","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","update","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Axes","DrawTargetExt2","Flipped","X","Y","all","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","bounding_box","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clipped","clone","clone_into","cmp","color_converted","complement","contains","cropped","deref","deref","deref_mut","deref_mut","difference","draw_iter","drop","drop","empty","eq","extend","fill_contiguous","fill_solid","flip","flipped","flipped","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","init","init","insert","intersection","intersects","into","into","is_all","is_empty","not","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","toggle","translated","try_from","try_from","try_into","try_into","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["troweltrowel::buffered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trowel::flipped","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Returns an empty set of flags.","This attribute-like macro does nothing. It’s a no-op.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flipped draw target.","","","Returns the set containing all flags.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","Creates a translated draw target based on this draw target.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","",""],"i":[1,0,15,0,0,4,0,1,15,0,36,36,0,0,1,1,0,1,1,0,4,1,4,1,1,13,8,1,15,4,1,1,1,1,1,1,1,13,8,1,15,4,13,8,1,15,4,0,13,8,1,15,4,13,8,1,15,4,13,8,1,15,4,1,4,1,4,1,1,1,8,36,13,8,1,15,4,13,8,1,15,4,1,18,13,8,13,8,1,15,4,1,0,1,4,1,36,0,0,1,1,1,1,1,15,13,8,1,15,4,1,1,1,1,1,18,13,13,8,8,1,15,4,1,1,1,13,8,1,15,4,1,1,37,36,8,1,36,13,8,1,15,4,13,8,1,15,4,1,1,0,0,13,8,1,15,4,13,8,1,15,4,1,0,1,1,1,1,4,1,8,13,8,1,15,4,13,8,1,15,4,13,8,1,15,4,1,13,8,1,15,4,13,8,1,15,4,18,13,8,13,8,1,15,4,13,8,1,15,4,0,0,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,26,25,25,26,25,26,25,26,25,26,25,25,25,26,25,25,26,26,25,26,25,26,25,26,25,26,26,26,25,26,25,26,25,26,25,26,25,25,26,25,26,25,0,0,0,27,27,27,27,28,27,27,27,27,27,27,27,27,28,27,28,28,27,28,27,28,27,28,28,28,27,27,27,28,27,27,28,27,28,27,28,27,28,27,28,27,27,27,28,28,27,38,28,27,27,27,27,27,28,27,28,27,27,27,27,27,27,28,27,27,27,27,28,27,27,27,27,28,27,28,27,27,27,28,27,28,27,27,27,27,27,27,28,27,28,27,28,27,28,27,27,28,27,28,27,28,27,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[1,1],1],[[1,1]],[[1,1],1],[[1,1]],[1,2],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[1,1],[4,4],[[]],[[]],[[1,1],5],[1,1],[[1,1],6],[[],[[8,[7]]]],[9,10],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[1,1],1],[[],12],[13,12],[8,12],[11],[11],[11],[11],[11],[[],1],0,[[1,1],6],[[4,4],6],[[1,14]],[9,[[10,[6]]]],[[],[[10,[0,15]]]],0,[[1,16],17],[[1,16],17],[[1,16],17],[[1,16],17],[[1,16],17],[[15,16],17],[[]],[[]],[[]],[[]],[[]],[2,[[3,[1]]]],[2,1],[2,1],[14,1],[1],[[],12],[[],11],[13,12],[8,12],[[],11],[[],11],[[],11],[[],11],[[1,1]],[[1,1],1],[[1,1],6],[[]],[[]],[[]],[[]],[[]],[1,6],[1,6],[18,[[13,[18]]]],[[],[[10,[[20,[19]]]]]],[[],8],[1,1],[[9,4],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],[[3,[5]]]],[[1,1]],[18],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1,6]],[[],[[23,[22]]]],[[1,1],1],[[1,1]],[[1,1],1],[[]],[[]],[[1,1]],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],[[],24],[[],24],[[],24],[[1,1],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,12],[[13,1],12],[[8,1],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,[11],[11],[11],[11],[25,12],[11],[11],[[]],[[]],[[26,11]],0,[[],11],[[],11],[25,12],0,[[]],[[]],[[],25],[26,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,11]],0,[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],[[]],[[]],[[]],[[]],[[25,1],12],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],27],[[]],[[]],[[27,27],27],[[27,27]],[[27,27],27],[[27,27]],[27,2],[[27,27],27],[[27,27]],[[]],[[]],[[]],[[]],[28,29],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[28,10],[29,30],[27,27],[[]],[[27,27],5],[[],31],[27,27],[[27,27],6],[29,32],[11],[11],[11],[11],[[27,27],27],[28,10],[11],[11],[[],27],[[27,27],6],[[27,14]],[[28,29],10],[[28,29],10],[[27,33,34],33],[27,28],[27,28],[[27,16],17],[[27,16],17],[[27,16],17],[[27,16],17],[[27,16],17],[[28,16],17],[[]],[[]],[2,[[3,[27]]]],[2,27],[2,27],[14,27],[27],[[],11],[[],11],[[27,27]],[[27,27],27],[[27,27],6],[[]],[[]],[27,6],[27,6],[27,27],[[]],[[]],[[]],[[]],[[27,27],[[3,[5]]]],[[27,27]],[[]],[[]],[[]],[[]],[[27,27,6]],[[27,27],27],[[27,27]],[[27,27],27],[[]],[[27,27]],[33,35],[[],10],[[],10],[[],10],[[],10],[[],24],[[],24],[[27,27],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Buttons"],[15,"u8"],[4,"Option"],[4,"Mode"],[4,"Ordering"],[15,"bool"],[3,"StdClock"],[3,"FpsApp"],[15,"str"],[4,"Result"],[15,"usize"],[6,"AppResult"],[3,"JoinApps"],[8,"IntoIterator"],[4,"Error"],[3,"Formatter"],[6,"Result"],[8,"App"],[3,"String"],[3,"Vec"],[15,"never"],[3,"Stdout"],[3,"GenioWrite"],[3,"TypeId"],[3,"BufferedApp"],[3,"Buffer"],[3,"Axes"],[3,"Flipped"],[3,"Rectangle"],[3,"Clipped"],[3,"ColorConverted"],[3,"Cropped"],[3,"Point"],[3,"Size"],[3,"Translated"],[8,"FileSys"],[8,"AppExt"],[8,"DrawTargetExt2"]]},\
"trowel_macro":{"doc":"","t":[23,23,23],"n":["add_entry","id","omit"],"q":["trowel_macro","",""],"d":["","This attribute-like macro does nothing. It’s a no-op.",""],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"try_default":{"doc":"","t":[8,10],"n":["TryDefault","try_default"],"q":["try_default",""],"d":["A trait for all types!","If the implementor implements Default, then this will …"],"i":[0,2],"f":[0,[[],1]],"p":[[4,"Option"],[8,"TryDefault"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":[5,5],"n":["is_xid_continue","is_xid_start"],"q":["unicode_ident",""],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"p":[[15,"char"],[15,"bool"]]},\
"usb_device":{"doc":"Experimental device-side USB stack for embedded devices.","t":[13,13,13,13,13,13,13,13,6,13,4,4,13,11,11,11,11,0,0,0,11,0,0,0,0,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,13,3,13,4,18,13,13,3,13,8,3,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,18,13,13,13,18,18,18,18,18,18,13,13,4,3,4,13,13,18,18,18,18,18,18,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,13,17,13,13,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,18,3,3,8,6,6,4,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,3,2,2,3,17,17,17,17,17,17,17,17,17,17,17,17,17,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BufferOverflow","EndpointMemoryOverflow","EndpointOverflow","In","InvalidEndpoint","InvalidState","Out","ParseError","Result","Unsupported","UsbDirection","UsbError","WouldBlock","borrow","borrow","borrow_mut","borrow_mut","bus","class","class_prelude","clone","control","descriptor","device","endpoint","eq","fmt","fmt","from","from","from","into","into","prelude","test_class","try_from","try_from","try_into","try_into","type_id","type_id","Data","InterfaceNumber","None","PollResult","QUIRK_SET_ADDRESS_BEFORE_STATUS","Reset","Resume","StringIndex","Suspend","UsbBus","UsbBusAllocator","alloc","alloc_ep","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bulk","clone","clone","control","enable","eq","eq","force_reset","from","from","from","from","interface","interrupt","into","into","into","into","is_stalled","new","poll","read","reset","resume","set_device_address","set_stalled","string","suspend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","ep_in_complete","ep_out","ep_setup","ControlIn","ControlOut","UsbClass","accept","accept","accept_with","accept_with_static","borrow","borrow","borrow_mut","borrow_mut","control_in","control_out","data","endpoint_in_complete","endpoint_out","endpoint_setup","from","from","get_bos_descriptors","get_configuration_descriptors","get_string","into","into","poll","reject","reject","request","request","reset","try_from","try_from","try_into","try_into","type_id","type_id","BosWriter","ControlIn","ControlOut","DescriptorWriter","EndpointAddress","EndpointIn","EndpointOut","EndpointType","InterfaceNumber","StringIndex","UsbBus","UsbBusAllocator","UsbClass","UsbError","control","CLEAR_FEATURE","Class","Device","Endpoint","FEATURE_DEVICE_REMOTE_WAKEUP","FEATURE_ENDPOINT_HALT","GET_CONFIGURATION","GET_DESCRIPTOR","GET_INTERFACE","GET_STATUS","Interface","Other","Recipient","Request","RequestType","Reserved","Reserved","SET_ADDRESS","SET_CONFIGURATION","SET_DESCRIPTOR","SET_FEATURE","SET_INTERFACE","SYNCH_FRAME","Standard","Vendor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","descriptor_type_index","direction","eq","eq","eq","fmt","fmt","fmt","from","from","from","index","into","into","into","length","recipient","request","request_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","BosWriter","DescriptorWriter","borrow","borrow","borrow_mut","borrow_mut","capability","capability_type","descriptor_type","endpoint","endpoint_ex","from","from","iad","interface","interface_alt","into","into","lang_id","position","try_from","try_from","try_into","try_into","type_id","type_id","write","write_with","CONTAINER_ID","PLATFORM","SS_USB_DEVICE","USB_2_0_EXTENSION","WIRELESS_USB","BOS","CAPABILITY","CONFIGURATION","DEVICE","ENDPOINT","IAD","INTERFACE","STRING","ENGLISH_US","Addressed","CONFIGURATION_NONE","CONFIGURATION_VALUE","Configured","DEFAULT_ALTERNATE_SETTING","Default","Suspend","UsbDevice","UsbDeviceBuilder","UsbDeviceState","UsbVidPid","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","bus","clone","composite_with_iads","device_class","device_protocol","device_release","device_sub_class","eq","fmt","force_reset","from","from","from","from","into","into","into","into","manufacturer","max_packet_size_0","max_power","new","poll","product","remote_wakeup_enabled","self_powered","self_powered","serial_number","set_self_powered","state","supports_remote_wakeup","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Bulk","Control","DIRECTION","Endpoint","EndpointAddress","EndpointDirection","EndpointIn","EndpointOut","EndpointType","In","Interrupt","Isochronous","Out","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","direction","ep_type","eq","eq","fmt","fmt","from","from","from","from","from","from","from_parts","index","interval","into","into","into","into","into","is_in","is_out","max_packet_size","read","stall","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unstall","write","UsbDevice","UsbDeviceBuilder","UsbDeviceState","UsbError","UsbVidPid","CUSTOM_STRING","INTERFACE_STRING","LONG_DATA","MANUFACTURER","PID","PRODUCT","REQ_READ_BUFFER","REQ_READ_LONG_DATA","REQ_SET_BENCH_ENABLED","REQ_STORE_REQUEST","REQ_UNKNOWN","REQ_WRITE_BUFFER","SERIAL_NUMBER","TestClass","VID","borrow","borrow_mut","control_in","control_out","endpoint_in_complete","endpoint_out","from","get_configuration_descriptors","get_string","into","make_device","make_device_builder","new","poll","reset","try_from","try_into","type_id"],"q":["usb_device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::bus","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::bus::PollResult","","","usb_device::class","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::class_prelude","","","","","","","","","","","","","","","usb_device::control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::descriptor::capability_type","","","","","usb_device::descriptor::descriptor_type","","","","","","","","usb_device::descriptor::lang_id","usb_device::device","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::endpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","usb_device::prelude","","","","","usb_device::test_class","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A buffer too short for the data to read was passed, or …","Classes attempted to allocate more packet buffer memory …","Classes attempted to allocate more endpoints than the …","Device to host (IN)","The endpoint address is invalid or already used.","Operation is not valid in the current state of the object.","Host to device (OUT)","Parsing failed due to invalid input.","Result for USB operations.","Operation is not supported by device or configuration.","Direction of USB traffic. Note that in the USB standard …","A USB stack error.","An operation would block because the device is currently …","","","","","For implementing peripheral drivers.","For implementing standard as well as vendor-specific USB …","Prelude for class implementors.","","USB control transfers and the SETUP packet.","Creating USB descriptors","USB composite device.","USB endpoints.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Prelude for device implementors.","Test USB class for testing USB driver implementations. …","","","","","","","USB packets have been received or sent. Each data field is …","A handle for a USB interface that contains its number.","No events or packets to report.","Event and incoming packet information returned by …","Indicates that <code>set_device_address</code> must be called before …","The USB reset condition has been detected.","A USB resume request has been detected after being …","A handle for a USB string descriptor that contains its …","A USB suspend request has been detected or, in the case of …","A trait for device-specific USB peripherals. Implement …","Helper type used for UsbBus resource allocation and …","Allocates an endpoint with the specified direction and …","Allocates an endpoint and specified endpoint parameters. …","","","","","","","","","Allocates a bulk endpoint.","","","Allocates a control endpoint.","Enables and initializes the USB peripheral. Soon after …","","","Simulates a disconnect from the USB bus, causing the host …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Allocates a new interface number.","Allocates an interrupt endpoint.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets whether the STALL condition is set for an endpoint.","Creates a new <code>UsbBusAllocator</code> that wraps the provided …","Gets information about events and incoming data. Usually …","Reads a single packet of data from the specified endpoint …","Called when the host resets the device. This will be soon …","Resumes from suspend mode. This may only be called after …","Sets the device USB address to <code>addr</code>.","Sets or clears the STALL condition for an endpoint. If the …","Allocates a new string index.","Causes the USB peripheral to enter USB suspend mode, …","","","","","","","","","","","","","Writes a single packet of data to the specified endpoint …","An IN packet has finished transmitting. This event should …","An OUT packet has been received. This event should …","A SETUP packet has been received. This event should …","Handle for a control IN transfer. When implementing a …","Handle for a control OUT transfer. When implementing a …","A trait for implementing USB classes.","Accepts the transfer with a callback that can write to the …","Accepts the transfer by succesfully responding to the …","Accepts the transfer with the supplied buffer.","Accepts the transfer with the supplied static buffer. This …","","","","","Called when a control request is received with direction …","Called when a control request is received with direction …","Gets the data from the data stage of the request. May be …","Called when endpoint with address <code>addr</code> has completed …","Called when endpoint with address <code>addr</code> has received data …","Called when endpoint with address <code>addr</code> has received a …","Returns the argument unchanged.","Returns the argument unchanged.","Called when a GET_DESCRIPTOR request is received for a BOS …","Called when a GET_DESCRIPTOR request is received for a …","Gets a class-specific string descriptor.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Called whenever the <code>UsbDevice</code> is polled.","Rejects the transfer by stalling the pipe.","Rejects the transfer by stalling the pipe.","Gets the request from the SETUP packet.","Gets the request from the SETUP packet.","Called after a USB reset after the bus reset sequence is …","","","","","","","","","","","","","","","","","","","","","","Standard USB control request Clear Feature","Request is intended for a USB class.","Request is intended for the entire device.","Request is intended for an endpoint. Generally, the <code>index</code> …","Standard USB feature Device Remote Wakeup for Set/Clear …","Standard USB feature Endpoint Halt for Set/Clear Feature","Standard USB control request Get Configuration","Standard USB control request Get Descriptor","Standard USB control request Get Interface","Standard USB control request Get Status","Request is intended for an interface. Generally, the <code>index</code> …","None of the above.","Control request recipient.","A control request read from a SETUP packet.","Control request type.","Reserved.","Reserved.","Standard USB control request Set Address","Standard USB control request Set Configuration","Standard USB control request Set Descriptor","Standard USB control request Set Feature","Standard USB control request Set Interface","Standard USB control request Synch Frame","Request is a USB standard request. Usually handled by …","Request is vendor-specific.","","","","","","","","","","Gets the descriptor type and index from the value field of …","Direction of the request.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Request index. The meaning of the value depends on the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Length of the DATA stage. For control OUT transfers this …","Recipient of the request.","Request code. The meaning of the value depends on the …","Type of the request.","","","","","","","","","","Request value. The meaning of the value depends on the …","A writer for Binary Object Store descriptor.","A writer for USB descriptors.","","","","","Writes capability descriptor to a BOS","Standard capability descriptor types","Standard descriptor types","Writes an endpoint descriptor.","Writes an endpoint descriptor with extra trailing data.","Returns the argument unchanged.","Returns the argument unchanged.","Writes a interface association descriptor. Call from …","Writes a interface descriptor.","Writes a interface descriptor with a specific alternate …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","String descriptor language IDs.","Gets the current position in the buffer, i.e. the number …","","","","","","","Writes an arbitrary (usually class-specific) descriptor.","Writes an arbitrary (usually class-specific) descriptor by …","","","","","","","","","","","","","","English (US)","The USB device has received an address from the host.","The bConfiguration value for the not configured state.","The bConfiguration value for the single configuration …","The USB device has been configured and is fully functional.","The default value for bAlternateSetting for all interfaces.","The USB device has just been created or reset.","The USB device has been suspended by the host or it has …","A USB device consisting of one or more device classes.","Used to build new <code>UsbDevice</code>s.","The global state of the USB device.","A USB vendor ID and product ID pair.","","","","","","","","","Creates the <code>UsbDevice</code> instance with the configuration in …","Gets a reference to the <code>UsbBus</code> implementation used by this …","","Configures the device as a composite device with interface …","Sets the device class code assigned by USB.org. Set to <code>0xff</code>…","Sets the device protocol code. Depends on class and …","Sets the device release version in BCD.","Sets the device sub-class code. Depends on class.","","","Simulates a disconnect from the USB bus, causing the host …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the manufacturer name string descriptor.","Sets the maximum packet size in bytes for the control …","Sets the maximum current drawn from the USB bus by the …","Creates a builder for constructing a new <code>UsbDevice</code>.","Polls the <code>UsbBus</code> for new events and dispatches them to the …","Sets the product name string descriptor.","Gets whether host remote wakeup has been enabled by the …","Gets whether the device is currently self powered.","Sets whether the device may have an external power source.","Sets the serial number string descriptor.","Sets whether the device is currently self powered.","Gets the current state of the device.","Sets whether the device supports remotely waking up the …","","","","","","","","","","","","","Bulk endpoint. Used for large amounts of best-effort …","Control endpoint. Used for device management. Only the …","Direction value of the marker type.","Handle for a USB endpoint. The endpoint direction is …","Type-safe endpoint address.","Trait for endpoint type markers.","A device-to-host (IN) endpoint.","A host-to-device (OUT) endpoint.","USB endpoint transfer type. The values of this enum can be …","Marker type for IN endpoints.","Interrupt endpoint. Used for small amounts of …","Isochronous endpoint. Used for time-critical unreliable …","Marker type for OUT endpoints.","Gets the endpoint address including direction bit.","","","","","","","","","","","","","Gets the direction part of the address.","Gets the endpoint transfer type.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Constructs a new EndpointAddress with the given index and …","Gets the index part of the endpoint address.","Gets the poll interval for interrupt endpoints.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the direction is IN, otherwise false.","Returns true if the direction is OUT, otherwise false.","Gets the maximum packet size for the endpoint.","Reads a single packet of data from the specified endpoint …","Sets the STALL condition for the endpoint.","","","","","","","","","","","","","","","","Clears the STALL condition of the endpoint.","Writes a single packet of data to the specified endpoint …","","Used to build new <code>UsbDevice</code>s.","","","A USB vendor ID and product ID pair.","","","","","","","","","","","","","","Test USB class for testing USB driver implementations. …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Convenience method to create a UsbDevice that is …","Convenience method to create a UsbDeviceBuilder that is …","Creates a new TestClass.","Must be called after polling the UsbDevice.","","","",""],"i":[3,3,3,1,3,3,1,3,0,3,0,0,3,3,1,3,1,0,0,0,1,0,0,0,0,1,3,1,3,1,1,3,1,0,0,3,1,3,1,3,1,20,0,20,0,9,20,20,0,20,0,0,10,9,10,20,18,19,10,20,18,19,10,18,19,10,9,18,19,9,10,20,18,19,10,10,10,20,18,19,9,10,9,9,9,9,9,9,10,9,10,20,18,19,10,20,18,19,10,20,18,19,9,38,38,38,0,0,0,22,24,22,22,22,24,22,24,39,39,24,39,39,39,22,24,39,39,39,22,24,39,22,24,22,24,39,22,24,22,24,22,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,30,30,28,28,28,28,28,28,30,30,0,0,0,29,30,28,28,28,28,28,28,29,29,29,30,28,29,30,28,29,30,28,28,28,29,30,28,29,30,28,29,30,28,28,29,30,28,28,28,28,28,29,30,28,29,30,28,29,30,28,28,0,0,26,25,26,25,25,0,0,26,26,26,25,26,26,26,26,25,0,26,26,25,26,25,26,25,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,33,0,33,33,0,0,0,0,32,34,31,33,32,34,31,33,31,32,33,31,31,31,31,31,33,33,32,32,34,31,33,32,34,31,33,31,31,31,31,32,31,32,32,31,31,32,32,31,32,34,31,33,32,34,31,33,32,34,31,33,13,13,15,0,0,0,0,0,0,0,13,13,0,16,35,36,16,13,11,35,36,16,13,11,13,11,11,16,13,11,13,11,35,36,16,13,11,11,11,11,16,35,36,16,13,11,11,11,16,16,16,35,36,16,13,11,35,36,16,13,11,35,36,16,13,11,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[1,1],0,0,0,0,[[1,1],2],[[3,4],5],[[1,4],5],[[]],[[]],[6,1],[[]],[[]],0,0,[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,[[[10,[9]],[12,[11]],13,14,6],[[17,[[16,[9,15]]]]]],[[1,[12,[11]],13,14,6],[[17,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]],14],[[16,[9,15]]]],[18,18],[19,19],[[[10,[9]],14],[[16,[9,15]]]],[[]],[[18,18],2],[[19,19],2],[[],17],[[]],[[]],[[]],[[]],[[[10,[9]]],18],[[[10,[9]],14,6],[[16,[9,15]]]],[[]],[[]],[[]],[[]],[11,2],[9,[[10,[9]]]],[[],20],[11,[[17,[21]]]],[[]],[[]],[6],[[11,2]],[[[10,[9]]],19],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[11,[[17,[21]]]],0,0,0,0,0,0,[[[22,[9]],23],17],[[[24,[9]]],17],[[[22,[9]]],17],[[[22,[9]]],17],[[]],[[]],[[]],[[]],[22],[24],[[[24,[9]]]],[11],[11],[11],[[]],[[]],[25,17],[26,17],[[19,14],[[12,[27]]]],[[]],[[]],[[]],[[[22,[9]]],17],[[[24,[9]]],17],[[[22,[9]]],28],[[[24,[9]]],28],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[30,30],[28,28],[28],0,[[29,29],2],[[30,30],2],[[28,28],2],[[29,4],5],[[30,4],5],[[28,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,0,0,[[]],[[]],[[]],[[]],[[25,6],17],0,0,[[26,16],17],[[26,16,23],17],[[]],[[]],[[26,18,6,6,6,6],17],[[26,18,6,6,6],17],[[26,18,6,6,6,6,[12,[19]]],17],[[]],[[]],0,[26,21],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[26,6],17],[[26,6,23],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[9]]],[[32,[9]]]],[[[32,[9]]]],[33,33],[[[31,[9]]],[[31,[9]]]],[[[31,[9]],6],[[31,[9]]]],[[[31,[9]],6],[[31,[9]]]],[[[31,[9]],14],[[31,[9]]]],[[[31,[9]],6],[[31,[9]]]],[[33,33],2],[[33,4],5],[[[32,[9]]],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[9]],27],[[31,[9]]]],[[[31,[9]],6],[[31,[9]]]],[[[31,[9]],21],[[31,[9]]]],[[10,34],[[31,[9]]]],[[[32,[9]]],2],[[[31,[9]],27],[[31,[9]]]],[[[32,[9]]],2],[[[32,[9]]],2],[[[31,[9]],2],[[31,[9]]]],[[[31,[9]],27],[[31,[9]]]],[[[32,[9]],2]],[[[32,[9]]],33],[[[31,[9]],2],[[31,[9]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[16,[9,15]]],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[11,11],[11,1],[[[16,[9,15]]],13],[[13,13],2],[[11,11],2],[[13,4],5],[[11,4],5],[[]],[[]],[[]],[[]],[[]],[6,11],[[21,1],11],[11,21],[[[16,[9,15]]],6],[[]],[[]],[[]],[[]],[[]],[11,2],[11,2],[[[16,[9,15]]],14],[[[16,[9,35]]],[[17,[21]]]],[[[16,[9,15]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[[16,[9,15]]]],[[[16,[9,36]]],[[17,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[37,[9]],[22,[9]]]],[[[37,[9]],[24,[9]]]],[[[37,[9]],11]],[[[37,[9]],11]],[[]],[[[37,[9]],26],17],[[[37,[9]],19,14],[[12,[27]]]],[[]],[[[37,[9]],10],[[32,[9]]]],[[[37,[9]],10],[[31,[9]]]],[10,[[37,[9]]]],[[[37,[9]]]],[[[37,[9]]]],[[],7],[[],7],[[],8]],"p":[[4,"UsbDirection"],[15,"bool"],[4,"UsbError"],[3,"Formatter"],[6,"Result"],[15,"u8"],[4,"Result"],[3,"TypeId"],[8,"UsbBus"],[3,"UsbBusAllocator"],[3,"EndpointAddress"],[4,"Option"],[4,"EndpointType"],[15,"u16"],[8,"EndpointDirection"],[3,"Endpoint"],[6,"Result"],[3,"InterfaceNumber"],[3,"StringIndex"],[4,"PollResult"],[15,"usize"],[3,"ControlIn"],[8,"FnOnce"],[3,"ControlOut"],[3,"BosWriter"],[3,"DescriptorWriter"],[15,"str"],[3,"Request"],[4,"RequestType"],[4,"Recipient"],[3,"UsbDeviceBuilder"],[3,"UsbDevice"],[4,"UsbDeviceState"],[3,"UsbVidPid"],[3,"Out"],[3,"In"],[3,"TestClass"],[13,"Data"],[8,"UsbClass"]]},\
"usbd_serial":{"doc":"CDC-ACM USB serial port implementation for usb-device.","t":[13,3,3,13,13,13,13,13,3,13,13,13,13,13,4,13,6,3,13,4,13,17,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BufferOverflow","CdcAcmClass","DefaultBufferStore","EndpointMemoryOverflow","EndpointOverflow","Event","InvalidEndpoint","InvalidState","LineCoding","Mark","None","Odd","One","OnePointFive","ParityType","ParseError","Result","SerialPort","Space","StopBits","Two","USB_CLASS_CDC","Unsupported","UsbError","WouldBlock","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","control_in","control_in","control_out","control_out","data_bits","data_rate","default","dtr","dtr","endpoint_in_complete","eq","eq","flush","flush","fmt","from","from","from","from","from","from","from","from","from","get_configuration_descriptors","get_configuration_descriptors","into","into","into","into","into","into","into","line_coding","line_coding","max_packet_size","new","new","new_with_store","parity_type","read","read","read_packet","reset","reset","rts","rts","stop_bits","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write_packet"],"q":["usbd_serial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A buffer too short for the data to read was passed, or …","Packet level implementation of a CDC-ACM serial port.","Default backing store for the mediocre buffer","Classes attempted to allocate more packet buffer memory …","Classes attempted to allocate more endpoints than the …","","The endpoint address is invalid or already used.","Operation is not valid in the current state of the object.","Line coding parameters","","","","1 stop bit","1.5 stop bits","Parity for LineCoding","Parsing failed due to invalid input.","Result for USB operations.","USB (CDC-ACM) serial port with built-in buffering to …","","Number of stop bits for LineCoding","2 stop bits","This should be used as <code>device_class</code> when building the …","Operation is not supported by device or configuration.","A USB stack error.","An operation would block because the device is currently …","","","","","","","","","","","","","","","","","","","","","","","","","Gets the number of data bits for UART communication.","Gets the data rate in bits per second for UART …","","Gets the DTR (data terminal ready) state","Gets the DTR (data terminal ready) state","","","","Sends as much as possible of the current write buffer. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Gets the current line coding. The line coding contains …","Gets the current line coding.","Gets the maximum packet size in bytes.","Creates a new CdcAcmClass with the provided UsbBus and …","Creates a new USB serial port with the provided UsbBus and …","Creates a new USB serial port with the provided UsbBus and …","Gets the parity type for UART communication.","Reads bytes from the port into <code>data</code> and returns the number …","","Reads a single packet from the OUT endpoint.","","","Gets the RTS (request to send) state","Gets the RTS (request to send) state","Gets the number of stop bits for UART communication.","","","","","","","","","","","","","","","","","","","","","","","","Writes bytes from <code>data</code> into the port and returns the …","","Writes a single packet into the IN endpoint."],"i":[16,0,0,16,16,3,16,16,0,3,3,3,2,2,0,16,0,0,3,0,2,0,16,0,16,1,1,5,9,7,2,3,16,1,1,5,9,7,2,3,16,2,3,2,3,5,7,5,7,9,9,9,5,7,7,2,3,7,7,16,1,5,9,7,2,2,3,3,16,5,7,1,5,9,7,2,3,16,5,7,5,5,7,7,9,7,7,5,5,7,5,7,9,2,3,1,5,9,7,2,3,16,1,5,9,7,2,3,16,1,5,9,7,2,3,16,7,7,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[[]],[[]],[[[5,[4]],[6,[4]]]],[[7,6]],[[[5,[4]],[8,[4]]]],[[7,8]],[9,10],[9,11],[[],9],[[[5,[4]]],12],[7,12],[[7,13]],[[2,2],12],[[3,3],12],[7,14],[7,15],[[16,17],[[19,[18]]]],[[]],[[]],[[]],[[]],[10,2],[[]],[10,3],[[]],[[]],[[[5,[4]],20],14],[[7,20],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],9],[7,9],[[[5,[4]]],21],[[22,21],[[5,[4]]]],[22,[[7,[1,1]]]],[22,7],[9,3],[7,[[14,[23]]]],[7,[[15,[10]]]],[[[5,[4]]],[[14,[23]]]],[[[5,[4]]]],[7],[[[5,[4]]],12],[7,12],[9,2],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[7,[[14,[23]]]],[[7,10],15],[[[5,[4]]],[[14,[23]]]]],"p":[[3,"DefaultBufferStore"],[4,"StopBits"],[4,"ParityType"],[8,"UsbBus"],[3,"CdcAcmClass"],[3,"ControlIn"],[3,"SerialPort"],[3,"ControlOut"],[3,"LineCoding"],[15,"u8"],[15,"u32"],[15,"bool"],[3,"EndpointAddress"],[6,"Result"],[6,"Result"],[4,"UsbError"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"DescriptorWriter"],[15,"u16"],[3,"UsbBusAllocator"],[15,"usize"],[3,"TypeId"]]},\
"void":{"doc":"Void","t":[8,8,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,10],"n":["ResultVoidErrExt","ResultVoidExt","Void","borrow","borrow_mut","cause","clone","clone_into","description","eq","fmt","fmt","from","into","partial_cmp","provide","to_owned","to_string","try_from","try_into","type_id","unreachable","void_unwrap","void_unwrap_err"],"q":["void","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Extensions to <code>Result&lt;Void, E&gt;</code>","Extensions to <code>Result&lt;T, Void&gt;</code>","The empty type for cases which can’t occur.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","A safe version of <code>intrinsincs::unreachable</code>.","Get the value out of a wrapper.","Get the error out of a wrapper."],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,14,15],"f":[0,0,0,[[]],[[]],[1,[[3,[2]]]],[1,1],[[]],[1,4],[1,5],[[1,6],7],[[1,6],7],[[]],[[]],[1,[[3,[8]]]],[9],[[]],[[],10],[[],11],[[],11],[[],12],[1,13],[[]],[[]]],"p":[[4,"Void"],[8,"Error"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Ordering"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"never"],[8,"ResultVoidExt"],[8,"ResultVoidErrExt"]]},\
"weezl":{"doc":"LZW decoder and encoder","t":[4,3,13,13,13,4,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitOrder","BufferResult","Done","InvalidCode","Lsb","LzwError","LzwStatus","Msb","NoProgress","Ok","StreamResult","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","bytes_written","clone","clone","clone","clone_into","clone_into","clone_into","consumed_in","consumed_out","decode","encode","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","provide","status","status","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Decoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","decode","decode","decode_all","decode_all","decode_bytes","from","from","from","has_ended","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch","Encoder","IntoStream","IntoVec","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","encode","encode","encode","encode_all","encode_all","encode_bytes","finish","from","from","from","into","into","into","into_stream","into_vec","new","reset","set_buffer","set_buffer_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_tiff_size_switch"],"q":["weezl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weezl::decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weezl::encode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The order of bits in bytes.","The result of a coding operation on a pair of buffer.","No more data will be produced because an end marker was …","The input contained an invalid code.","The least significant bit is processed first.","The error kind after unsuccessful coding of an LZW stream.","The status after successful coding of an LZW stream.","The most significant bit is processed first.","No bytes were read or written and no internal state …","Everything went well.","The result of coding into an output stream.","","","","","","","","","","","The total number of bytes consumed from the reader.","The total number of bytes written into the writer.","","","","","","","The number of bytes consumed from the input buffer.","The number of bytes written into the output buffer.","A module for all decoding needs.","A module for all encoding needs.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The status after returning from the write call.","The possible error that occurred.","","","","","","","","","","","","","","","","","","","","The state for decoding data with an LZW algorithm.","A decoding stream sink.","A decoding sink into a vector.","","","","","","","Decode a single chunk of lzw encoded data.","Decode data from a reader.","Decode data from a slice.","Decode data from a reader, requiring an end marker.","Decode data from a slice, requiring an end marker.","Decode some bytes from <code>inp</code> and write result to <code>out</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Check if the decoding has finished.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a decoder into a writer.","Construct a decoder into a vector.","Create a new decoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate decode buffer.","Set the size of the intermediate decode buffer.","","","","","","","","","","Create a TIFF compatible decoder with the specified bit …","The state for encoding data with an LZW algorithm.","A encoding stream sink.","A encoding sink into a vector.","","","","","","","Encode a single chunk of data.","Encode data from a reader.","Encode data from a slice.","Encode data from a reader and an end marker.","Decode data from a reader, adding an end marker.","Encode some bytes from <code>inp</code> into <code>out</code>.","Mark the encoding as in the process of finishing.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a encoder into a writer.","Construct an encoder into a vector.","Create a new encoder with the specified bit order and …","Reset all internal state.","Use a particular buffer as an intermediate encode buffer.","Set the size of the intermediate encode buffer.","","","","","","","","","","Create a TIFF compatible encoder with the specified bit …"],"i":[0,0,2,3,1,0,0,1,2,2,0,18,16,1,2,3,18,16,1,2,3,16,16,1,2,3,1,2,3,18,18,0,0,1,2,3,3,18,16,1,2,3,18,16,1,2,3,3,18,16,1,2,3,3,18,16,1,2,3,18,16,1,2,3,18,16,1,2,3,0,0,0,10,14,17,10,14,17,10,14,17,14,17,10,10,14,17,10,10,14,17,10,10,10,10,14,14,10,14,17,10,14,17,10,14,17,10,0,0,0,21,22,23,21,22,23,21,22,23,22,23,21,21,21,22,23,21,22,23,21,21,21,21,22,22,21,22,23,21,22,23,21,22,23,21],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,0,0,[[1,4],5],[[2,4],5],[[3,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],0,0,[[]],[[]],[[]],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[10,[[8,[[12,[11]],3]]]],[[[14,[13]],15],16],0,[[[14,[13]],15],16],0,[10,18],[[]],[[]],[[]],[10,19],[[]],[[]],[[]],[[10,13],[[14,[13]]]],[[10,12],17],[[1,11],10],[10],[[[14,[13]]]],[[[14,[13]],20]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[1,11],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[21,[[8,[[12,[11]],3]]]],[[[22,[13]],15],16],0,[[[22,[13]],15],16],0,[21,18],[21],[[]],[[]],[[]],[[]],[[]],[[]],[[21,13],[[22,[13]]]],[[21,12],23],[[1,11],21],[21],[[[22,[13]]]],[[[22,[13]],20]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[1,11],21]],"p":[[4,"BitOrder"],[4,"LzwStatus"],[4,"LzwError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Decoder"],[15,"u8"],[3,"Vec"],[8,"Write"],[3,"IntoStream"],[8,"BufRead"],[3,"StreamResult"],[3,"IntoVec"],[3,"BufferResult"],[15,"bool"],[15,"usize"],[3,"Encoder"],[3,"IntoStream"],[3,"IntoVec"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
